{"version":3,"sources":["auth.ts","authProvider.ts","dataProvider.ts","layout/Logo.tsx","notifications/NotificationButton.tsx","layout/AppBar.tsx","layout/SubMenu.tsx","companies/sectors.ts","companies/CompanyAvatar.tsx","companies/CountryField.tsx","companies/CompanyCard.tsx","companies/CompanyGridList.tsx","companies/relations.ts","tags/TagChip.tsx","components/CollapsibleListFilter.tsx","companies/CompanyListFilter.tsx","companies/SelectAllButton.tsx","companies/CompanyList.tsx","companies/sizes.ts","companies/DistributorInput.tsx","companies/CompanyCreate.tsx","contacts/Avatar.tsx","misc/Status.tsx","tags/TagsList.tsx","companies/LogoField.tsx","tags/colors.ts","components/RoundButton.tsx","tags/TagsListEdit.tsx","components/CollapsibleAside.tsx","products/ProductsListEdit.tsx","companies/CompanyAside.tsx","deals/stages.ts","notes/StatusSelector.tsx","notes/NewNote.tsx","notes/Note.tsx","notes/NotesIterator.tsx","products/ProductAvatar.tsx","products/ProductCard.tsx","products/ProductGridList.tsx","companies/CompanyShow.tsx","companies/CompanyEdit.tsx","companies/index.ts","contacts/ContactAside.tsx","contacts/ContactShow.tsx","contacts/ContactListFilter.tsx","contacts/ContactList.tsx","contacts/ContactEdit.tsx","contacts/ContactCreate.tsx","contacts/index.tsx","tasks/TaskAside.tsx","tasks/status.ts","tasks/TaskChip.tsx","tasks/TaskShow.tsx","tasks/TaskStatus.tsx","tasks/TaskListFilter.tsx","tasks/MarkDoneButton.tsx","tasks/TaskList.tsx","tasks/TaskEdit.tsx","tasks/TaskCreate.tsx","tasks/index.ts","deals/DealCard.tsx","deals/DealColumn.tsx","deals/DealListContent.tsx","deals/types.ts","deals/DealCreate.tsx","deals/ContactList.tsx","deals/DealShow.tsx","deals/OnlyMineInput.tsx","deals/DealList.tsx","deals/index.ts","productFamilies/categories.ts","products/ProductListFilter.tsx","products/ProductList.tsx","products/CreatePropertyType.tsx","products/PropertyFormIterator.tsx","productFamilies/CreateProductFamily.tsx","products/ProductCreate.tsx","products/ProductImageField.tsx","products/ProductAside.tsx","products/ProductShow.tsx","products/ProductEdit.tsx","products/index.ts","productFamilies/Avatar.tsx","productFamilies/ProductFamilyListFilter.tsx","productFamilies/ProductFamilyList.tsx","productFamilies/ProductFamilyCreate.tsx","productFamilies/ProductFamilyAside.tsx","productFamilies/ProductFamilyEdit.tsx","productFamilies/ProductFamilyShow.tsx","productFamilies/index.ts","layout/Menu.tsx","layout/themes.ts","notifications/NotificationContainer.tsx","layout/Layout.tsx","layout/Login.tsx","dashboard/HotContacts.tsx","dashboard/LatestNotes.tsx","dashboard/CompaniesMap.tsx","dashboard/Dashboard.tsx","auth/RegisterForm.tsx","auth/RegisterPage.tsx","configuration/actions.ts","configuration/Configuration.tsx","customRoutes.tsx","i18n/en.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["CREDENTIALS_LOCAL_STORAGE_ITEM","setCredentials","credentials","localStorage","setItem","JSON","stringify","getCredentials","raw","getItem","parse","isTokenValid","access_token","currentDate","Date","decodedToken","decodeJwt","exp","getTime","baseURL","refreshToken","a","token","refresh_token","config","headers","Authorization","axios","post","undefined","response","data","login","username","password","permissions","Promise","resolve","reject","message","msg","status","logout","get","removeItem","register","first_name","last_name","email","getIdentity","id","fullName","avatar","checkError","authProvider","checkAuth","getPermissions","refreshTokenIfInvalid","getList","resource","params","getOne","getMany","getManyReference","create","update","put","updateMany","deleteOne","delete","deleteMany","dataProvider","useStyles","makeStyles","theme","root","display","breakpoints","down","spacing","logoIcon","color","palette","secondary","light","logoText","primary","Logo","classes","className","Typography","variant","NotificationButton","props","redirect","useRedirect","identity","useGetIdentity","React","anchorEl","setAnchorEl","now","useGetList","page","perPage","field","order","sales_id","ids","hasNotification","loaded","length","IconButton","onClick","event","currentTarget","Badge","badgeContent","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","MenuItem","handleNotificationClick","ListItemAvatar","ListItemText","text","formatDistance","due_date","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","ref","useTranslate","MenuItemLink","to","primaryText","leftIcon","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","AppBar","elevation","userMenu","icon","minWidth","transition","paddingLeft","sidebarIsClosed","SubMenu","handleToggle","isOpen","name","children","dense","translate","useSelector","state","admin","ui","sidebarOpen","header","button","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","sectors","sector","width","height","backgroundColor","img","objectFit","small","large","CompanyAvatar","record","size","logo","src","process","alt","imgProps","clsx","image","sizeInPixel","medium","CountryField","source","ImageField","paper","flexDirection","justifyContent","padding","position","alignItems","textAlign","marginTop","stats","singleStat","statIcon","marginRight","checkbox","top","right","identifier","lrft","CompanyCard","useState","setElevation","useListContext","onToggleItem","selectedIds","Link","linkToRecord","underline","onMouseEnter","onMouseLeave","Paper","Checkbox","edge","checked","includes","tabIndex","disableRipple","e","stopPropagation","Box","ReferenceField","reference","link","relation","Chip","label","SelectField","choices","style","marginBottom","nb_contacts","nb_notes","gridList","flexWrap","gap","grey","LoadingGridList","nbChildren","fn","key","Array","from","_","LoadedGridList","CompanyGridList","relations","TagChip","border","cursor","sideBig","marginLeft","sideSmall","up","container","drawerContent","maxWidth","CollapsibleListFilter","setOpen","childrenWithProps","child","Drawer","anchor","countryList","maxHeight","tagList","CompanyListFilter","tags","tagIds","countries","countryIds","FilterLiveSearch","FilterList","FilterListItem","value","nicename","country_id","SelectAllButton","onSelect","Button","toolbar","createButton","importOptions","parseConfig","dynamicTyping","CompanyListActions","TopToolbar","SortButton","fields","ExportButton","CreateButton","basePath","sizes","DistributorInput","AutocompleteInput","optionText","country_iso","allowEmpty","resettable","inline","CustomLayout","CardContent","paddingTop","ml","CustomDivider","mb","Divider","Avatar","charAt","getColorFromStatus","Status","borderRadius","bgcolor","ColoredChipField","ChipField","TagsList","ReferenceArrayField","SingleFieldList","linkType","LogoField","colors","margin","RoundButton","handleClick","selected","type","TagsListEdit","newTagName","setNewTagName","newTagColor","setNewTagColor","version","setVersion","disabled","setDisabled","allTags","useGetMany","enabled","useUpdate","useCreate","unselectedTagIds","filter","handleAddTag","handleOpenCreateDialog","tag","mt","onDelete","tagId","handleDeleteTag","Dialog","onSubmit","preventDefault","onSuccess","v","DialogTitle","DialogContent","autoFocus","fullWidth","onChange","target","DialogActions","CollapsibleAside","EditButton","ShowButton","ProductsListEdit","refresh","useRefresh","use_products","products","handleClose","product","productId","handleDeleteProduct","model","Popover","toString","values","SimpleForm","ReferenceArrayInput","AutocompleteArrayInput","CompanyAside","AsideContent","href","website","rel","linkedIn","TextField","distributor_id","phone_number","DateField","options","year","month","day","FunctionField","render","stages","stageNames","opportunity","won","lost","delayed","stageChoices","StatusSelector","setStatus","select","buttonSwitcher","previewConatiner","previewRaw","previewMarkdown","paddingRight","borderColor","main","preview","NewNote","showStatus","setPreview","useRecordContext","useResourceContext","setText","getCurrentDate","date","setDate","loading","notify","useNotify","foreignKeyMapping","last_seen","multiline","remarkPlugins","remarkGfm","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","contacts","deals","companies","metadata","textarea","paddingBottom","lineHeight","buttons","cancel","content","paragraph","fontFamily","typography","fontSize","body1","visibility","Note","note","isLast","isHover","setHover","isEditing","setEditing","noteText","setNoteText","useDelete","mutationMode","handleDelete","showTime","locales","dateStyle","timeStyle","FilledInput","NotesIterator","index","ProductAvatar","family","left","hidden","ProductCard","classNames","nb_properties","Skeleton","animation","ProductGridList","CompanyShowContent","useShowContext","setValue","Card","gridGap","Tabs","indicatorColor","textColor","newValue","scrollButtons","Tab","nb_deals","nb_products","ReferenceManyField","sort","pagination","Pagination","rowsPerPageOptions","TabPanel","other","role","ContactsIterator","contact","ListItem","RouterLink","ListItemSecondaryAction","CreateRelatedContactButton","pathname","company_id","startIcon","CreateRelatedProductButton","DealsIterator","deal","stage","amount","toLocaleString","notation","currency","currencyDisplay","minimumSignificantDigits","updated_at","list","actions","aside","filterDefaultValues","Create","initialValues","TextInput","validate","required","SelectInput","formClassName","FormDataConsumer","formData","ReferenceInput","helperText","sales","edit","show","ShowBase","BusinessIcon","ContactAside","TasksIterator","task","disableGutters","EmailField","gender","background","ContactShowContent","ContactListFilter","last_seen_gte","endOfYesterday","last_seen_lte","startOfWeek","startOfMonth","subMonths","ContactListContent","SimpleListLoading","hasLeftAvatarOrIcon","hasSecondaryText","ContactListActions","Spacer","ContactEditContent","useEditContext","save","FormWithRedirect","formProps","mr","BooleanInput","Toolbar","omit","EditBase","transform","ContactsIcon","TaskAside","statuses","getStatus","find","TaskChip","statusItem","statusName","statusColor","doneStatus","TaskShowContent","DoneButton","TaskStatus","TaskListFilter","due_date_gte","due_date_lte","endOfToday","endOfWeek","endOfMonth","doneState","MarkDoneButton","BulkUpdateButton","TaskListContent","useActionStyles","TaskListActions","TaskBulkActionButtons","BulkDeleteButton","TaskEditContent","DateInput","bulkActionButtons","FormatListBulletedIcon","cardContent","cardText","DealCard","draggableId","String","provided","snapshot","draggableProps","dragHandleProps","innerRef","opacity","isDragging","p","gutterBottom","borderTopLeftRadius","borderTopRightRadius","droppable","DealColumn","dealIds","align","droppableId","droppableProvided","droppableProps","isDraggingOver","placeholder","initialDeals","reduce","obj","getDealsByColumn","columns","acc","push","forEach","b","DealListContent","currentSort","filterValues","setDeals","useContext","DataProviderContext","useMutation","payload","useEffect","newDeals","isEqual","onDragEnd","result","destination","column","sourceDeal","destinationDeal","splice","Number","columnDeals","all","previousData","sourceColumn","destinationColumn","sourceDeals","destinationDeals","pop","typeChoices","DealCreate","useDataProvider","then","oldDeal","rows","defaultValue","NumberInput","ul","listStyle","li","ContactList","dialog","DealShow","DealShowContent","format","start_at","minHeight","description","OnlyMineInput","alwaysOn","useListFilterContext","displayedFilters","setFilters","FormControlLabel","control","Switch","newFilterValues","defaultProps","dealFilters","SearchInput","DealActions","FilterButton","filters","path","match","MonetizationOnIcon","categories","category","familyList","categoryList","ProductListFilter","familyData","familyIds","family_id","ProductListActions","CreatePropertyType","useCreateSuggestionContext","onCancel","onCreate","setName","unit","setUnit","synonyms","setSynonyms","PropertyFormIterator","SimpleFormIterator","CreateProductFamily","setCategory","setWebsite","setImage","Select","propertyContainer","ProductImageField","ProductAside","ProductShowContent","nb_used_by","addLabel","Datagrid","useTheme","TabbedForm","FormTab","ArrayInput","FiberManualRecordIcon","ProductFamilyListFilter","ProductFamilyListContent","ProductFamilyListActions","ProductFamilyAside","ProductFamilyEditContent","ProductFamilyShowContent","CategoryIcon","transitions","easing","sharp","duration","leavingScreen","closed","Menu","menuCrm","menuProduct","menuCustomers","setState","menu","classnames","DashboardMenuItem","_scrollToTop","tasks","productFamilies","darkTheme","sidebar","overrides","MuiAppBar","colorSecondary","MuiButtonBase","lightTheme","dark","contrastText","default","shape","RaMenuItemLink","borderLeft","active","MuiPaper","elevation1","boxShadow","backgroundClip","MuiButton","contained","MuiLinearProgress","colorPrimary","barColorPrimary","MuiFilledInput","MuiSnackbarContent","NotificationContainer","Notification","autoHideDuration","Layout","appBar","notification","backgroundImage","backgroundRepeat","backgroundSize","card","hint","form","input","renderInput","meta","touched","error","inputProps","Form","withTypes","Login","setLoading","useLogin","location","useLocation","handleSubmit","auth","nextPathname","noValidate","CardActions","CircularProgress","thickness","LoginWithTheme","ThemeProvider","createTheme","HotContacts","isInteger","contactData","contactIds","contactTotal","total","contactsLoaded","SimpleList","secondaryText","addSuffix","leftAvatar","noteTextText","LatestNotes","contactNotesData","contactNotesIds","contactNotesLoaded","dealNotesData","dealNotesIds","dealNotesLoaded","companyNotesData","companyNotesIds","companyNotesLoaded","allNotes","concat","valueOf","NoteSource","Deal","Contact","Company","Map","memo","setTooltipContent","colorScale","scaleQuantile","domain","max","nb_companies","range","projection","projectionConfig","rotate","scale","center","zoom","geography","geographies","geo","ISO_A3","properties","cur","iso3","fill","stroke","NAME","POP_EST","rsmKey","CompaniesMap","setContent","Dashboard","Grid","item","xs","sm","Input","RegisterForm","redirectTo","useAuthProvider","useSafeSetState","submit","confirm","Container","autoComplete","Register","RegisterWithTheme","changeTheme","Configuration","locale","useLocale","setLocale","useSetLocale","dispatch","useDispatch","Title","customRoutes","RouteWithoutLayout","exact","customEnglishMessages","englishMessages","defaultTheme","i18nProvider","polyglotI18nProvider","messages","App","Admin","loginPage","layout","dashboard","disableTelemetry","Resource","ListGuesser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d1401a31.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\n\nconst baseURL = \"/auth\";\n\nexport type Credentials = {\n  access_token: string;\n  refresh_token: string;\n  permissions: string;\n};\n\nconst CREDENTIALS_LOCAL_STORAGE_ITEM = \"credentials\";\n\nexport function isAuthenticated(): boolean {\n  return Boolean(getCredentials());\n}\n\nexport function setCredentials(credentials: Credentials) {\n  localStorage.setItem(\n    CREDENTIALS_LOCAL_STORAGE_ITEM,\n    JSON.stringify(credentials)\n  );\n}\n\nexport function getCredentials(): Credentials | null {\n  const raw = localStorage.getItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n  if (raw === null) {\n    return null;\n  }\n  return JSON.parse(raw);\n}\n\nexport function removeCredentials(): void {\n  localStorage.removeItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n}\n\n\nexport const isTokenValid = (access_token: string) => {\n  const currentDate = new Date();\n  const decodedToken: JwtPayload = decodeJwt<JwtPayload>(access_token);\n  return decodedToken && decodedToken.exp && (decodedToken.exp * 1000 > currentDate.getTime());\n}","import { AuthProvider } from 'react-admin';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\nimport axios, { AxiosError } from 'axios';\nimport {\n    isAuthenticated,\n    setCredentials,\n    getCredentials,\n    removeCredentials,\n    isTokenValid,\n} from \"./auth\"\nimport jwtDecode from 'jwt-decode';\n\ninterface RefreshToken {\n    access_token: string;\n  }\n\nconst baseURL = \"/auth\";\n\ninterface Permission {\n    permissions: string;\n}\n\ninterface LoginToken {\n    access_token: string;\n    refresh_token: string;\n}\n\ninterface UserIdentity {\n    id: number;\n    fullName: string;\n    avatar: string;\n}\n\n\nexport const refreshToken = async () => {\n    const credentials = getCredentials();\n    if(!credentials) return;\n  \n    const token = credentials?.refresh_token;\n  \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    };\n    let response = await axios.post<RefreshToken>(`${baseURL}/refresh`, undefined, config)\n    const { access_token } = response.data;\n    setCredentials({\n        ...credentials,\n        access_token: access_token,\n    });\n};\n\n\nconst login = async ({ username, password }: {username: string; password:string;}) => {\n    try{\n        const response = await axios.post<LoginToken>(`${baseURL}/login`, { username, password })\n        const { access_token, refresh_token } = response.data;\n        const decodedToken = decodeJwt<Permission>(access_token);\n        setCredentials({\n            access_token,\n            refresh_token,\n            permissions: decodedToken.permissions,\n        });\n        return Promise.resolve();\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.msg, status: response.status});\n    }\n};\n\nconst logout = async () => {\n    await axios.get(`${baseURL}/logout`)\n    removeCredentials();\n    return Promise.resolve('/login');\n}\n\nconst register = async ({ \n    first_name,\n    last_name,\n    email,\n    username, \n    password\n}: { \n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n}) => {\n    try{\n    const response = await axios.post<ResponseType>(`${baseURL}/register`, { \n            first_name,\n            last_name,\n            email,\n            username, \n            password\n        })\n\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.msg, status: response.status});\n    }\n}\n\nconst getIdentity = async () => { \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` }\n        };\n        let response = await axios.get<UserIdentity>(`${baseURL}/user`, config)\n        const { id, fullName, avatar } = response.data;\n        \n        return Promise.resolve({ id, fullName, avatar });\n    } catch (error: any) {\n        // const response = error.response;\n        // removeCredentials();\n        // return Promise.reject({message: response.data, status: response.status});\n\n        return Promise.reject(error);\n    }\n };\n\n const checkError = async ({ status }: any) => {\n    if (status === 401 || status === 403 || status === 422) {\n        try{\n            refreshToken();\n        } catch (error: any) {\n            return Promise.reject();\n        }\n    }\n    return Promise.resolve();\n};\n\nconst checkAuth = () => {\n    const credentials = getCredentials();\n    const token = credentials?.access_token;\n    return token && isTokenValid(token)? Promise.resolve() : Promise.reject();\n}\n\nconst getPermissions = () => {\n    return Promise.resolve();\n}\n\nexport const authProvider: AuthProvider =  {\n    login: login,\n    checkError: checkError,\n    checkAuth: checkAuth,\n    logout: logout,\n    getIdentity: getIdentity,\n    getPermissions: getPermissions,\n    register: register,\n};","import axios, { AxiosError } from 'axios';\nimport { \n    GetListResult,\n    GetOneResult,\n    GetManyResult,\n    GetManyReferenceResult,\n    CreateResult,\n    UpdateResult,\n    UpdateManyResult,\n    DeleteResult,\n    DeleteManyResult,\n}  from 'react-admin'\n\nimport {\n    getCredentials, \n    isTokenValid,\n} from \"./auth\"\n\nimport { refreshToken } from './authProvider';\n\nconst refreshTokenIfInvalid = () => {\n    const credentials = getCredentials();\n    const token = credentials?.access_token;\n\n    if(token && !isTokenValid(token)){\n        refreshToken();\n    }\n}\n\n\nconst getList = async (resource: string, params: any): Promise<GetListResult<any>> => {\n    refreshTokenIfInvalid();\n\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetListResult<any>>(`/${resource}/list`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getOne = async (resource: string, params: any): Promise<GetOneResult<any>> => {\n    refreshTokenIfInvalid();\n\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetOneResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getMany = async (resource: string, params: any): Promise<GetManyResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyResult<any>>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getManyReference = async (resource: string, params: any): Promise<GetManyReferenceResult<any>>  => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyReferenceResult<any>>(`/${resource}/refs`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst create = async (resource: string, params: any): Promise<CreateResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.post<CreateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst update = async (resource: string, params: any): Promise<UpdateResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst updateMany = async (resource: string, params: any): Promise<UpdateManyResult> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateManyResult>(`/${resource}/items`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteOne = async (resource: string, params: any): Promise<DeleteResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteMany = async (resource: string, params: any): Promise<DeleteManyResult> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteManyResult>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nexport const dataProvider = {\n    getList:    getList,\n    getOne:     getOne,\n    getMany:    getMany,\n    getManyReference: getManyReference,\n    create:     create,\n    update:     update,\n    updateMany: updateMany,\n    delete:     deleteOne,\n    deleteMany: deleteMany,\n}\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        alignItems:\"center\",\n        gap: theme.spacing(1)\n    },\n    logoIcon: {\n        color: theme.palette.secondary.light,\n    },\n    logoText: {\n        color: theme.palette.primary.light,\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AccountBalanceWalletIcon className={classes.logoIcon} />\n            <Typography variant=\"h6\" className={classes.logoText} >\n                Assistor\n            </Typography>\n        </div>\n    );\n};\n\nexport default Logo;\n","import * as React from 'react';\n\nimport {\n    Avatar,\n    Badge, \n    IconButton, \n    ListItem, \n    ListItemAvatar, \n    ListItemSecondaryAction, \n    ListItemText, \n    Menu,\n    MenuItem,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { \n    useGetList, \n    useRedirect, \n    ReferenceField,\n    FunctionField,\n    useGetIdentity,\n} from 'react-admin';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport { Sale, Task } from '../types';\nimport { formatDistance } from 'date-fns';\nimport { TaskStatus } from '../tasks/TaskStatus';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst NotificationButton = (props: any) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const { identity } = useGetIdentity();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const now = Date.now();\n\n    const { data, ids, loaded } = useGetList<Task>(\n        'tasks',\n        { page: 1, perPage: 1000 },\n        { field: 'due_date', order: 'ASC' },\n        { status: 'pending', sales_id: identity && identity?.id,},\n    );\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleNotificationClick = (id: any) => {\n        setAnchorEl(null);\n\n        redirect(`/tasks/${id}/show`);\n    }\n\n    const hasNotification = ids.length > 0;\n      \n    return (\n        <div {...props}>\n            <IconButton \n                onClick={handleClick}\n            >\n                <Badge \n                    badgeContent={ids.length} \n                    color=\"primary\"\n                > \n                    { hasNotification\n                        ? <NotificationsIcon />\n                        : <NotificationsNoneIcon />\n                    }\n                </Badge>\n            </IconButton>\n            { hasNotification &&\n                <Menu \n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                >\n                    {ids.map(id => (\n                        <MenuItem onClick={() => handleNotificationClick(id)}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <AssignmentTurnedInIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={\n                                    <>\n                                    {data[id].text} \n                                    </>\n                                }\n                                secondary={\n                                    <>\n                                        <Typography variant=\"body2\" color=\"textSecondary\">\n                                            due in{' '}\n                                            {formatDistance(\n                                                new Date(data[id].due_date),\n                                                now\n                                                )}\n                                        </Typography>\n                                    </>\n                                }\n                                />\n                        </MenuItem>\n                    ))\n                    }\n                </Menu>\n             }\n        </div>\n    )\n}\n\nexport default NotificationButton;","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\nimport NotificationButton from '../notifications/NotificationButton';\n\nconst useStyles = makeStyles({\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n});\n\nconst ConfigurationMenu = forwardRef<any, any>((props, ref) => {\n    const translate = useTranslate();\n    return (\n        <MenuItemLink\n            ref={ref}\n            to=\"/configuration\"\n            primaryText=\"Configuration\"\n            leftIcon={<SettingsIcon />}\n            onClick={props.onClick}\n            sidebarIsOpen\n        />\n    );\n});\n\nconst CustomUserMenu = (props: any) => (\n    <UserMenu {...props}>\n        <ConfigurationMenu />\n    </UserMenu>\n);\n\nconst CustomAppBar = (props: any) => {\n    const classes = useStyles();\n    return (\n        <AppBar \n            {...props} \n            elevation={1} \n            userMenu={<CustomUserMenu />\n        }>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                id=\"react-admin-title\"\n            />\n            <Logo />\n            <span className={classes.spacer} />\n            <NotificationButton />\n        </AppBar>\n    );\n};\n\nexport default CustomAppBar;\n","import * as React from 'react';\nimport { Fragment, ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    List,\n    MenuItem,\n    ListItemIcon,\n    Typography,\n    Collapse,\n    Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useTranslate, ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(4),\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\ninterface Props {\n    dense: boolean;\n    handleToggle: () => void;\n    icon: ReactElement;\n    isOpen: boolean;\n    name: string;\n    children: ReactNode;\n}\n\nconst SubMenu = (props: Props) => {\n    const { handleToggle, isOpen, name, icon, children, dense } = props;\n    const translate = useTranslate();\n    const classes = useStyles();\n    const sidebarIsOpen = useSelector<ReduxState, boolean>(\n        state => state.admin.ui.sidebarOpen\n    );\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;\n","export const sectors = [\n    'Factory Automation',\n    'Logistics Automation',\n    'Warehouse Automation',\n    'Consulting & Development',\n].map(sector => ({ id: sector, name: sector }));\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { Company } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const CompanyAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Company;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar\n            alt={record.name}\n            className={classes.avatar}\n        >\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <Avatar\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n    );\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ImageField } from 'react-admin';\n\nexport interface StyleProps {\n    width: number;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(theme => ({\n    image: {\n        width: props => props.width\n    },\n}));\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const CountryField = ({\n    record,\n    source=\"url\",\n    title=\"nicename\",\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    title?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles({width: sizeInPixel[size]});\n    if (!record) return null;\n\n    return (\n        <ImageField \n            record={record as any}\n            source={source} \n            title={title}\n            classes={classes}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { linkToRecord, SelectField, ReferenceField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { sectors } from './sectors';\nimport { CompanyAvatar } from './CompanyAvatar';\nimport { Company } from '../types';\nimport { CountryField } from './CountryField';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n    identifier: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        lrft: 0,\n    }\n}));\n\nexport const CompanyCard = ({ record }: { record: Company }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Company>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/companies', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classes.checkbox}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Typography \n                    variant=\"body2\" \n                    color=\"textSecondary\"\n                    className={classes.identifier}\n                >\n                    {`#${record.id}`}\n                </Typography>\n                <div className={classes.identity}>\n                    <CompanyAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.name}\n                        </Typography>\n                        <ReferenceField\n                            record={record}\n                            source=\"country_id\"\n                            reference=\"countries\"\n                            link={false}\n                        >\n                            <CountryField size='small' />\n                        </ReferenceField>\n                        </Box>\n                        {record.relation && (\n                            <Chip \n                                label={record.relation} \n                                variant=\"outlined\" \n                                size=\"small\"\n                            />\n                        )}\n                        <SelectField\n                            color=\"textSecondary\"\n                            source=\"sector\"\n                            choices={sectors}\n                            record={record}\n                        />\n                    </div>\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_contacts}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_contacts > 1\n                                    ? 'contacts'\n                                    : 'contact'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <NoteIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\n\nimport { CompanyCard } from './CompanyCard';\nimport { Company } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} />\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Company>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <CompanyCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const CompanyGridList = () => {\n    const { loaded } = useListContext();\n    return loaded ? <LoadedGridList /> : <LoadingGridList />;\n};\n","export const relations = [\n    'Distributor',\n    'End-customer',\n    'Prospect',\n    'Competitor',\n].map(relations => ({ id: relations, name: relations }));","import { Box, Chip } from '@material-ui/core';\nimport { Tag } from '../types'\n\nexport const TagChip = ({ record }: { record: Tag; }) => (\n    <>\n        { record && (\n                <Chip\n                label={record.name}\n                size=\"small\"\n                style={{\n                    backgroundColor: record.color,\n                    border: 0,\n                    cursor: 'pointer',\n                }}\n            />\n        )}\n    </>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        order: -1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleListFilter = ({ children }: {children: any;}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, {})\n        : child\n    );\n    return (\n        <div className={classes.root}>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"left\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip, Drawer, IconButton, ListItem } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { sectors } from './sectors';\nimport { relations } from './relations';\nimport { TagChip } from '../tags/TagChip';\nimport { Country, Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        minWidth: '13em',\n    },\n    countryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    tagList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const CompanyListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: tags, ids: tagIds } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    const { data: countries, ids: countryIds } = useGetList<Country>(\n        'countries',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Relation\" icon={<BusinessIcon />}>\n                {relations.map(relation => (\n                    <FilterListItem\n                        key={relation.id}\n                        label={relation.name}\n                        value={{ relation: relation.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                <div className={classes.tagList}>\n                    {tagIds &&\n                        tags &&\n                        tagIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<TagChip record={tags[id]}/>}\n                                value={{ tags: [id] }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Sector\" icon={<LocalShippingIcon />}>\n                {sectors.map(sector => (\n                    <FilterListItem\n                        key={sector.id}\n                        label={sector.name}\n                        value={{ sector: sector.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Countries\" icon={<PublicIcon />}>\n                <div className={classes.countryList}>\n                    {countryIds &&\n                        countries &&\n                        countryIds.map(id => (\n                            <FilterListItem\n                            key={id}\n                            label={countries[id].nicename}\n                            value={{ country_id: id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { Button, useListContext } from 'react-admin';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { Company } from '../types';\n\nconst doneState = { status: 'Done' };\n\nconst SelectAllButton = () => {\n    const { ids, data, onSelect } = useListContext<Company>();\n    return (\n        <Button\n            onClick={(e:any) =>{\n                e.stopPropagation();\n                onSelect(ids);\n            }}\n            label=\"Select All\"\n        >\n            <DoneAllIcon />\n        </Button>\n    );\n};\n\nexport default SelectAllButton;","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    SortButton,\n    FilterLiveSearch,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CompanyGridList } from './CompanyGridList';\nimport { CompanyListFilter } from './CompanyListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\nimport SelectAllButton from './SelectAllButton';\nimport { Box } from '@material-ui/core';\n\nexport const CompanyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<CompanyListActions />}\n            aside={<CompanyListFilter />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100, 1000]} />}\n            perPage={25}\n            sort={{ field: 'name', order: 'ASC' }}\n            component=\"div\"\n        >\n            <CompanyGridList />\n        </List>\n    ) : null;\n};\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        \n    },\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst importOptions = {\n    parseConfig: {\n        // For all options see: https://www.papaparse.com/docs#config\n        dynamicTyping: true\n    }\n}\n\n\nconst CompanyListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar className={classes.toolbar} >\n            <SortButton fields={['id', 'name']} />\n            <SelectAllButton />\n            <ExportButton />\n            <ImportButton {...props} {...importOptions}/>\n            <CreateButton\n                basePath=\"/companies\"\n                variant=\"contained\"\n                label=\"New Company\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","export const sizes = [\n    { id: 1, name: '1 employee' },\n    { id: 10, name: '2-9 employees' },\n    { id: 50, name: '10-49 employees' },\n    { id: 250, name: '50-249 employees' },\n    { id: 500, name: '250 or more employees' },\n];\n","import { AutocompleteInput, AutocompleteInputProps } from 'react-admin';\n\nconst DistributorInput = (props: AutocompleteInputProps) => (\n    <AutocompleteInput \n        {...props}\n        optionText={record => record ? record.country_iso ? `${record.name} (${record.country_iso})` : `${record.name}` : ''} \n        allowEmpty\n        resettable\n    />\n);\n\nexport default DistributorInput;","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    FormDataConsumer,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n} from 'react-admin';\nimport { Box, CardContent, Divider, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nexport const CompanyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n\n    if (!identity) return null;\n\n    const defaultValue = () => ({ sales_id: identity && identity?.id });\n\n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                initialValues={defaultValue}\n                redirect=\"show\"\n            >\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <BusinessIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { Contact } from '../types';\n\nexport const Avatar = ({ record }: { record: Contact }) => (\n    <MuiAvatar src={record.avatar}>\n        {record.first_name.charAt(0)}\n        {record.last_name.charAt(0)}\n    </MuiAvatar>\n);\n","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst getColorFromStatus = (status: string) =>\n    status === 'cold'\n        ? '#7dbde8'\n        : status === 'warm'\n        ? '#e8cb7d'\n        : status === 'hot'\n        ? '#e88b7d'\n        : status === 'in-contract'\n        ? '#a4e87d'\n        : '#000';\n\nexport const Status = ({ status }: { status: string }) => (\n    <Box\n        width={10}\n        height={10}\n        display=\"inline-block\"\n        borderRadius={5}\n        bgcolor={getColorFromStatus(status)}\n        component=\"span\"\n    />\n);\n","import * as React from 'react';\nimport { ReferenceArrayField, SingleFieldList, ChipField } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Contact } from '../types';\n\nconst ColoredChipField = ({ record, ...props }: any) =>\n    record ? (\n        <ChipField\n            record={record}\n            {...props}\n            style={{ backgroundColor: record.color, border: 0 }}\n            component=\"span\"\n        />\n    ) : null;\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'inline-block',\n    },\n});\n\nexport const TagsList = ({ record }: { record: Contact }) => {\n    const classes = useStyles();\n    if (!record) return null;\n    return (\n        <ReferenceArrayField\n            record={record}\n            basePath=\"/contacts\"\n            resource=\"contacts\"\n            source=\"tags\"\n            reference=\"tags\"\n            className={classes.root}\n        >\n            <SingleFieldList linkType={false} component=\"span\">\n                <ColoredChipField\n                    source=\"name\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                />\n            </SingleFieldList>\n        </ReferenceArrayField>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const LogoField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar>\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            title={record.name}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","export const colors = [\n    '#eddcd2',\n    '#fff1e6',\n    '#fde2e4',\n    '#fad2e1',\n    '#c5dedd',\n    '#dbe7e4',\n    '#f0efeb',\n    '#d6e2e9',\n    '#bcd4e6',\n    '#99c1de',\n];\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        display: 'inline-block',\n        margin: 8,\n    },\n});\n\nexport const RoundButton = ({ color, handleClick, selected }: any) => {\n    const classes = useStyles();\n    return (\n        <button\n            type=\"button\"\n            className={classes.root}\n            style={{\n                backgroundColor: color,\n                border: selected ? '2px solid grey' : 'none',\n            }}\n            onClick={handleClick}\n        />\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useGetMany,\n    useCreate,\n    useUpdate,\n    useGetList,\n    Identifier,\n} from 'react-admin';\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { colors } from './colors';\nimport { Contact, Company, Product } from '../types';\nimport { Tag } from '../types';\nimport { RoundButton } from '../components/RoundButton';\n\nexport const TagsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Contact | Company | Product;\n    reference: 'companies' | 'contacts' | 'products';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [newTagName, setNewTagName] = useState('');\n    const [newTagColor, setNewTagColor] = useState(colors[0]);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [disabled, setDisabled] = useState(false);\n\n    const { data: allTags, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' },\n        {},\n        { version } as any // FIXME UseDataProviderOptions don't allow [key: string]: any\n    );\n    const { data: tags, loaded } = useGetMany('tags', record.tags, {\n        enabled: record.tags && record.tags.length > 0,\n    });\n    const [update] = useUpdate();\n    const [create] = useCreate();\n\n    const unselectedTagIds = ids && ids.filter(id => !record.tags.includes(id));\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDeleteTag = (id: Identifier) => {\n        const tags: Identifier[] = record.tags.filter(\n            (tagId: Identifier) => tagId !== id\n        );\n        update(reference, record.id, { tags }, record);\n    };\n\n    const handleAddTag = (id: Identifier) => {\n        const tags: Identifier[] = [...record.tags, id];\n        update(reference, record.id, { tags }, record);\n        setAnchorEl(null);\n    };\n\n    const handleOpenCreateDialog = () => {\n        setOpen(true);\n        setAnchorEl(null);\n        setDisabled(false);\n    };\n\n    const handleNewTagNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setNewTagName(event.target.value);\n    };\n\n    const handleCreateTag = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setDisabled(true);\n        create(\n            'tags',\n            { name: newTagName, color: newTagColor },\n            {\n                onSuccess: ({ data }) => {\n                    update(\n                        reference,\n                        record.id,\n                        { tags: [...record.tags, data.id] },\n                        record,\n                        {\n                            onSuccess: () => {\n                                setNewTagName('');\n                                setNewTagColor(colors[0]);\n                                setOpen(false);\n\n                                setVersion(v => v + 1);\n                            },\n                        }\n                    );\n                },\n            }\n        );\n    };\n\n    // if (!loaded || !tags) return null;\n    return (\n        <>\n            {tags.map(tag => (\n                <Box mt={1} mb={1} key={tag.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteTag(tag.id)}\n                        label={tag.name}\n                        style={{ backgroundColor: tag.color, border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add tag\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Menu\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                {unselectedTagIds?.map(id => (\n                    <MenuItem key={id} onClick={() => handleAddTag(id)}>\n                        <Chip\n                            size=\"small\"\n                            variant=\"outlined\"\n                            label={allTags && allTags[id].name}\n                            style={{\n                                backgroundColor: allTags && allTags[id].color,\n                                border: 0,\n                            }}\n                            onClick={() => handleAddTag(id)}\n                        />\n                    </MenuItem>\n                ))}\n                <MenuItem onClick={handleOpenCreateDialog}>\n                    <Chip\n                        icon={<EditIcon />}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={handleOpenCreateDialog}\n                        color=\"primary\"\n                        label=\"Create new tag\"\n                    />\n                </MenuItem>\n            </Menu>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <form onSubmit={handleCreateTag}>\n                    <DialogTitle id=\"form-dialog-title\">\n                        Create a new tag\n                    </DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            label=\"Tag name\"\n                            fullWidth\n                            value={newTagName}\n                            onChange={handleNewTagNameChange}\n                        />\n                        <Box display=\"flex\" flexWrap=\"wrap\" width={230} mt={2}>\n                            {colors.map(color => (\n                                <RoundButton\n                                    key={color}\n                                    color={color}\n                                    selected={color === newTagColor}\n                                    handleClick={() => {\n                                        setNewTagColor(color);\n                                    }}\n                                />\n                            ))}\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setOpen(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={disabled}\n                        >\n                            Add tag\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    EditButton,\n    ShowButton,\n} from 'react-admin';\nimport { Box, Drawer, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleAside = ({\n    basePath,\n    record,\n    link = 'edit',\n    children,\n}: {\n    basePath: string,\n    record?: any;\n    children: any,\n    link?: string;\n}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    if (!record) return null;\n\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, { record })\n        : child\n    );\n\n    return (\n        <div className={classes.root}>\n            <Box textAlign=\"center\" mb={2}>\n                {link === 'edit' ? (\n                    <EditButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Edit\"\n                    />\n                ) : (\n                    <ShowButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Show\"\n                    />\n                )}\n            </Box>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"right\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    )\n};\n    \n","import * as React from 'react';\nimport { cloneElement, useState } from 'react';\nimport { \n    AutocompleteArrayInput,\n    Edit,\n    EditContextProvider,\n    Identifier, \n    ReferenceArrayField, \n    ReferenceArrayInput, \n    SimpleForm, \n    SingleFieldList, \n    useEditController, \n    useGetList, \n    useGetMany, \n    useUpdate, \n    useRefresh\n} from 'react-admin';\n\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Popover,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { Company, Product } from '../types';\nimport { string } from 'prop-types';\n\nexport const ProductsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Company;\n    reference: 'companies';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n\n\n\n    const { data: products, loaded } = useGetMany('products', record.use_products, {\n        enabled: record.use_products && record.use_products.length > 0,\n    });\n\n    const handleDeleteProduct = (id: Identifier) => {\n        const products: Identifier[] = record.use_products.filter(\n            (productId: Identifier) => productId !== id\n        );\n        update(reference, record.id, { use_products: products }, record);\n    };\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleSucess = (values: any) =>{\n        refresh();\n        handleClose();\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    if (!record) return null;\n\n     return (\n        <>\n            {loaded && products.map(product => (\n                <Box mt={1} key={product.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteProduct(product.id)}\n                        label={product.model}\n                        style={{ backgroundColor: \"#d4d4d4\", border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add product\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Popover\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n            >\n                <Edit\n                    basePath=\"/companies\"\n                    resource={reference}\n                    id={record.id.toString()}\n                    onSuccess={handleSucess}\n                >\n                    <SimpleForm>\n                        <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                            <AutocompleteArrayInput optionText=\"model\" />\n                        </ReferenceArrayInput>\n                    </SimpleForm>\n                </Edit>\n            </Popover>\n        </>\n    );\n}","import * as React from 'react';\nimport {\n    TextField,\n    DateField,\n    FunctionField,\n    ReferenceField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    ShowButton,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider, \n    Link,\n} from '@material-ui/core';\nimport { Company, Sale } from '../types';\nimport { TagsListEdit } from '../tags/TagsListEdit';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { ProductsListEdit } from '../products/ProductsListEdit';\nimport { any } from 'prop-types';\n\nexport const CompanyAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Company;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/companies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n    \n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Company;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Company info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">{record.website}</Link>\n                <br />\n                LinkedIn: <Link href={record.linkedIn} target=\"_blank\" rel=\"noreferrer\">LinkedIn</Link>\n            </Box>\n            <Box mt={1}>\n                Relation: <TextField source=\"relation\" record={record} />\n            </Box>\n            {record.distributor_id && (\n                <Box mt={1}>\n                    Distributor: <ReferenceField\n                            record={record}\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                        >\n                            <TextField source=\"name\" record={record} />\n                        </ReferenceField>\n                </Box>\n            )}\n\n            {record.phone_number && (\n                <Box mt={1}>\n                    <TextField source=\"phone_number\" record={record} />{' '}\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">Main</Typography>\n                </Box>\n            )}\n\n            <Box mt={1} mb={3}>\n                <TextField source=\"address\" />\n                <br />\n                <TextField source=\"city\" /> <TextField source=\"zipcode\" />{' '}\n                <TextField source=\"stateAbbr\" />\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={3}>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"span\"\n                >\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"created_at\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"companies\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record\n                                ? `${record.first_name} ${record.last_name}`\n                                : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"companies\" />\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Use Products</Typography>\n                <Divider />\n\n                <ProductsListEdit record={record} reference=\"companies\" />\n            </Box>\n        </>\n    ) : null;","export const stages = [\n    'opportunity',\n    'proposal-sent',\n    'in-negociation',\n    'won',\n    'lost',\n    'delayed',\n];\n\nexport const stageNames = {\n    opportunity: 'Opportunity',\n    'proposal-sent': 'Proposal Sent',\n    'in-negociation': 'In Negociation',\n    won: 'Won',\n    lost: 'Lost',\n    delayed: 'Delayed',\n};\n\nexport const stageChoices = stages.map(type => ({\n    id: type,\n    /* @ts-ignore */\n    name: stageNames[type],\n}));\n","import * as React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 150,\n    },\n});\n\nexport const StatusSelector = ({ status, setStatus, className = '' }: any) => {\n    const classes = useStyles();\n    return (\n        <TextField\n            select\n            value={status}\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                setStatus(event.target.value);\n            }}\n            variant=\"filled\"\n            label={false}\n            margin=\"none\"\n            size=\"small\"\n            className={clsx(className, classes.root)}\n        >\n            <MenuItem value=\"cold\">\n                Cold <Status status=\"cold\" />\n            </MenuItem>\n            <MenuItem value=\"warm\">\n                Warm <Status status=\"warm\" />\n            </MenuItem>\n            <MenuItem value=\"hot\">\n                Hot <Status status=\"hot\" />\n            </MenuItem>\n            <MenuItem value=\"in-contract\">\n                In Contract <Status status=\"in-contract\" />\n            </MenuItem>\n        </TextField>\n    );\n};\n","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useRecordContext,\n    useCreate,\n    useUpdate,\n    useRefresh,\n    useNotify,\n    useGetIdentity,\n    Identifier,\n    useResourceContext,\n} from 'react-admin';\nimport { TextField as TextInput, Button, Paper } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nimport { StatusSelector } from './StatusSelector';\n\ntype Props = {\n    preview: Boolean;\n}\n\nconst useStyles = makeStyles<Theme, Props>(theme => ({\n    root: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: theme.spacing(1),\n    },\n    small: {\n        marginRight: '1em',\n        '& .MuiFilledInput-input': {\n            paddingTop: 10,\n        },\n    },\n    buttonSwitcher: {\n        marginBottom: theme.spacing(1),\n    },\n    previewConatiner: {\n        display: 'flex',\n    },\n    previewRaw: {\n        flex: 1,\n    },\n    previewMarkdown: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderColor: theme.palette.primary.main,\n        display: ({preview}) => (preview ? 'block' : 'none'),\n    },\n}));\n\nexport const NewNote = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const [preview, setPreview] = useState(false);\n    const classes = useStyles({preview});\n    const record = useRecordContext();\n    const resource = useResourceContext();\n    const [text, setText] = useState('');\n    const [status, setStatus] = useState(record && record.status);\n    const [date, setDate] = useState(getCurrentDate());\n    const [create, { loading }] = useCreate();\n    const [update] = useUpdate();\n    // FIXME: use refetch instead when ReferenceManyField exposes it in the ListContext\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const { identity } = useGetIdentity();\n    if (!record || !identity) return null;\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const data: any = {\n            [foreignKeyMapping[reference]]: record.id,\n            sales_id: identity.id,\n            date,\n            text,\n        };\n        if (showStatus) {\n            data.status = status;\n        }\n        update(\n            reference,\n            ((record && record.id) as unknown) as Identifier,\n            {\n                last_seen: date,\n                status,\n            },\n            record\n        );\n        create(resource, data, {\n            onSuccess: () => {\n                setText('');\n                notify('Note added successfully', 'info');\n                refresh();\n            },\n        });\n        return false;\n    };\n    return (\n        <div className={classes.root}>\n            <form onSubmit={handleSubmit}>\n                <div className={classes.buttonSwitcher}>\n                    <Button \n                        variant={preview ? \"contained\": \"outlined\"} \n                        color=\"primary\"\n                        onClick={()=> setPreview(!preview)}\n                    >Markdown</Button>\n                </div>\n                <div className={classes.previewConatiner}>\n                    <div className={classes.previewRaw}>\n                        <TextInput\n                            label=\"Add a note\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            fullWidth\n                            multiline\n                            value={text}\n                            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                                setText(event.target.value)\n                            }\n                        />\n                    </div>\n                    <Paper className={classes.previewMarkdown}>\n                        <ReactMarkdown children={text} remarkPlugins={[remarkGfm]} />\n                    </Paper>\n                </div>\n                <div className={classes.toolbar}>\n                    <span>\n                        {text ? (\n                            <>\n                                {showStatus && (\n                                    <StatusSelector\n                                        status={status}\n                                        setStatus={setStatus}\n                                        className={classes.small}\n                                    />\n                                )}\n                                <TextInput\n                                    type=\"datetime-local\"\n                                    variant=\"filled\"\n                                    size=\"small\"\n                                    value={date}\n                                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                        setDate(event.target.value);\n                                    }}\n                                    className={classes.small}\n                                />\n                            </>\n                        ) : null}\n                    </span>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!text || loading}\n                    >\n                        Add this note\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst getCurrentDate = () => {\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n    return now.toISOString().slice(0, -8);\n};\n\nconst foreignKeyMapping = {\n    contacts: 'contact_id',\n    deals: 'deal_id',\n    companies: 'company_id',\n    products: 'product_id',\n};\n","import * as React from 'react';\nimport { useState, FormEvent, ChangeEvent } from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    DateField,\n    useResourceContext,\n    useDelete,\n    useUpdate,\n    useNotify,\n    useRecordContext,\n} from 'react-admin';\nimport {\n    Typography,\n    Tooltip,\n    IconButton,\n    FilledInput,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n    },\n    metadata: {\n        marginBottom: theme.spacing(1),\n        color: theme.palette.text.secondary,\n    },\n    textarea: {\n        paddingTop: 16,\n        paddingLeft: 14,\n        paddingRight: 60,\n        paddingBottom: 14,\n        lineHeight: 1.3,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: theme.spacing(1),\n    },\n    cancel: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        backgroundColor: theme.palette.grey[200],\n        padding: '0 1em',\n        borderRadius: 10,\n        display: 'flex',\n        alignItems: 'stretch',\n        marginBottom: theme.spacing(1),\n    },\n    text: {\n        flex: 1,\n    },\n    paragraph: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: 1,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        marginLeft: theme.spacing(2),\n        visibility: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n    },\n}));\n\nexport const Note = ({\n    showStatus,\n    note,\n    isLast,\n    reference,\n}: {\n    showStatus?: boolean;\n    note: any;\n    isLast: boolean;\n    reference: string;\n}) => {\n    const [isHover, setHover] = useState(false);\n    const [isEditing, setEditing] = useState(false);\n    const [noteText, setNoteText] = useState(note.text);\n    const resource = useResourceContext();\n    const record = useRecordContext();\n    const notify = useNotify();\n    const classes = useStyles();\n    const [update, { loading }] = useUpdate();\n\n    const [handleDelete] = useDelete(resource, note.id, note, {\n        mutationMode: 'undoable',\n        onSuccess: () => {\n            notify('Note deleted', 'info', undefined, true);\n            update(\n                reference,\n                record.id,\n                { nb_notes: record.nb_notes - 1 },\n                record\n            );\n        },\n    });\n\n    const handleEnterEditMode = () => {\n        setEditing(true);\n    };\n\n    const handleCancelEdit = () => {\n        setEditing(false);\n        setNoteText(note.text);\n        setHover(false);\n    };\n\n    const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setNoteText(event.target.value);\n    };\n\n    const handleNoteUpdate = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        update(resource, note.id, { text: noteText }, note, {\n            onSuccess: () => {\n                setEditing(false);\n                setNoteText(note.text);\n                setHover(false);\n            },\n        });\n    };\n\n    return (\n        <div\n            className={classes.root}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n        >\n            <div className={classes.metadata}>\n                <ReferenceField\n                    record={note}\n                    resource=\"contactNotes\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    basePath=\"/contactNotes\"\n                >\n                    <TextField source=\"first_name\" variant=\"body1\" />\n                </ReferenceField>{' '}\n                <Typography component=\"span\" variant=\"body1\">\n                    added a note on{' '}\n                </Typography>\n                <DateField\n                    source=\"date\"\n                    record={note}\n                    variant=\"body1\"\n                    showTime\n                    locales=\"en\"\n                    options={{\n                        dateStyle: 'full',\n                        timeStyle: 'short',\n                    }}\n                />{' '}\n                {showStatus && <Status status={note.status} />}\n            </div>\n            {isEditing ? (\n                <form onSubmit={handleNoteUpdate}>\n                    <FilledInput\n                        value={noteText}\n                        onChange={handleTextChange}\n                        fullWidth\n                        multiline\n                        className={classes.textarea}\n                        autoFocus\n                    />\n                    <div className={classes.buttons}>\n                        <Button\n                            className={classes.cancel}\n                            onClick={handleCancelEdit}\n                            color=\"primary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            disabled={loading}\n                        >\n                            Update Note\n                        </Button>\n                    </div>\n                </form>\n            ) : (\n                <div \n                    className={classes.content}\n                    onClick={() => setHover(true)}\n                >\n                    <div className={classes.text}>\n                        <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                    </div>\n                    <div\n                        className={classes.toolbar}\n                        style={{ visibility: isHover ? 'visible' : 'hidden' }}\n                    >\n                        <Tooltip title=\"Edit note\">\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleEnterEditMode}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete note\">\n                            <IconButton size=\"small\" onClick={handleDelete}>\n                                <TrashIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Note } from './Note';\nimport { NewNote } from './NewNote';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '0.5em',\n    },\n});\n\nexport const NotesIterator = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const classes = useStyles();\n    const { data, ids, loaded } = useListContext();\n    if (!loaded) return null;\n    return (\n        <>\n            <NewNote showStatus={showStatus} reference={reference} />\n            <div className={classes.root}>\n                {ids.map((id, index) => (\n                    <Note\n                        note={data[id]}\n                        isLast={index === ids.length - 1}\n                        showStatus={showStatus}\n                        reference={reference}\n                        key={index}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\n\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        // backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const ProductAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Product;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n\n\n    return (record.image\n        ? <Avatar\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n        : <Avatar\n            alt={record.model}\n            className={classes.avatar}\n        >\n            <ShoppingCartIcon />\n        </Avatar>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport { linkToRecord, TextField, ReferenceField, ImageField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { ProductAvatar } from './ProductAvatar';\nimport { Product } from '../types';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    family: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    image: {\n        width: 28,\n        height: 28,\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        left: theme.spacing(1),\n    },\n    hidden:{\n        display: 'none',\n    }\n}));\n\nexport const ProductCard = ({ record }: { record: Product }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Product>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/products', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classNames(classes.checkbox, {[classes.hidden]: !loaded})}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Box position=\"absolute\" top={10} right={10}>\n                    <ReferenceField\n                        record={record}\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <ImageField \n                            source=\"logo\" \n                            title=\"name\"\n                            classes={classes}\n                        />\n                    </ReferenceField>\n                </Box>\n                <div className={classes.identity}>\n                    <ProductAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.model}\n                        </Typography>\n                        </Box>\n                    </div>\n\n                    <div className={classes.family}>\n                        <Typography variant=\"body2\">\n                            in family{' '}\n                            <ReferenceField\n                                record={record}\n                                source=\"family_id\"\n                                reference=\"productFamilies\"\n                                link=\"show\"\n                            >\n                                <TextField source=\"name\" />\n                            </ReferenceField>\n                        </Typography>\n                    </div>\n\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <DealIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_properties}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_properties > 1 ? 'properties' : 'property'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport { ProductCard } from './ProductCard';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: \"center\",\n        padding: '1em',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} >\n                <Skeleton variant=\"circle\" width={60} height={60}  animation=\"wave\"/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={110}/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={150}/>\n                <Skeleton variant=\"rect\" width={180} height={40} />\n                </Paper>\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Product>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <ProductCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const ProductGridList = () => {\n    const { loaded, loading } = useListContext();\n    return loading ? <LoadingGridList /> : <LoadedGridList /> ;\n};\n","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { sizes } from './sizes';\nimport { LogoField } from './LogoField';\nimport { CompanyAside } from './CompanyAside';\nimport { Company, Deal, Contact } from '../types';\nimport { stageNames } from '../deals/stages';\nimport { NotesIterator } from '../notes';\nimport { CountryField } from './CountryField';\nimport { ProductGridList } from '../products/ProductGridList';\n\nexport const CompanyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <CompanyShowContent />\n    </ShowBase>\n);\n\nconst CompanyShowContent = () => {\n    const { record, loaded } = useShowContext<Company>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <LogoField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.name}</Typography>\n                                    {record.relation && (\n                                        <Chip \n                                            label={record.relation} \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                        />\n                                    )}\n                                </Box>\n                                <Typography \n                                    variant=\"body2\" \n                                    color=\"textSecondary\"\n                                >\n                                    {`#${record.id} - `}\n                                </Typography>\n                                {record.sector && (\n                                        <Typography variant=\"body2\">\n                                            <TextField source=\"sector\" />,{' '}\n                                            <SelectField\n                                                source=\"size\"\n                                                choices={sizes}\n                                            />\n                                        </Typography>\n                                )}\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"country_id\"\n                                    reference=\"countries\"\n                                    link={false}\n                                >\n                                    <CountryField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes === 1\n                                        ? '1 Note'\n                                        : `${record.nb_notes} Notes`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_contacts === 1\n                                        ? '1 Contact'\n                                        : `${record.nb_contacts} Contacts`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_deals === 1\n                                        ? '1 Deal'\n                                        : `${record.nb_deals} Deals`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_products === 1\n                                        ? '1 Product'\n                                        : `${record.nb_products} Products`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"companyNotes\"\n                                target=\"company_id\"\n                                sort={{ field: 'date', order: 'DESC' }}\n                            >\n                                 <NotesIterator reference=\"companies\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField\n                                reference=\"contacts\"\n                                target=\"company_id\"\n                                sort={{ field: 'last_name', order: 'ASC' }}\n                            >\n                                <ContactsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <ReferenceManyField\n                                reference=\"deals\"\n                                target=\"company_id\"\n                                sort={{ field: 'name', order: 'ASC' }}\n                            >\n                                <DealsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Box mt={1}>\n                                <ReferenceManyField\n                                    reference=\"products\"\n                                    target=\"company_id\"\n                                    label=\"Products\"\n                                    pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                    perPage={25}\n                                >\n                                    <ProductGridList />\n                                </ReferenceManyField>\n                            </Box>\n                            <Box textAlign=\"center\" mt={1}>\n                                <CreateRelatedProductButton record={record} />\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <CompanyAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ContactsIterator = () => {\n    const { data, ids, loaded } = useListContext<Contact>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const contact = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/contacts/${id}/show`}\n                        >\n                            <ListItemAvatar>\n                                <Avatar record={contact} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${contact.first_name} ${contact.last_name}`}\n                                secondary={\n                                    <>\n                                        {contact.title}{' '}\n                                        {`- ${contact.nb_notes} notes `}\n                                        <TagsList record={contact} />\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(contact.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={contact.status} />\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                <CreateRelatedContactButton record={record} />\n            </Box>\n        </Box>\n    );\n};\n\nconst CreateRelatedContactButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/contacts/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<PersonAddIcon />}\n    >\n        Add contact\n    </Button>\n);\n\nconst CreateRelatedProductButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/products/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<AddIcon />}\n    >\n        Add product\n    </Button>\n);\n\nconst DealsIterator = () => {\n    const { data, ids, loaded } = useListContext<Deal>();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const deal = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/deals/${id}/show`}\n                        >\n                            <ListItemText\n                                primary={deal.name}\n                                secondary={\n                                    <>\n                                        {/* @ts-ignore */}\n                                        {stageNames[deal.stage]},{' '}\n                                        {deal.amount.toLocaleString('en-US', {\n                                            notation: 'compact',\n                                            style: 'currency',\n                                            currency: 'USD',\n                                            currencyDisplay: 'narrowSymbol',\n                                            minimumSignificantDigits: 3,\n                                        })}\n                                        , {deal.type}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"span\"\n                                >\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(deal.updated_at),\n                                        now\n                                    )}{' '}\n                                    ago{' '}\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n    FormDataConsumer,\n    required,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { CompanyAside } from './CompanyAside';\nimport { LogoField } from './LogoField';\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const CompanyEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit {...props} aside={<CompanyAside link=\"show\" />} actions={false}>\n            <SimpleForm component={CustomLayout} redirect=\"show\">\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <LogoField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { CompanyList } from './CompanyList';\nimport { CompanyCreate } from './CompanyCreate';\nimport { CompanyShow } from './CompanyShow';\nimport { CompanyEdit } from './CompanyEdit';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nexport default {\n    list: CompanyList,\n    create: CompanyCreate,\n    edit: CompanyEdit,\n    show: CompanyShow,\n    icon: BusinessIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Contact, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ContactAside = ({ \n    record, \n    link = 'edit',\n}: {\n    record?: Contact;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/contacts\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst TasksIterator = () => {\n    const { data, ids, loading } = useListContext();\n    if (loading || ids.length === 0) return null;\n    return (\n            <List>\n                {ids.map(id => {\n                    const task = data[id];\n                    return (\n                        <ListItem key={id} disableGutters>\n                            <Box>\n                                <Typography variant=\"body2\">\n                                    {task.text}\n                                </Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                >\n                                    due{' '}\n                                    <DateField\n                                        source=\"due_date\"\n                                        record={task}\n                                    />\n                                </Typography>\n                            </Box>\n                        </ListItem>\n                    );\n                })}\n            </List>\n    );\n};\n\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Contact;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Personal info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                <EmailField source=\"email\" />\n            </Box>\n\n            <Box mt={1}>\n                <TextField source=\"phone_number1\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Work\n                </Typography>\n            </Box>\n\n            <Box mb={1}>\n                <TextField source=\"phone_number2\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Home\n                </Typography>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"body2\">\n                    {record.gender === 'male' ? 'He/Him' : 'She/Her'}\n                </Typography>\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={2}>{record && record.background}</Box>\n            <Box mt={1} mb={3}>\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"first_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Last seen on\n                </Typography>{' '}\n                <DateField\n                    source=\"last_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"contacts\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record ? `${record.first_name} ${record.last_name}` : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"contacts\" />\n            </Box>\n\n            <Box>\n                <Typography variant=\"subtitle2\">Tasks</Typography>\n                <Divider />\n                <ReferenceManyField\n                    resource=\"contacts\"\n                    target=\"contact_id\"\n                    reference=\"tasks\"\n                >\n                    <TasksIterator />\n                </ReferenceManyField>\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Contact } from '../types';\n\nexport const ContactShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ContactShowContent />\n    </ShowBase>\n);\n\nconst ContactShowContent = () => {\n    const { record, loaded } = useShowContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.first_name} {record.last_name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {`#${record.id} - `}\n                                    {record.title} at{' '}\n                                    <ReferenceField\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        link=\"show\"\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <ReferenceManyField\n                            target=\"contact_id\"\n                            reference=\"contactNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator showStatus reference=\"contacts\" />\n                        </ReferenceManyField>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ContactAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { endOfYesterday, startOfWeek, startOfMonth, subMonths } from 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Status } from '../misc/Status';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n        }\n    },\n}));\n\nexport const ContactListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Last seen\" icon={<AccessTimeIcon />}>\n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        last_seen_gte: endOfYesterday().toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        last_seen_gte: startOfWeek(new Date()).toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this week\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfMonth(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before last month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: subMonths(\n                            startOfMonth(new Date()),\n                            1\n                        ).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                <FilterListItem\n                    label={\n                        <>\n                            Cold <Status status=\"cold\" />\n                        </>\n                    }\n                    value={{\n                        status: 'cold',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Warm <Status status=\"warm\" />\n                        </>\n                    }\n                    value={{\n                        status: 'warm',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Hot <Status status=\"hot\" />\n                        </>\n                    }\n                    value={{\n                        status: 'hot',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            In contract <Status status=\"in-contract\" />\n                        </>\n                    }\n                    value={{\n                        status: 'in-contract',\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                {ids &&\n                    data &&\n                    ids.map(id => (\n                        <FilterListItem\n                            key={id}\n                            label={<TagChip record={data[id]}/>}\n                            value={{ tags: [id] }}\n                        />\n                    ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    FilterLiveSearch,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ContactListFilter } from './ContactListFilter';\nimport { Contact } from '../types';\nimport { ImportButton } from 'react-admin-import-csv';\n\nconst ContactListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Contact\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const contact = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/contacts/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={contact} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${contact.first_name} ${contact.last_name}`}\n                            secondary={\n                                <>\n                                    {`#${contact.id} - `}\n                                    {contact.title} at{' '}\n                                    <ReferenceField\n                                        record={contact}\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        basePath=\"/companies\"\n                                        link={false}\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>{' '}\n                                    {!!contact.nb_notes &&\n                                        `- ${contact.nb_notes} notes `}\n                                    <TagsList record={contact} />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                last activity{' '}\n                                {formatDistance(\n                                    new Date(contact.last_seen),\n                                    now\n                                )}{' '}\n                                ago <Status status={contact.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ContactListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['id', 'last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/contacts\"\n                variant=\"contained\"\n                label=\"New Contact\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ContactList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ContactListActions />}\n            aside={<ContactListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            sort={{ field: 'last_seen', order: 'DESC' }}\n        >\n            <ContactListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { Contact } from '../types';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ContactEditContent = () => {\n    const { record, loaded, save } = useEditContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"first_name\" />\n                                                <Spacer />\n                                                <TextInput source=\"last_name\" />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"title\" />\n                                                <Spacer />\n                                                <ReferenceInput\n                                                    source=\"company_id\"\n                                                    reference=\"companies\"\n                                                >\n                                                    <AutocompleteInput optionText=\"name\" />\n                                                </ReferenceInput>\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"email\"\n                                                    fullWidth\n                                                />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"phone_number1\" />\n                                                <Spacer />\n                                                <TextInput source=\"phone_number2\" />\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"background\"\n                                                    multiline\n                                                    fullWidth\n                                                />\n                                                <TextInput\n                                                    source=\"avatar\"\n                                                    fullWidth\n                                                />\n                                                <BooleanInput source=\"has_newsletter\" />\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ContactAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ContactEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ContactEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Contact } from '../types';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ContactCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const contactDefaultValue = () => ({ sales_id: identity && identity?.id });\n    const transform = (data: Contact) => ({\n        ...data,\n        last_seen: new Date(),\n        tags: [],\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"first_name\" \n                    validate={[required()]} \n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    validate={[required()]}\n                    formClassName={classes.inline}\n                />\n                <CustomDivider />\n                <TextInput \n                    source=\"title\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <ReferenceInput\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    formClassName={classes.inline}\n                >\n                    <AutocompleteInput optionText=\"name\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput\n                    source=\"email\"\n                    fullWidth\n                />\n                <TextInput source=\"phone_number1\"\n                    formClassName={clsx(classes.inline, 'first-child')} />\n                <TextInput source=\"phone_number2\"\n                    formClassName={classes.inline} />\n                <CustomDivider />\n                <TextInput\n                    source=\"background\"\n                    multiline\n                    fullWidth\n                />\n                <TextInput\n                    source=\"avatar\"\n                    fullWidth\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n                <BooleanInput source=\"has_newsletter\" />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { ContactShow } from './ContactShow';\nimport { ContactList } from './ContactList';\nimport { ContactEdit } from './ContactEdit';\nimport { ContactCreate } from './ContactCreate';\nimport ContactsIcon from '@material-ui/icons/Contacts';\n\nexport default {\n    list: ContactList,\n    show: ContactShow,\n    edit: ContactEdit,\n    create: ContactCreate,\n    icon: ContactsIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    EditButton,\n    ShowButton,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Task } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const TaskAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Task;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/tasks\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Task;\n}) => \n    record ? (\n        <>\n        </>\n    ) : null;","export const statuses = [\n    {id: 'pending', name: 'Pending', color: '#FFA000'},\n    {id: 'done', name: 'Done', color: '#CDDC39'},\n    {id: 'postponed', name: 'Postponed', color: '#2196F3'},\n]\n\nexport const getStatus = (id: string) => statuses.find(status => status.id == id);","import { Box, Chip } from '@material-ui/core';\nimport { Task } from '../types'\nimport { getStatus } from './status';\n\nexport const TaskChip = ({ record }: { record: Task; }) => {\n    const statusItem = getStatus(record.status);\n    const statusName = statusItem ? statusItem.name: '';\n    const statusColor = statusItem ? statusItem.color: '#000'\n    \n    return (\n         <>\n            { record && (\n                    <Chip\n                    label={statusName}\n                    size=\"small\"\n                    style={{\n                        backgroundColor: statusColor,\n                        border: 0,\n                        cursor: 'pointer',\n                    }}\n                />\n            )}\n        </>\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    Identifier,\n    useShowContext,\n    FunctionField, \n    Button, \n    useUpdate,\n    useRefresh,\n    useNotify\n} from 'react-admin';\nimport { \n    Avatar, \n    Box, \n    Card, \n    CardContent, \n    Chip, \n    Typography,\n} from '@material-ui/core';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { TaskAside } from './TaskAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Sale, Task } from '../types';\nimport { TaskChip } from './TaskChip';\n\nconst doneStatus = 'done';\n\nexport const TaskShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <TaskShowContent />\n    </ShowBase>\n);\n\nconst TaskShowContent = () => {\n    const { record, loaded } = useShowContext<Task>();\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n    const notify = useNotify();\n\n    if (!loaded || !record) return null;\n\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" alignItems=\"flex-start\">\n                            <Avatar >\n                                <AssignmentTurnedInIcon />\n                            </Avatar>\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.text} {' '}\n                                    <TaskChip record={record} />\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={record}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            {\n                                record.status != doneStatus && \n                                <DoneButton record={record} />\n                            }\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <TaskAside record={record} />\n        </Box>\n    );\n};\n\n\nconst DoneButton = ({\n    record,\n}: {\n    record: Task;\n}) =>{\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n    const notify = useNotify();\n\n    const handleDone = (event: any) => {\n        event.preventDefault();\n        update(\n            'tasks',\n            ((record && record.id) as unknown) as Identifier,\n            {\n                status: doneStatus,\n            },\n            record, {\n                onSuccess: () => {\n                    notify('Task is marked done', 'info');\n                    refresh();\n                },\n            },\n        );\n        return false;\n    };\n    return (\n        <Button\n            label=\"Done\"\n            variant=\"outlined\"\n            onClick={handleDone}\n        >\n            <DoneIcon />\n        </Button>\n    );\n}","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { getStatus } from './status';\n\nexport const TaskStatus = ({ status }: { status: string }) => {\n    const statusItem = getStatus(status);\n    const statusColor = statusItem ? statusItem.color : \"#000\";\n    return (\n        <Box\n            width={10}\n            height={10}\n            display=\"inline-block\"\n            borderRadius={5}\n            bgcolor={statusColor}\n            component=\"span\"\n        />\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { \n    endOfYesterday, \n    startOfWeek, \n    startOfMonth, \n    subMonths, \n    endOfToday,\n    endOfWeek,\n    addWeeks,\n    endOfMonth,\n } from 'date-fns';\n\nimport { TaskStatus } from './TaskStatus';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { statuses } from './status';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const TaskListFilter = () => {\n    const { identity } = useGetIdentity();\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Due date\" icon={<AccessTimeIcon />}>\n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfToday().toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"This month\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfMonth(new Date()).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                {statuses.map(status =>(\n                    <FilterListItem\n                    label={\n                        <>\n                            {status.name} <TaskStatus status={status.id} />\n                        </>\n                    }\n                    value={{\n                        status: status.id,\n                    }}\n                />\n                ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { BulkUpdateButton, BulkActionProps } from 'react-admin';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst doneState = { status: 'done' };\n\nconst MarkDoneButton = (props: BulkActionProps) => (\n    <BulkUpdateButton\n        {...props}\n        label=\"Mark checked\"\n        data={doneState}\n        icon={<DoneIcon/>}\n        mutationMode=\"pessimistic\"\n    />\n);\n\nexport default MarkDoneButton;","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { Fragment } from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    BulkDeleteButton,\n    useGetIdentity,\n    BulkActionProps,\n    ListActionsProps,\n    FunctionField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n    Avatar,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { ImportButton } from \"react-admin-import-csv\";\n\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { TaskListFilter } from './TaskListFilter';\nimport { Sale, Task } from '../types';\nimport MarkDoneButton from './MarkDoneButton';\nimport { TaskStatus } from './TaskStatus';\n\nconst TaskListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Task\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const task = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/Tasks/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar>\n                                <AssignmentTurnedInIcon />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <>\n                                {task.text} \n                                </>\n                            }\n                            secondary={\n                                <>\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={task}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                due in{' '}\n                                {formatDistance(\n                                    new Date(task.due_date),\n                                    now\n                                )}\n                                {' '}<TaskStatus status={task.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst TaskListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['due_date']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/Tasks\"\n                variant=\"contained\"\n                label=\"New Task\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nconst TaskBulkActionButtons = (props: BulkActionProps) => (\n    <Fragment>\n        <MarkDoneButton {...props} />\n        {/* default bulk delete action */}\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nexport const TaskList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<TaskListActions />}\n            aside={<TaskListFilter />}\n            bulkActionButtons={<TaskBulkActionButtons />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id, status: 'pending' }}\n            sort={{ field: 'due_date', order: 'ASC' }}\n        >\n            <TaskListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    required,\n    Toolbar,\n    useEditContext,\n    DateInput,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport omit from 'lodash/omit';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { TaskAside } from './TaskAside';\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst TaskEditContent = () => {\n    const classes = useStyles();\n    const { record, loaded, save } = useEditContext<Task>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                        <Avatar >\n                                            <AssignmentTurnedInIcon />\n                                        </Avatar>\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <TextInput \n                                                source=\"text\"\n                                                label=\"Task\"\n                                                validate={[required()]}\n                                                fullWidth\n                                            />\n                                            <DateInput\n                                                source=\"due_date\"\n                                                className={clsx(classes.inline, 'first-child')}\n                                            />\n                                            <SelectInput\n                                                source=\"status\"\n                                                choices={statuses}\n                                                className={classes.inline}\n                                            />\n                                            \n                                            <ReferenceInput\n                                                source=\"sales_id\"\n                                                reference=\"sales\"\n                                                label=\"Assigned to\"\n                                                helperText={false}\n                                            >\n                                                <SelectInput\n                                                    optionText={(sales: any) =>\n                                                        `${sales.first_name} ${sales.last_name}`\n                                                    }\n                                                />\n                                            </ReferenceInput>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <TaskAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const TaskEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <TaskEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    DateInput,\n    useCreateContext,\n    SelectField,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\n\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const TaskCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const defaultValue = () => ({\n        due_date: new Date(), \n        status: 'pending',\n        sales_id: identity && identity?.id,\n    });\n    const transform = (data: Task) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={defaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"text\"\n                    label=\"Task\"\n                    validate={[required()]}\n                    fullWidth\n                />\n                <DateInput\n                    source=\"due_date\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"status\"\n                    choices={statuses}\n                    formClassName={classes.inline}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Assigned to\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar >\n                    <AssignmentTurnedInIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { TaskShow } from './TaskShow';\nimport { TaskList } from './TaskList';\nimport { TaskEdit } from './TaskEdit';\nimport { TaskCreate } from './TaskCreate';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nexport default {\n    list: TaskList,\n    show: TaskShow,\n    edit: TaskEdit,\n    create: TaskCreate,\n    icon: FormatListBulletedIcon,\n};\n","import * as React from 'react';\nimport { ReferenceField, useRedirect } from 'react-admin';\nimport { Card, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { LogoField } from '../companies/LogoField';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    cardContent: {\n        padding: theme.spacing(1),\n        display: 'flex',\n    },\n    cardText: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const DealCard = ({ deal, index }: { deal: Deal; index: number }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    if (!deal) return null;\n\n    const handleClick = () => {\n        redirect(`/deals/${deal.id}/show`);\n    };\n    return (\n        <Draggable draggableId={String(deal.id)} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className={classes.root}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    onClick={handleClick}\n                >\n                    <Card\n                        style={{\n                            opacity: snapshot.isDragging ? 0.9 : 1,\n                            transform: snapshot.isDragging\n                                ? 'rotate(-2deg)'\n                                : '',\n                        }}\n                        elevation={snapshot.isDragging ? 3 : 1}\n                    >\n                        <Box p={1} display=\"flex\">\n                            <ReferenceField\n                                source=\"company_id\"\n                                record={deal}\n                                reference=\"companies\"\n                                resource=\"deals\"\n                                basePath=\"/deals\"\n                            >\n                                <LogoField size=\"small\" />\n                            </ReferenceField>\n                            <Box ml={1}>\n                                <Typography variant=\"body2\" gutterBottom>\n                                    {deal.name}\n                                </Typography>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    {deal.amount.toLocaleString('en-US', {\n                                        notation: 'compact',\n                                        style: 'currency',\n                                        currency: 'USD',\n                                        currencyDisplay: 'narrowSymbol',\n                                        minimumSignificantDigits: 3,\n                                    })}\n                                    , {deal.type}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Card>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Identifier, RecordMap } from 'react-admin';\n\nimport { DealCard } from './DealCard';\nimport { stageNames } from './stages';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        flex: 1,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: '#eaeaee',\n        '&:first-child': {\n            paddingLeft: 5,\n            borderTopLeftRadius: 5,\n        },\n        '&:last-child': {\n            paddingRight: 5,\n            borderTopRightRadius: 5,\n        },\n    },\n    droppable: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 5,\n        padding: 5,\n        '&.isDraggingOver': {\n            backgroundColor: '#dadadf',\n        },\n    },\n});\n\nexport const DealColumn = ({\n    stage,\n    dealIds,\n    data,\n}: {\n    stage: string;\n    dealIds: Identifier[];\n    data: RecordMap<Deal>;\n}) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography align=\"center\" variant=\"subtitle1\">\n                {/* @ts-ignore */}\n                {stageNames[stage]}\n            </Typography>\n            <Droppable droppableId={stage}>\n                {(droppableProvided, snapshot) => (\n                    <div\n                        ref={droppableProvided.innerRef}\n                        {...droppableProvided.droppableProps}\n                        className={\n                            classes.droppable +\n                            (snapshot.isDraggingOver ? ' isDraggingOver' : '')\n                        }\n                    >\n                        {dealIds.map((id, index) => (\n                            <DealCard key={id} index={index} deal={data[id]} />\n                        ))}\n                        {droppableProvided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport {\n    useMutation,\n    Identifier,\n    useListContext,\n    RecordMap,\n    DataProviderContext,\n} from 'react-admin';\nimport { Box } from '@material-ui/core';\nimport { DragDropContext, OnDragEndResponder } from 'react-beautiful-dnd';\nimport isEqual from 'lodash/isEqual';\n\nimport { DealColumn } from './DealColumn';\nimport { stages } from './stages';\nimport { Deal } from '../types';\n\ninterface DealsByColumn {\n    [stage: string]: Identifier[];\n}\n\nconst initialDeals: DealsByColumn = stages.reduce(\n    (obj, stage) => ({ ...obj, [stage]: [] }),\n    {}\n);\n\nconst getDealsByColumn = (\n    ids: Identifier[],\n    data: RecordMap<Deal>\n): DealsByColumn => {\n    // group deals by column\n    const columns = ids.reduce(\n        (acc, id) => {\n            acc[data[id].stage].push(id);\n            return acc;\n        },\n        stages.reduce((obj, stage) => ({ ...obj, [stage]: [] }), {} as any)\n    );\n    // order each column by index\n    stages.forEach(stage => {\n        columns[stage] = columns[stage].sort(\n            (a: Identifier, b: Identifier) => data[a].index - data[b].index\n        );\n    });\n    return columns;\n};\n\nexport const DealListContent = () => {\n    const {\n        data,\n        ids,\n        loaded,\n        page,\n        perPage,\n        currentSort,\n        filterValues,\n    } = useListContext<Deal>();\n\n    const [deals, setDeals] = useState<DealsByColumn>(\n        loaded ? getDealsByColumn(ids, data) : initialDeals\n    );\n    // we use the raw dataProvider to avoid too many updates to the Redux store after updates (which would create junk)\n    const dataProvider = useContext(DataProviderContext);\n\n    // FIXME: use refetch when available\n    const [refresh] = useMutation({\n        resource: 'deals',\n        type: 'getList',\n        payload: {\n            pagination: { page, perPage },\n            sort: currentSort,\n            filter: filterValues,\n        },\n    });\n\n    // update deals by columns when the dataProvider response updates\n    useEffect(() => {\n        if (!loaded) return;\n        const newDeals = getDealsByColumn(ids, data);\n        if (isEqual(deals, newDeals)) {\n            return;\n        }\n        setDeals(newDeals);\n    }, [data, ids, loaded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!loaded) return null;\n\n    const onDragEnd: OnDragEndResponder = async result => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // moving deal inside the same column\n\n            const column = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const sourceDeal = data[column[source.index]];\n            const destinationDeal = data[column[destination.index]];\n\n            // update local state\n            // remove source deal from column\n            column.splice(source.index, 1);\n            // read source deal at destination\n            column.splice(destination.index, 0, Number(draggableId));\n            setDeals({\n                ...deals,\n                [source.droppableId]: column,\n            });\n\n            // update backend\n            // Fetch all the deals in this stage (because the list may be filtered, but we need to update even non-filtered deals)\n            const { data: columnDeals } = await dataProvider.getList('deals', {\n                sort: { field: 'index', order: 'ASC' },\n                pagination: { page: 1, perPage: 100 },\n                filter: { stage: source.droppableId },\n            });\n\n            if (source.index > destination.index) {\n                // deal moved up, eg\n                // dest   src\n                //  <------\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between destination.index and source.index, increase the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index >= destinationDeal.index &&\n                                deal.index < sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index + 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            } else {\n                // deal moved down, e.g\n                // src   dest\n                //  ------>\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between source.index and destination.index, decrease the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index <= destinationDeal.index &&\n                                deal.index > sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index - 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            }\n        } else {\n            // moving deal across columns\n\n            const sourceColumn = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const destinationColumn = Array.from(\n                deals[destination.droppableId]\n            ); // [4, 7, 23, 5] arrays of ids\n            const sourceDeal = data[sourceColumn[source.index]];\n            const destinationDeal = data[destinationColumn[destination.index]]; // may be undefined if dropping at the end of a column\n\n            // update local state\n            sourceColumn.splice(source.index, 1);\n            destinationColumn.splice(destination.index, 0, draggableId);\n            setDeals({\n                ...deals,\n                [source.droppableId]: sourceColumn,\n                [destination.droppableId]: destinationColumn,\n            });\n\n            // update backend\n            // Fetch all the deals in both stages (because the list may be filtered, but we need to update even non-filtered deals)\n            const [\n                { data: sourceDeals },\n                { data: destinationDeals },\n            ] = await Promise.all([\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: source.droppableId },\n                }),\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: destination.droppableId },\n                }),\n            ]);\n\n            await Promise.all([\n                // decrease index on the deals after the source index in the source columns\n                ...sourceDeals\n                    .filter(deal => deal.index > sourceDeal.index)\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index - 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // increase index on the deals after the destination index in the destination columns\n                ...destinationDeals\n                    .filter(deal =>\n                        destinationDeal\n                            ? deal.index >= destinationDeal.index\n                            : false\n                    )\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index + 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // change the dragged deal to take the destination index and column\n                dataProvider.update('deals', {\n                    id: sourceDeal.id,\n                    data: {\n                        index: destinationDeal\n                            ? destinationDeal.index\n                            : (destinationDeals.length > 0)\n                            ? destinationDeals.pop()!.index + 1 \n                            : 0,\n                        stage: destination.droppableId,\n                    },\n                    previousData: sourceDeal,\n                }),\n            ]);\n\n            refresh();\n        }\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Box display=\"flex\">\n                {stages.map(stage => (\n                    <DealColumn\n                        stage={stage}\n                        dealIds={deals[stage]}\n                        data={data}\n                        key={stage}\n                    />\n                ))}\n            </Box>\n        </DragDropContext>\n    );\n};\n","export const types = [\n    'Other',\n    'Copywriting',\n    'Print project',\n    'UI Design',\n    'Website design',\n];\n\nexport const typeChoices = types.map(type => ({ id: type, name: type }));\n","import * as React from 'react';\nimport {\n    Create,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    NumberInput,\n    ReferenceInput,\n    AutocompleteInput,\n    required,\n    useRedirect,\n    useDataProvider,\n    useGetIdentity,\n} from 'react-admin';\nimport { Dialog } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stageChoices } from './stages';\nimport { typeChoices } from './types';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n});\n\nexport const DealCreate = ({ open }: { open: boolean }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const dataProvider = useDataProvider();\n    const { identity } = useGetIdentity();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    const onSuccess = ({ data: deal }: { data: Deal }) => {\n        redirect('/deals');\n        // increase the index of all deals in the same stage as the new deal\n        dataProvider\n            .getList('deals', {\n                pagination: { page: 1, perPage: 50 },\n                sort: { field: 'id', order: 'ASC' },\n                filter: { stage: deal.stage },\n            })\n            .then(({ data: deals }) =>\n                Promise.all(\n                    deals\n                        .filter(oldDeal => oldDeal.id !== deal.id)\n                        .map(oldDeal =>\n                            dataProvider.update('deals', {\n                                id: oldDeal.id,\n                                data: { index: oldDeal.index + 1 },\n                                previousData: oldDeal,\n                            })\n                        )\n                )\n            );\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Create\n                resource=\"deals\"\n                basePath=\"/deals\"\n                className={classes.root}\n                onSuccess={onSuccess}\n            >\n                <SimpleForm initialValues={{ index: 0, sales_id: identity && identity?.id }}>\n                    <TextInput\n                        source=\"name\"\n                        label=\"Deal name\"\n                        fullWidth\n                        validate={[required()]}\n                    />\n                    <TextInput\n                        source=\"description\"\n                        multiline\n                        rows={3}\n                        fullWidth\n                    />\n                    <ReferenceInput\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        fullWidth\n                        validate={[required()]}\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <SelectInput\n                        source=\"stage\"\n                        choices={stageChoices}\n                        fullWidth\n                        validate={[required()]}\n                        defaultValue=\"opportunity\"\n                    />\n                    <SelectInput\n                        source=\"type\"\n                        choices={typeChoices}\n                        fullWidth\n                    />\n                    <NumberInput source=\"amount\" fullWidth defaultValue={0} />\n                    <ReferenceInput\n                        source=\"sales_id\"\n                        reference=\"sales\"\n                        label=\"Account manager\"\n                        helperText={false}\n                        fullWidth\n                    >\n                        <SelectInput\n                            optionText={(sales: any) =>\n                                `${sales.first_name} ${sales.last_name}`\n                            }\n                        />\n                    </ReferenceInput>\n                </SimpleForm>\n            </Create>\n        </Dialog>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { Link } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    ul: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        display: 'inline-block',\n    },\n    li: {\n        display: 'inline',\n        '&:after': {\n            content: '\", \"',\n        },\n        '&:last-child:after': {\n            content: '\"\"',\n        },\n    },\n});\n\nexport const ContactList = () => {\n    const { ids, data, loaded } = useListContext();\n    const classes = useStyles();\n    if (!loaded) return <div style={{ height: '2em' }} />;\n    return (\n        <ul className={classes.ul}>\n            {ids.map(id => (\n                <li key={id} className={classes.li}>\n                    <Link\n                        component={RouterLink}\n                        to={`/contacts/${id}`}\n                        variant=\"subtitle1\"\n                    >\n                        {data[id].first_name} {data[id].last_name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n","import * as React from 'react';\nimport {\n    ShowBase,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    ReferenceArrayField,\n    useRecordContext,\n    useRedirect,\n    useRefresh,\n    useDataProvider,\n    Identifier,\n} from 'react-admin';\nimport {\n    Box,\n    Dialog,\n    DialogContent,\n    Typography,\n    Divider,\n    Button,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format } from 'date-fns';\n\nimport { CompanyAvatar } from '../companies/CompanyAvatar';\nimport { NotesIterator } from '../notes';\nimport { ContactList } from './ContactList';\nimport { stageNames } from './stages';\n\nconst useStyles = makeStyles({\n    dialog: {\n        position: 'absolute',\n        top: 50,\n    },\n});\n\nexport const DealShow = ({ open, id }: { open: boolean; id: Identifier }) => {\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            fullWidth\n            maxWidth=\"md\"\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogContent>\n                <ShowBase resource=\"deals\" basePath=\"/deals\" id={id}>\n                    <DealShowContent />\n                </ShowBase>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nconst DealShowContent = () => {\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    \n    if (!record) return null;\n\n    const onDelete = async() =>{\n        const { data: columnDeals } = await dataProvider.getList('deals', {\n            sort: { field: 'index', order: 'ASC' },\n            pagination: { page: 1, perPage: 100 },\n            filter: { stage: record.droppableId },\n        });\n        await Promise.all([\n            ...columnDeals\n                .filter(\n                    deal => deal.index < record.index\n                )\n                .map(deal =>\n                    dataProvider.update('deals', {\n                        id: deal.id,\n                        data: { index: deal.index - 1 },\n                        previousData: deal,\n                    })\n                ),\n            // for the deal that was moved, update its index\n            dataProvider.delete('deals', {\n                id: record.id,\n                previousData: record,\n            }),\n        ]);\n        redirect('/deals');\n        refresh();\n    };\n\n    return (\n        <>\n            <Box display=\"flex\">\n                <Box\n                    width={100}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                >\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <CompanyAvatar />\n                    </ReferenceField>\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <TextField\n                            source=\"name\"\n                            align=\"center\"\n                            component=\"div\"\n                        />\n                    </ReferenceField>\n                </Box>\n                <Box ml={2} flex=\"1\">\n                    <Box display=\"flex\" justifyContent=\"space-between\" >\n                        <Typography variant=\"h5\">{record.name}</Typography>\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<DeleteIcon />}            \n                            onClick={(e:any) =>{\n                                e.stopPropagation();\n                                onDelete();\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </Box>\n\n                    <Box display=\"flex\" mt={2}>\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Start\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {format(new Date(record.start_at), 'PP')}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Budget\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.amount.toLocaleString('en-US', {\n                                    notation: 'compact',\n                                    style: 'currency',\n                                    currency: 'USD',\n                                    currencyDisplay: 'narrowSymbol',\n                                    minimumSignificantDigits: 3,\n                                })}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Type\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.type}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Stage\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {/* @ts-ignore */}\n                                {stageNames[record.stage]}\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2}>\n                        <Box\n                            display=\"flex\"\n                            mr={5}\n                            flexDirection=\"column\"\n                            minHeight={48}\n                        >\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Contacts\n                            </Typography>\n                            <ReferenceArrayField\n                                source=\"contact_ids\"\n                                reference=\"contacts\"\n                            >\n                                <ContactList />\n                            </ReferenceArrayField>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2} style={{ whiteSpace: 'pre-line' }}>\n                        <Typography color=\"textSecondary\" variant=\"body2\">\n                            Description\n                        </Typography>\n                        <Typography>{record.description}</Typography>\n                    </Box>\n\n                    <Divider />\n\n                    <Box mt={2}>\n                        <ReferenceManyField\n                            target=\"deal_id\"\n                            reference=\"dealNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator reference=\"deals\" />\n                        </ReferenceManyField>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useListFilterContext, useGetIdentity } from 'react-admin';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const OnlyMineInput = ({ alwaysOn }: { alwaysOn: boolean }) => {\n    const {\n        filterValues,\n        displayedFilters,\n        setFilters,\n    } = useListFilterContext();\n    const { identity } = useGetIdentity();\n    const classes = useStyles();\n    const handleChange = () => {\n        const newFilterValues = { ...filterValues };\n        if (typeof filterValues.sales_id !== 'undefined') {\n            delete newFilterValues.sales_id;\n        } else {\n            newFilterValues.sales_id = identity && identity?.id;\n        }\n        setFilters(newFilterValues, displayedFilters);\n    };\n    return (\n        <div className={classes.root}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={typeof filterValues.sales_id !== 'undefined'}\n                        onChange={handleChange}\n                        color=\"primary\"\n                        name=\"checkedC\"\n                    />\n                }\n                label=\"Only companies I manage\"\n            />\n        </div>\n    );\n};\n\nOnlyMineInput.defaultProps = { source: 'sales_id' };\n","import * as React from 'react';\nimport {\n    CreateButton,\n    ExportButton,\n    FilterButton,\n    List,\n    ListProps,\n    SearchInput,\n    SelectInput,\n    TopToolbar,\n    useGetIdentity,\n} from 'react-admin';\nimport { Route } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DealListContent } from './DealListContent';\nimport { DealCreate } from './DealCreate';\nimport { DealShow } from './DealShow';\nimport { OnlyMineInput } from './OnlyMineInput';\nimport { typeChoices } from './types';\n\nexport const DealList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <>\n            <List\n                {...props}\n                perPage={100}\n                sort={{ field: 'index', order: 'ASC' }}\n                filters={dealFilters}\n                filterDefaultValues={{ sales_id: identity && identity?.id }}\n                actions={<DealActions />}\n                pagination={false}\n                component=\"div\"\n            >\n                <DealListContent />\n            </List>\n            <Route path=\"/deals/create\">\n                {({ match }) => <DealCreate open={!!match} />}\n            </Route>\n            <Route path=\"/deals/:id/show\">\n                {({ match }) =>\n                    !!match ? (\n                        <DealShow open={!!match} id={match?.params?.id} />\n                    ) : null\n                }\n            </Route>\n        </>\n    ) : null;\n};\n\nconst dealFilters = [\n    <SearchInput source=\"q\" alwaysOn />,\n    <OnlyMineInput alwaysOn />,\n    <SelectInput source=\"type\" choices={typeChoices} />,\n];\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst DealActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <FilterButton />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/deals\"\n                variant=\"contained\"\n                label=\"New Deal\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { DealList } from './DealList';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nexport default {\n    list: DealList,\n    icon: MonetizationOnIcon,\n};\n","export const categories = [\n    'Safety laser scanners', \n    '2D LiDAR sensors', \n    '3D LiDAR sensors', \n    'Cleaning Robot',\n].map(category => ({ id: category, name: category }));","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nimport { ProductFamily } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\nimport { categories } from '../productFamilies/categories';\n\nconst useStyles = makeStyles(theme => ({\n    familyList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    categoryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const ProductListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: familyData, ids: familyIds } = useGetList<ProductFamily>(\n        'productFamilies',\n        { page: 1, perPage: 1000 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Families\" icon={<CategoryIcon />}>\n                <div className={classes.familyList}>\n                    {familyIds &&\n                        familyData &&\n                        familyIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<Chip label={familyData[id].name} size=\"small\"/>}\n                                value={{ family_id: id }}\n                            />\n                        ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Categories\" icon={<CategoryIcon />}>\n                <div className={classes.categoryList}>\n                    {categories.map(category => (\n                            <FilterListItem\n                                key={category.id}\n                                label={category.name}\n                                value={{ 'family.category': category.id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ProductGridList } from './ProductGridList';\nimport { ProductListFilter } from './ProductListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\n\nexport const ProductList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<ProductListActions />}\n            aside={<ProductListFilter />}\n            filterDefaultValues={{ }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n            perPage={25}\n            sort={{ field: 'model', order: 'ASC' }}\n            component=\"div\"\n        >\n            <ProductGridList />\n        </List>\n    ) : null;\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ProductListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/products\"\n                variant=\"contained\"\n                label=\"New Product\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n    ReferenceInput,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    DialogTitle,\n } from '@material-ui/core';\n import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nexport const CreatePropertyType = () => {\n    const classes = useStyles();\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [unit, setUnit] = useState('');\n    const [synonyms, setSynonyms] = useState('');\n    const [create] = useCreate('propertyTypes');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        unit: unit,\n                        synonyms: synonyms,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: any;}) => {\n                    setName('');\n                    setUnit('');\n                    setSynonyms('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>Add new Product Property Type</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <div className={classes.root}>\n                        <TextField\n                            label=\"New type name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                            required\n                        />\n                        <TextField\n                            label=\"Unit\"\n                            value={unit}\n                            onChange={event => setUnit(event.target.value)}\n                        />\n                        <TextField\n                            label=\"Commma separated synonyms\"\n                            value={synonyms}\n                            onChange={event => setSynonyms(event.target.value)}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" disabled={!name}>Add</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import { \n    AutocompleteInput, \n    ReferenceInput, \n    SimpleFormIterator,\n    SimpleFormIteratorProps, \n    TextInput, \n} from \"react-admin\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nimport { CreatePropertyType } from \"./CreatePropertyType\";\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(1),\n        width: '32%',\n        minWidth: theme.spacing(10),\n        '&.first-child': {\n            marginLeft: 0,\n        },\n        [theme.breakpoints.down('xs')]: {\n            display: 'block',\n            marginLeft: 0,\n            width: '100%',\n            margin: 0,\n        }\n    },\n    \n}));\n\nexport const PropertyFormIterator = (props: SimpleFormIteratorProps) => {\n    const classes = useStyles();\n    return (\n        <SimpleFormIterator {...props} >\n            <ReferenceInput\n                source=\"type_id\"\n                reference=\"propertyTypes\"\n                label=\"Type\"\n                formClassName={classNames(classes.inline, 'first-child')}\n                fullWidth\n            >\n                <AutocompleteInput \n                    optionText=\"name\" \n                    create={<CreatePropertyType />}\n                />\n            </ReferenceInput>\n            <TextInput \n                source=\"property_value\" \n                label=\"Value\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n            <TextInput \n                source=\"condition\"  \n                label=\"Condition\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n        </SimpleFormIterator>\n    );\n};","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    Select,\n    MenuItem,\n    Box,\n    DialogTitle,\n } from '@material-ui/core';\n import { ProductFamily } from '../types';\n import { categories } from './categories';\n\nexport const CreateProductFamily = () => {\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [category, setCategory] = useState('');\n    const [website, setWebsite] = useState('');\n    const [image, setImage] = useState('');\n    const [create] = useCreate('productFamilies');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        image: image,\n                        website: website,\n                        category: category,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: ProductFamily;}) => {\n                    setName('');\n                    setImage('');\n                    setWebsite('');\n                    setCategory('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>New Product Category</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Select\n                            label=\"Category\"\n                            value={category}\n                            onChange={(event:any) => setCategory(event.target.value)}\n                        >\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\n                            {categories.map(category => (\n                                <MenuItem\n                                    key={category.id}\n                                    value={category.id}\n                                >\n                                    {category.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n\n                        <TextField\n                            label=\"New category name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            label=\"Website\"\n                            value={website}\n                            onChange={event => setWebsite(event.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            label=\"Image\"\n                            value={image}\n                            onChange={event => setImage(event.target.value)}\n                            autoFocus\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\">Save</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    TabbedForm,\n    TextInput,\n    FormTab,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    ArrayInput,\n    SimpleFormIterator,\n    ReferenceArrayInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { Box, CardContent, Divider, Avatar, useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\nimport { CreateProductFamily } from '../productFamilies/CreateProductFamily';\n\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n    propertyContainer: {\n        display: 'flex',\n        gap: theme.spacing(1),\n        minWidth: '500px',\n    },\n}));\n\nexport const ProductCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const theme = useTheme();\n\n    const defaultValue = () => ({ });\n\n    return (\n        <Create {...props} actions={false} >\n            <TabbedForm redirect=\"show\">\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput \n                            optionText=\"name\" \n                            create={<CreateProductFamily />}\n                        />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <ShoppingCartIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth=\"80%\">\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const ProductImageField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: Product;\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.image) return (\n        <Avatar>\n            <ShoppingCartIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            title={record.model}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n} from 'react-admin';\nimport { Box, Typography, Divider, Link } from '@material-ui/core';\n\nimport { Product, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ProductAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: Product;\n    link?: string;\n}) =>{\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/products\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Product;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Product info</Typography>\n            <Divider />\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Company: \n                <ReferenceField\n                    record={record}\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Family: \n                <ReferenceField\n                    record={record}\n                    source=\"family_id\"\n                    reference=\"productFamilies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1}>\n                Code: <TextField source=\"code\" record={record} />\n            </Box>\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n\n            <Box mt={3}>\n                <Typography variant=\"subtitle2\">Description</Typography>\n                <Divider />\n\n                <Box mt={1}>\n                    <TextField source=\"description\" />\n                </Box>\n\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    EditButton,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    Datagrid,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { NotesIterator } from '../notes';\n\n\nimport { ProductImageField } from './ProductImageField';\nimport { ProductAside } from './ProductAside';\nimport { Product, ProductPrperty } from '../types';\nimport { LogoField } from '../companies/LogoField';\nimport { CompanyGridList } from '../companies/CompanyGridList';\nimport { CompanyCard } from '../companies/CompanyCard';\n\nexport const ProductShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductShowContent />\n    </ShowBase>\n);\n\nconst ProductShowContent = () => {\n    const { record, loaded } = useShowContext<Product>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <ProductImageField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.model}</Typography>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes > 1\n                                        ? `${record.nb_notes} Notes`\n                                        : `${record.nb_notes} Note`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_properties > 1\n                                        ? `${record.nb_properties} Properties`\n                                        : `${record.nb_properties} Property`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_used_by > 1\n                                        ? `Used by ${record.nb_used_by} Companies`\n                                        : `Used by ${record.nb_used_by} Company`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"productNotes\"\n                                target=\"product_id\"\n                            >\n                                 <NotesIterator reference=\"products\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField reference=\"productProperties\" target=\"product_id\" addLabel={false}>\n                                <Datagrid>\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                    <TextField source=\"property_value\" />\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"unit\" />\n                                    </ReferenceField>\n                                    <TextField source=\"condition\" />\n    \n                                </Datagrid>\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Box mt={1}>\n                            <ReferenceArrayField\n                                reference=\"companies\"\n                                source=\"used_by_companies\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <CompanyGridList />\n                            </ReferenceArrayField>\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ProductPrpertiesIterator = () => {\n    const { data, ids, loaded } = useListContext<ProductPrperty>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const productProperty = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/productProperties/${id}/show`}\n                        >\n                            {/* <ListItemAvatar>\n                                <Avatar record={productProperty} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${productProperty.first_name} ${productProperty.last_name}`}\n                                secondary={\n                                    <>\n                                        {productProperty.title}{' '}\n                                        {productProperty.nb_notes &&\n                                        `- ${productProperty.nb_notes} notes `}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(productProperty.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={productProperty.status} />\n                                </Typography>\n                            </ListItemSecondaryAction> */}\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                {/* <CreateRelatedProductPrpertyButton record={record} /> */}\n            </Box>\n        </Box>\n    );\n};\n\n// const CreateRelatedProductPrpertyButton = ({ record }: any) => (\n//     <Button\n//         component={RouterLink}\n//         to={{\n//             pathname: '/productProperties/create',\n//             state: { record: { product_id: record.id } },\n//         }}\n//         color=\"primary\"\n//         variant=\"contained\"\n//         size=\"small\"\n//         startIcon={<PersonAddIcon />}\n//     >\n//         Add property\n//     </Button>\n// );\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    TabbedForm,\n    FormTab,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    required,\n    ArrayInput,\n    SimpleFormIterator,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductAside } from './ProductAside';\nimport { ProductImageField } from './ProductImageField';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const ProductEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit \n            {...props} \n            aside={<ProductAside link=\"show\" />} \n            actions={false}\n        >\n            <TabbedForm\n                redirect=\"show\"\n            >\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <ProductImageField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductList } from './ProductList';\nimport { ProductCreate } from './ProductCreate';\nimport { ProductShow } from './ProductShow';\nimport { ProductEdit } from './ProductEdit';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    show: ProductShow,\n    icon: FiberManualRecordIcon,\n};\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { ProductFamily } from '../types';\n\nexport const Avatar = ({ record }: { record: ProductFamily }) => (\n    <MuiAvatar src={record.image}>\n        {record.name}\n    </MuiAvatar>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const ProductFamilyListFilter = () => {\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    SelectField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ProductFamilyListFilter } from './ProductFamilyListFilter';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst ProductFamilyListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        ProductFamily\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const record = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/productFamilies/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={record} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${record.name}`}\n                            secondary={\n                                <>\n                                    {record.name} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst ProductFamilyListActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/productFamilies\"\n                variant=\"contained\"\n                label=\"Add New\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ProductFamilyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ProductFamilyListActions />}\n            aside={<ProductFamilyListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{  }}\n            // sort={{  }}\n        >\n            <ProductFamilyListContent />\n        </RaList>\n    ) : null;\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport { \n    Card, \n    CardContent, \n    Divider, \n    Box, \n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n } from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ProductFamilyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n\n    const contactDefaultValue = () => ({ });\n    const transform = (data: ProductFamily) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <SelectInput\n                    source=\"category\"\n                    choices={categories}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"name\" fullWidth />\n                <TextInput source=\"website\" fullWidth />\n                <TextInput source=\"image\" fullWidth />\n                <TextInput \n                    source=\"description\"\n                    multiline\n                    rows={3} \n                    fullWidth \n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <CategoryIcon />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    SelectField,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider,\n    Link,\n } from '@material-ui/core';\n\nimport { ProductFamily, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { categories } from './categories';\n\nexport const ProductFamilyAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: ProductFamily;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/productFamilies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: ProductFamily;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Family info</Typography>\n            <Divider />\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                <Typography>Category:</Typography>\n                <SelectField\n                    source=\"category\"\n                    choices={categories}\n                />\n            </Box>\n\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ProductFamilyEditContent = () => {\n    const { record, loaded, save } = useEditContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex={1}>\n                                            <SelectInput\n                                                source=\"category\"\n                                                choices={categories}\n                                            />\n                                            <TextInput source=\"name\" fullWidth />\n                                            <TextInput source=\"website\" fullWidth />\n                                            <TextInput source=\"image\" fullWidth />\n                                            <TextInput \n                                                source=\"description\"\n                                                multiline\n                                                rows={3} \n                                                fullWidth \n                                            />\n                                        </Box>\n                                        \n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ProductFamilyAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ProductFamilyEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ProductFamilyEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n    SelectField,\n    Pagination,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { ProductFamily } from '../types';\nimport { ProductGridList } from '../products/ProductGridList';\nimport { categories } from './categories';\n\nexport const ProductFamilyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductFamilyShowContent />\n    </ShowBase>\n);\n\nconst ProductFamilyShowContent = () => {\n    const { record, loaded } = useShowContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {record.title} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box mt={2} p={1}>\n                            <ReferenceManyField\n                                reference=\"products\"\n                                target=\"family_id\"\n                                label=\"Products\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <ProductGridList />\n                            </ReferenceManyField>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductFamilyAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductFamilyList } from './ProductFamilyList';\nimport { ProductFamilyCreate } from './ProductFamilyCreate';\nimport { ProductFamilyEdit } from './ProductFamilyEdit';\nimport { ProductFamilyShow } from './ProductFamilyShow';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nexport default {\n    list: ProductFamilyList,\n    create: ProductFamilyCreate,\n    edit: ProductFamilyEdit,\n    show: ProductFamilyShow,\n    icon: CategoryIcon,\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport {\n    useTranslate,\n    DashboardMenuItem,\n    MenuItemLink,\n    MenuProps,\n    ReduxState,\n} from 'react-admin';\n\n\nimport SubMenu from './SubMenu';\nimport { AppState } from '../types';\n\nimport companies from '../companies';\nimport contacts from '../contacts';\nimport tasks from '../tasks';\nimport deals from '../deals';\nimport products from '../products';\nimport productFamilies from '../productFamilies';\n\n\n\ntype MenuName = 'menuCrm' | 'menuProduct' | 'menuCustomers';\n\nconst Menu = ({ dense = false }: MenuProps) => {\n    const [state, setState] = useState({\n        menuCrm: true,\n        menuProduct: true,\n        menuCustomers: true,\n    });\n    const translate = useTranslate();\n    const open = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen);\n    useSelector((state: AppState) => state.theme); // force rerender on theme change\n    const classes = useStyles();\n\n    const handleToggle = (menu: MenuName) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div\n            className={classnames(classes.root, {\n                [classes.open]: open,\n                [classes.closed]: !open,\n            })}\n        >\n            {' '}\n            <DashboardMenuItem />\n            <SubMenu\n                handleToggle={() => handleToggle('menuCrm')}\n                isOpen={state.menuCrm}\n                name=\"CRM\"\n                icon={<companies.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/companies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Companies\"\n                    leftIcon={<companies.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/contacts',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Contacts\"\n                    leftIcon={<contacts.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/deals',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Deals\"\n                    leftIcon={<deals.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/tasks',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Taks\"\n                    leftIcon={<tasks.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuProduct')}\n                isOpen={state.menuProduct}\n                name=\"Products\"\n                icon={<products.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/products',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Products\"\n                    leftIcon={<products.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/productFamilies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Families\"\n                    leftIcon={<productFamilies.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    open: {\n        width: 200,\n    },\n    closed: {\n        width: 55,\n    },\n}));\n\nexport default Menu;\n","export const darkTheme = {\n    palette: {\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#FBBA72',\n        },\n        type: 'dark' as 'dark', // Switching the dark mode on is a single property value change.\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#ffffffb3',\n                backgroundColor: '#616161e6',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        primary: {\n            main: '#4f3cc9',\n        },\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n        background: {\n            default: '#fcfcfe',\n        },\n        type: 'light' as 'light',\n    },\n    shape: {\n        borderRadius: 10,\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        RaMenuItemLink: {\n            root: {\n                borderLeft: '3px solid #fff',\n            },\n            active: {\n                borderLeft: '3px solid #4f3cc9',\n            },\n        },\n        MuiPaper: {\n            elevation1: {\n                boxShadow: 'none',\n            },\n            root: {\n                border: '1px solid #e0e0e3',\n                backgroundClip: 'padding-box',\n            },\n        },\n        MuiButton: {\n            contained: {\n                backgroundColor: '#fff',\n                color: '#4f3cc9',\n                boxShadow: 'none',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#808080',\n                backgroundColor: '#fff',\n            },\n        },\n        MuiLinearProgress: {\n            colorPrimary: {\n                backgroundColor: '#f5f5f5',\n            },\n            barColorPrimary: {\n                backgroundColor: '#d7d7d7',\n            },\n        },\n        MuiFilledInput: {\n            root: {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                '&$disabled': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n            },\n        },\n        MuiSnackbarContent: {\n            root: {\n                border: 'none',\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n","import * as React from 'react';\n\n\nimport { \n    Notification, \n    NotificationProps,\n} from 'react-admin';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst NotificationContainer = (props: any) => {\n    const classes = useStyles();\n    return (\n        <Notification {...props} autoHideDuration={5000} />\n    )\n}\n\nexport default NotificationContainer;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Layout, LayoutProps } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme } from './themes';\nimport { AppState } from '../types';\nimport NotificationContainer from '../notifications/NotificationContainer';\n\nexport default (props: LayoutProps) => {\n    const theme = useSelector((state: AppState) =>\n        state.theme === 'dark' ? darkTheme : lightTheme\n    );\n\n    return (\n        <Layout \n            {...props} \n            appBar={AppBar} \n            menu={Menu} \n            theme={theme} \n            notification={NotificationContainer}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, withTypes } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Link,\n    Typography,\n} from '@material-ui/core';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Notification, useTranslate, useLogin, useNotify } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        // marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst renderInput = ({\n    meta: { touched, error } = { touched: false, error: undefined },\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    username?: string;\n    password?: string;\n}\n\nconst { Form } = withTypes<FormValues>();\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const translate = useTranslate();\n    const classes = useStyles();\n    const notify = useNotify();\n    const login = useLogin();\n    const location = useLocation<{ nextPathname: string } | null>();\n\n    const handleSubmit = async (auth: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await login(auth, location.state ? location.state.nextPathname : '/');\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    const validate = ({\n        username,\n        password,\n    }: FormValues) => {\n        const errors = { \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined,\n        };\n        return errors;\n    };\n\n    return (\n        <Form\n            onSubmit={handleSubmit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className={classes.main}>\n                        <Card className={classes.card}>\n                            <div className={classes.avatar}>\n                                <Avatar className={classes.icon}>\n                                    <LockIcon />\n                                </Avatar>\n                            </div>\n                            <div className={classes.hint}>\n                                Wecome to Assistor.\n                            </div>\n                            <div className={classes.form}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        name=\"username\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                    />\n                                </div>\n                                <div className={classes.input}>\n                                    <Field\n                                        name=\"password\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </div>\n                            <CardActions className={classes.actions}>\n                                <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    fullWidth\n                                >\n                                    {loading && (\n                                        <CircularProgress\n                                            size={25}\n                                            thickness={2}\n                                        />\n                                    )}\n                                    {translate('ra.auth.sign_in')}\n                                </Button>\n                                <Typography variant=\"body2\">Or</Typography>\n                                <Link\n                                    color=\"textSecondary\"\n                                    component={RouterLink}\n                                    to=\"/register\"\n                                    variant=\"body1\"\n                                >\n                                    Register\n                                </Link>\n                            </CardActions>\n                        </Card>\n                        <Notification />\n                    </div>\n                </form>\n            )}\n        />\n    );\n};\n\nLogin.propTypes = {\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n};\n\n// We need to put the ThemeProvider decoration in another component\n// Because otherwise the useStyles() hook used in Login won't get\n// the right theme\nconst LoginWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Login {...props} />\n    </ThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Card, Box, Link } from '@material-ui/core';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport { useGetList, SimpleList, useGetIdentity } from 'react-admin';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Contact } from '../types';\n\nexport const HotContacts = () => {\n    const { identity } = useGetIdentity();\n    const {\n        data: contactData,\n        ids: contactIds,\n        total: contactTotal,\n        loaded: contactsLoaded,\n    } = useGetList<Contact>(\n        'contacts',\n        { page: 1, perPage: 10 },\n        { field: 'last_seen', order: 'DESC' },\n        { status: 'hot', sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <ContactsIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Link\n                    underline=\"none\"\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                    component={RouterLink}\n                    to=\"/contacts\"\n                >\n                    Hot contacts\n                </Link>\n            </Box>\n            <Card>\n                <SimpleList<Contact>\n                    basePath=\"/contacts\"\n                    linkType=\"show\"\n                    ids={contactIds}\n                    data={contactData}\n                    total={contactTotal}\n                    loaded={contactsLoaded}\n                    primaryText={contact =>\n                        `${contact.first_name} ${contact.last_name}`\n                    }\n                    secondaryText={contact =>\n                        formatDistance(\n                            new Date(contact.last_seen),\n                            new Date(),\n                            {\n                                addSuffix: true,\n                            }\n                        )\n                    }\n                    leftAvatar={contact => <Avatar record={contact} />}\n                />\n            </Card>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Card, CardContent, Typography, Box } from '@material-ui/core';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useGetList,\n    useGetIdentity,\n    ReferenceField,\n    TextField,\n    FunctionField,\n} from 'react-admin';\nimport { formatDistance } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n\nimport { Contact as ContactType } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    note: {\n        marginBottom: theme.spacing(2),\n    },\n    noteText: {\n        backgroundColor: theme.palette.grey[200],\n        padding: theme.spacing(1),\n        borderRadius: 10,\n    },\n    noteTextText: {\n        display: '-webkit-box',\n        '-webkit-line-clamp': 3,\n        '-webkit-box-orient': 'vertical',\n        overflow: 'hidden',\n    },\n}));\n\nexport const LatestNotes = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const {\n        data: contactNotesData,\n        ids: contactNotesIds,\n        loaded: contactNotesLoaded,\n    } = useGetList(\n        'contactNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: dealNotesData,\n        ids: dealNotesIds,\n        loaded: dealNotesLoaded,\n    } = useGetList(\n        'dealNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: companyNotesData,\n        ids: companyNotesIds,\n        loaded: companyNotesLoaded,\n    } = useGetList(\n        'companyNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    if (!contactNotesLoaded || !dealNotesLoaded || !companyNotesLoaded) {\n        return null;\n    }\n    // TypeScript guards\n    if (\n        !contactNotesIds ||\n        !contactNotesData ||\n        !dealNotesIds ||\n        !dealNotesData ||\n        !companyNotesIds ||\n        !companyNotesData\n    ) {\n        return null;\n    }\n\n    const allNotes = ([] as any[])\n        .concat(\n            contactNotesIds.map(id => ({\n                ...contactNotesData[id],\n                type: 'contactNote',\n            })),\n            dealNotesIds.map(id => ({\n                ...dealNotesData[id], \n                type: 'dealNote' \n            })),\n            companyNotesIds.map(id => ({\n                ...companyNotesData[id], \n                type: 'companyNote' \n            })),\n        )\n        .sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf())\n        .slice(0, 5);\n\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <NoteIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    My Latest Notes\n                </Typography>\n            </Box>\n            <Card>\n                <CardContent>\n                    {allNotes.map(note => (\n                        <div\n                            id={`${note.type}_${note.id}`}\n                            key={`${note.type}_${note.id}`}\n                            className={classes.note}\n                        >\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                on{' '}\n                                <NoteSource note={note} />\n                                , added{' '}\n                                {formatDistance(\n                                    new Date(note.date),\n                                    new Date(),\n                                    {\n                                        addSuffix: true,\n                                    }\n                                )}\n                            </Typography>\n                            <div className={classes.noteText}>\n                                <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                            </div>\n                        </div>\n                    ))}\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nconst NoteSource = ({ note }: any) => {\n    if (note.type === 'dealNote'){\n        return <Deal note={note} />;\n    }\n    else if (note.type === 'contactNote') {\n        return <Contact note={note} />;\n    }\n    else if (note.type === 'companyNote') {\n        return <Company note={note} />;\n    }\n    return null;\n};\n\nconst Deal = ({ note }: any) => (\n    <>\n        Deal{' '}\n        <ReferenceField\n            record={note}\n            source=\"deal_id\"\n            reference=\"deals\"\n            basePath=\"/deals\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n\nconst Contact = ({ note }: any) => (\n    <>\n        Contact{' '}\n        <ReferenceField\n            record={note}\n            source=\"contact_id\"\n            reference=\"contacts\"\n            basePath=\"/contacts\"\n            link=\"show\"\n        >\n            <FunctionField<ContactType>\n                variant=\"body1\"\n                render={contact =>\n                    contact ? `${contact.first_name} ${contact.last_name}` : ''\n                }\n            />\n        </ReferenceField>\n    </>\n);\n\nconst Company = ({ note }: any) => (\n    <>\n        Company{' '}\n        <ReferenceField\n            record={note}\n            source=\"company_id\"\n            reference=\"companies\"\n            basePath=\"/companies\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n","import React, { useState, memo } from \"react\";\nimport { \n    ComposableMap, \n    Geographies, \n    Geography, \n    ZoomableGroup,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { geoCentroid } from \"d3-geo\";\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { Country } from '../types';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst Map = memo(({setTooltipContent}: any) => {\n    const { data, ids, loaded } = useGetList<Country>(\n        'countries',\n        { perPage: 1000, page: 1 }\n    );\n    if (!loaded) return null;\n\n    const colorScale = scaleQuantile<string>()\n        .domain([0, max(ids.map(id => data[id].nb_companies))])\n        .range([\n            \"#e1f5fe\",\n            \"#b3e5fc\",\n            \"#81d4fa\",\n            \"#4fc3f7\",\n            \"#29b6f6\",\n            \"#03a9f4\",\n            \"#039be5\",\n            \"#0288d1\",\n            \"#0277bd\"\n        ]);\n\n    return (\n        <ComposableMap\n            data-tip=\"\"\n            projection=\"geoAzimuthalEqualArea\"\n            projectionConfig={{\n                rotate: [-25.0, -50.0, 0],\n                scale: 750\n            }}\n        >\n            <ZoomableGroup\n                center={[0, 0]}\n                zoom={1}\n            >\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) => (\n                        <>\n                            {geographies\n                            .map(geo => {\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <Geography \n                                            key={geo.rsmKey} \n                                            geography={geo} \n                                            fill={cur ? colorScale(data[cur].nb_companies) : \"#D6D6DA\"}\n                                            stroke=\"#EAEAEC\"\n                                            onMouseEnter={() => {\n                                                const { NAME, POP_EST } = geo.properties;\n                                                const nb_companies = cur ? data[cur].nb_companies : 0;\n                                                setTooltipContent(`${NAME} - ${nb_companies}`);\n                                            }}\n                                            onMouseLeave={() => {\n                                                setTooltipContent(\"\");\n                                            }}\n                                        />\n                                );\n                            })}\n                            {/* {geographies.map(geo => {\n                                const centroid = geoCentroid(geo);\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <g key={geo.rsmKey + \"-name\"}>\n                                        {cur &&\n                                            <Marker coordinates={centroid}>\n                                                <text y=\"2\" fontSize={9} textAnchor=\"middle\">\n                                                {data[cur].nicename}\n                                                </text>\n                                            </Marker>\n                                        }\n                                    </g>\n                                );\n                            })} */}\n                        </>\n                    )}\n                </Geographies>\n            </ZoomableGroup>\n        </ComposableMap>\n    );\n});\n\nexport const CompaniesMap = () => {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <div>\n            <Map setTooltipContent={setContent} />\n            <ReactTooltip>{content}</ReactTooltip>\n        </div>\n    );\n}","import * as React from 'react';\nimport { Box, Grid } from '@material-ui/core';\n\nimport { Welcome } from './Welcome';\nimport { DealsChart } from './DealsChart';\nimport { HotContacts } from './HotContacts';\nimport { LatestNotes } from './LatestNotes';\nimport { DealsPipeline } from './DealsPipeline';\nimport { CompaniesMap } from './CompaniesMap';\n\nexport const Dashboard = () => {\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={8}>\n                    <CompaniesMap />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <HotContacts />\n                </Grid>\n                <Grid item xs={12}>\n                    <LatestNotes />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\nimport {\n    Button,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Grid,\n    CardContent,\n    Typography,\n    Link,\n    Container,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    useTranslate, \n    useNotify, \n    useLogin, \n    useSafeSetState, \n    useRedirect,\n    useAuthProvider,\n} from 'react-admin';\nimport axios from 'axios';\n\n\nconst baseURL = \"/auth\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    button: {\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst Input = ({\n    meta: { touched, error }, // eslint-disable-line react/prop-types\n    input: inputProps, // eslint-disable-line react/prop-types\n    ...props\n}: {\n    meta: any;\n    input: any;\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n    confirm: string;\n}\n\nconst RegisterForm = ({ redirectTo }:\n    {redirectTo?: string | undefined;}) => {\n    const authProvider = useAuthProvider();\n    const [loading, setLoading] = useSafeSetState(false);\n    const translate = useTranslate();\n    const login = useLogin();\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const validate = ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password, \n        confirm \n    }: FormValues) => {\n        const errors = { \n            first_name: !first_name ? translate('ra.validation.required') : undefined, \n            last_name: !last_name ? translate('ra.validation.required') : undefined, \n            email: !email ? translate('ra.validation.required') : undefined, \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined, \n            confirm: password !== confirm ? 'Confirmation should match password': undefined\n        };\n        return errors;\n    };\n\n    interface ResponseType {\n        message: string;\n    }\n\n    const submit = async ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password,\n    }: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await authProvider.register({ \n                    first_name,\n                    last_name,\n                    email,\n                    username, \n                    password\n                });\n        \n            setLoading(false)\n            login({ username, password }, redirectTo)\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    return (\n        <Form\n            onSubmit={submit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <CardContent>\n                        <Container maxWidth=\"xs\">\n                        <Grid container spacing={2} >\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"first_name\"\n                                        name=\"first_name\"\n                                        component={Input}\n                                        label=\"First Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"last_name\"\n                                        name=\"last_name\"\n                                        component={Input}\n                                        label=\"Last Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"email\"\n                                        name=\"email\"\n                                        component={Input}\n                                        label=\"Email Address\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"username\"\n                                        name=\"username\"\n                                        component={Input}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"password\"\n                                        name=\"password\"\n                                        component={Input}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"confirm\"\n                                        name=\"confirm\"\n                                        component={Input}\n                                        label=\"Confirm Password\"\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                    </CardContent>\n                    <CardActions className={classes.actions}>\n                        <Button\n                            variant=\"contained\"\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.button}\n                            fullWidth\n                        >\n                            {loading && (\n                                <CircularProgress\n                                    size={25}\n                                    thickness={2}\n                                />\n                            )}\n                            Register\n                        </Button>\n                        <Typography variant=\"body2\">Or</Typography>\n                        <Link\n                            color=\"textSecondary\"\n                            component={RouterLink}\n                            to=\"/login\"\n                            variant=\"body1\"\n                        >\n                            Login\n                        </Link>\n                    </CardActions>\n                </form>\n            )}\n        />\n    );\n};\n\nRegisterForm.propTypes = {\n    redirectTo: PropTypes.string,\n};\n\nexport default RegisterForm;","import React, { ReactNode, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n    Card, \n    CardContent, \n    Theme, \n    Avatar,\n    Grid,\n    Link,\n} from '@material-ui/core';\nimport {\n    Notification,\n} from 'react-admin';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { lightTheme } from '../layout/themes';\n\nimport RegisterForm from './RegisterForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n        main: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '100vh',\n            // height: '1px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundImage:\n                'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        },\n        card: {\n            minWidth: 300,\n            // marginTop: '6em',\n        },\n        avatar: {\n            margin: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n        },\n        icon: {\n            backgroundColor: theme.palette.secondary.main,\n        },\n        hint: {\n            marginTop: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n            color: theme.palette.grey[500],\n        },\n    }),\n    { name: 'Register' }\n);\n\nconst Register = () => {\n    const classes = useStyles();\n    return (\n            <div className={classes.main}>\n                <Card className={classes.card}>\n                    <div className={classes.avatar}>\n                        <Avatar className={classes.icon}>\n                            <ExitToAppIcon />\n                        </Avatar>\n                    </div>\n                    <div className={classes.hint}>\n                                Register to Assistor.\n                            </div>\n                    <RegisterForm />\n                </Card>\n                <Notification />\n            </div>\n    );\n}\n\nconst RegisterWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Register {...props} />\n    </ThemeProvider>\n);\n\nexport default RegisterWithTheme;","import { ThemeName } from '../types';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeTheme } from './actions';\nimport { AppState } from '../types';\n\nconst useStyles = makeStyles({\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n});\n\nconst Configuration = () => {\n    const translate = useTranslate();\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const theme = useSelector((state: AppState) => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <Card>\n            <Title title={translate('pos.configuration')} />\n            <CardContent>\n                <div className={classes.label}>\n                    {translate('pos.theme.name')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'light' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('light'))}\n                >\n                    {translate('pos.theme.light')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'dark' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('dark'))}\n                >\n                    {translate('pos.theme.dark')}\n                </Button>\n            </CardContent>\n            <CardContent>\n                <div className={classes.label}>{translate('pos.language')}</div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'en' ? 'primary' : 'default'}\n                    onClick={() => setLocale('en')}\n                >\n                    en\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'fr' ? 'primary' : 'default'}\n                    onClick={() => setLocale('fr')}\n                >\n                    fr\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'ja' ? 'primary' : 'default'}\n                    onClick={() => setLocale('ja')}\n                >\n                    ja\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Configuration;","import * as React from \"react\";\nimport { RouteWithoutLayout } from 'react-admin';\nimport { Route } from 'react-router-dom';\nimport Register from './auth/RegisterPage';\nimport Configuration from './configuration/Configuration';\n\nexport const customRoutes = [\n    <RouteWithoutLayout exact path=\"/register\" component={Register} />,\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n];","import { TranslationMessages } from 'react-admin';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n\n};\n\nexport default customEnglishMessages;","import * as React from 'react';\nimport { Admin, Resource, ListGuesser, EditGuesser, ShowGuesser, defaultTheme } from 'react-admin';\nimport {\n    unstable_createMuiStrictModeTheme,\n    createTheme,\n} from '@material-ui/core/styles';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\nimport { dataProvider } from './dataProvider';\nimport { authProvider } from './authProvider';\nimport { Login, Layout } from './layout';\nimport contacts from './contacts';\nimport companies from './companies';\nimport products from './products';\nimport tasks from './tasks';\nimport productfamiliess from './productFamilies';\nimport deals from './deals';\nimport { Dashboard } from './dashboard/Dashboard';\nimport { customRoutes } from './customRoutes';\n// import Login from './Login'\nimport productFamilies from './productFamilies';\nimport englishMessages from './i18n/en';\n\n// FIXME MUI bug https://github.com/mui-org/material-ui/issues/13394\nconst theme =\n    process.env.NODE_ENV !== 'production'\n        ? unstable_createMuiStrictModeTheme(defaultTheme)\n        : createTheme(defaultTheme);\n\nconst i18nProvider = polyglotI18nProvider(locale => {\n    if (locale === 'fr') {\n        return import('./i18n/fr').then(messages => messages.default);\n    }\n    \n    if (locale === 'ja') {\n        return import('./i18n/ja').then(messages => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n}, 'en');\n\nconst App = () => (\n    <Admin\n        customRoutes={customRoutes}\n        dataProvider={dataProvider}\n        authProvider={authProvider}\n        loginPage={Login}\n        layout={Layout}\n        dashboard={Dashboard}\n        theme={theme}\n        i18nProvider={i18nProvider}\n        disableTelemetry\n    >\n        <Resource name=\"deals\" {...deals} />\n        <Resource name=\"contacts\" {...contacts} />\n        <Resource name=\"companies\" {...companies} />\n        <Resource name=\"products\" {...products} />\n        <Resource name=\"productProperties\" />\n        <Resource name=\"propertyTypes\" />\n        <Resource name=\"contactNotes\" />\n        <Resource name=\"companyNotes\" />\n        <Resource name=\"productNotes\" />\n        <Resource name=\"dealNotes\" />\n        <Resource name=\"productFamilies\" {...productFamilies} />\n        <Resource name=\"tasks\" {...tasks} />\n        <Resource name=\"sales\" list={ListGuesser} />\n        <Resource name=\"tags\" list={ListGuesser} />\n        <Resource name=\"countries\" list={ListGuesser} />\n    </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}