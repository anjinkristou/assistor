{"version":3,"sources":["auth.ts","dataProvider.ts","authProvider.ts","layout/Logo.tsx","layout/AppBar.tsx","layout/SubMenu.tsx","companies/sectors.ts","companies/CompanyAvatar.tsx","companies/CountryField.tsx","companies/CompanyCard.tsx","companies/CompanyGridList.tsx","companies/relations.ts","tags/TagChip.tsx","components/CollapsibleListFilter.tsx","companies/CompanyListFilter.tsx","companies/SelectAllButton.tsx","companies/CompanyList.tsx","companies/sizes.ts","companies/DistributorInput.tsx","companies/CompanyCreate.tsx","contacts/Avatar.tsx","misc/Status.tsx","tags/TagsList.tsx","companies/LogoField.tsx","tags/colors.ts","components/RoundButton.tsx","tags/TagsListEdit.tsx","components/CollapsibleAside.tsx","products/ProductsListEdit.tsx","companies/CompanyAside.tsx","deals/stages.ts","notes/StatusSelector.tsx","notes/NewNote.tsx","notes/Note.tsx","notes/NotesIterator.tsx","products/ProductAvatar.tsx","products/ProductCard.tsx","products/ProductGridList.tsx","companies/CompanyShow.tsx","companies/CompanyEdit.tsx","companies/index.ts","contacts/ContactAside.tsx","contacts/ContactShow.tsx","contacts/ContactListFilter.tsx","contacts/ContactList.tsx","contacts/ContactEdit.tsx","contacts/ContactCreate.tsx","contacts/index.tsx","tasks/TaskAside.tsx","tasks/TaskShow.tsx","tasks/status.ts","tasks/TaskStatus.tsx","tasks/TaskListFilter.tsx","tasks/MarkDoneButton.tsx","tasks/TaskList.tsx","tasks/TaskEdit.tsx","tasks/TaskCreate.tsx","tasks/index.ts","deals/DealCard.tsx","deals/DealColumn.tsx","deals/DealListContent.tsx","deals/types.ts","deals/DealCreate.tsx","deals/ContactList.tsx","deals/DealShow.tsx","deals/OnlyMineInput.tsx","deals/DealList.tsx","deals/index.ts","products/ProductListFilter.tsx","products/ProductList.tsx","products/CreatePropertyType.tsx","products/PropertyFormIterator.tsx","products/ProductCreate.tsx","products/ProductImageField.tsx","products/ProductAside.tsx","products/ProductShow.tsx","products/ProductEdit.tsx","products/index.ts","productFamilies/Avatar.tsx","productFamilies/ProductFamilyListFilter.tsx","productFamilies/categories.ts","productFamilies/ProductFamilyList.tsx","productFamilies/ProductFamilyCreate.tsx","productFamilies/ProductFamilyAside.tsx","productFamilies/ProductFamilyEdit.tsx","productFamilies/ProductFamilyShow.tsx","productFamilies/index.ts","layout/Menu.tsx","layout/themes.ts","layout/Layout.tsx","layout/Login.tsx","dashboard/HotContacts.tsx","dashboard/LatestNotes.tsx","dashboard/CompaniesMap.tsx","dashboard/Dashboard.tsx","auth/RegisterForm.tsx","auth/RegisterPage.tsx","configuration/actions.ts","configuration/Configuration.tsx","customRoutes.tsx","i18n/en.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["CREDENTIALS_LOCAL_STORAGE_ITEM","setCredentials","credentials","localStorage","setItem","JSON","stringify","getCredentials","raw","getItem","parse","getList","resource","params","a","token","access_token","config","headers","Authorization","axios","get","response","Promise","resolve","data","reject","message","status","getOne","getMany","getManyReference","create","post","update","put","updateMany","deleteOne","delete","deleteMany","dataProvider","baseURL","refreshToken","refresh_token","undefined","login","username","password","decodedToken","decodeJwt","permissions","logout","removeItem","register","first_name","last_name","email","getIdentity","id","fullName","avatar","checkError","authProvider","checkAuth","error","getPermissions","useStyles","makeStyles","theme","root","display","breakpoints","down","spacing","logoIcon","color","palette","secondary","light","logoText","primary","Logo","classes","className","Typography","variant","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","props","ref","useTranslate","MenuItemLink","to","primaryText","leftIcon","onClick","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","AppBar","elevation","userMenu","icon","minWidth","transition","paddingLeft","sidebarIsClosed","SubMenu","handleToggle","isOpen","name","children","dense","translate","useSelector","state","admin","ui","sidebarOpen","header","MenuItem","button","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","sectors","map","sector","width","height","backgroundColor","img","objectFit","small","large","CompanyAvatar","record","size","logo","src","process","alt","imgProps","clsx","image","sizeInPixel","medium","CountryField","source","ImageField","paper","flexDirection","justifyContent","padding","position","identity","alignItems","textAlign","marginTop","stats","singleStat","statIcon","marginRight","checkbox","top","right","identifier","lrft","CompanyCard","useState","setElevation","useListContext","onToggleItem","ids","loaded","selectedIds","Link","linkToRecord","underline","onMouseEnter","onMouseLeave","Paper","Checkbox","edge","checked","includes","tabIndex","disableRipple","e","stopPropagation","Box","ReferenceField","reference","link","relation","Chip","label","SelectField","choices","style","marginBottom","nb_contacts","nb_notes","gridList","flexWrap","gap","grey","LoadingGridList","nbChildren","fn","key","Array","from","length","_","LoadedGridList","CompanyGridList","relations","TagChip","border","cursor","order","sideBig","marginLeft","sideSmall","up","container","drawerContent","maxWidth","CollapsibleListFilter","setOpen","childrenWithProps","React","child","IconButton","Drawer","anchor","open","onClose","countryList","maxHeight","tagList","CompanyListFilter","useGetIdentity","useGetList","page","perPage","field","tags","tagIds","countries","countryIds","FilterLiveSearch","FilterList","FilterListItem","value","nicename","country_id","sales_id","SelectAllButton","onSelect","Button","toolbar","createButton","importOptions","parseConfig","dynamicTyping","CompanyListActions","TopToolbar","SortButton","fields","ExportButton","CreateButton","basePath","sizes","DistributorInput","AutocompleteInput","optionText","country_iso","allowEmpty","resettable","inline","CustomLayout","CardContent","paddingTop","ml","CustomDivider","mb","Divider","Avatar","charAt","getColorFromStatus","Status","borderRadius","bgcolor","ColoredChipField","ChipField","TagsList","ReferenceArrayField","SingleFieldList","linkType","LogoField","colors","margin","RoundButton","handleClick","selected","type","TagsListEdit","newTagName","setNewTagName","newTagColor","setNewTagColor","anchorEl","setAnchorEl","version","setVersion","disabled","setDisabled","allTags","useGetMany","enabled","useUpdate","useCreate","unselectedTagIds","filter","handleAddTag","handleOpenCreateDialog","tag","mt","onDelete","tagId","handleDeleteTag","event","currentTarget","Boolean","Dialog","onSubmit","preventDefault","onSuccess","v","DialogTitle","DialogContent","autoFocus","fullWidth","onChange","target","DialogActions","CollapsibleAside","EditButton","ShowButton","ProductsListEdit","refresh","useRefresh","use_products","products","handleClose","product","productId","handleDeleteProduct","model","Popover","anchorOrigin","vertical","horizontal","transformOrigin","toString","values","SimpleForm","ReferenceArrayInput","AutocompleteArrayInput","CompanyAside","AsideContent","href","website","rel","linkedIn","TextField","distributor_id","phone_number","DateField","options","year","month","day","FunctionField","render","stages","stageNames","opportunity","won","lost","delayed","stageChoices","StatusSelector","setStatus","select","buttonSwitcher","previewConatiner","previewRaw","previewMarkdown","paddingRight","borderColor","main","preview","NewNote","showStatus","setPreview","useRecordContext","useResourceContext","text","setText","getCurrentDate","date","setDate","loading","notify","useNotify","foreignKeyMapping","last_seen","multiline","remarkPlugins","remarkGfm","now","Date","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","contacts","deals","companies","metadata","textarea","paddingBottom","lineHeight","buttons","cancel","content","paragraph","fontFamily","typography","fontSize","body1","visibility","Note","note","isLast","isHover","setHover","isEditing","setEditing","noteText","setNoteText","useDelete","mutationMode","handleDelete","showTime","locales","dateStyle","timeStyle","FilledInput","NotesIterator","index","ProductAvatar","family","left","hidden","ProductCard","classNames","nb_properties","Skeleton","animation","ProductGridList","CompanyShowContent","useShowContext","setValue","Card","gridGap","Tabs","indicatorColor","textColor","newValue","Tab","nb_deals","nb_products","ReferenceManyField","sort","pagination","Pagination","rowsPerPageOptions","TabPanel","other","role","ContactsIterator","contact","ListItem","RouterLink","ListItemAvatar","ListItemText","ListItemSecondaryAction","formatDistance","CreateRelatedContactButton","pathname","company_id","startIcon","DealsIterator","deal","stage","amount","toLocaleString","notation","currency","currencyDisplay","minimumSignificantDigits","updated_at","list","actions","aside","filterDefaultValues","Create","initialValues","redirect","TextInput","validate","required","SelectInput","formClassName","FormDataConsumer","formData","ReferenceInput","helperText","sales","edit","show","ShowBase","BusinessIcon","ContactAside","TasksIterator","task","disableGutters","EmailField","gender","background","ContactShowContent","ContactListFilter","last_seen_gte","endOfYesterday","last_seen_lte","startOfWeek","startOfMonth","subMonths","ContactListContent","SimpleListLoading","hasLeftAvatarOrIcon","hasSecondaryText","ContactListActions","Spacer","ContactEditContent","useEditContext","save","FormWithRedirect","formProps","mr","BooleanInput","Toolbar","omit","EditBase","transform","ContactsIcon","TaskAside","TaskShowContent","statuses","TaskStatus","statusItem","find","item","statusColor","TaskListFilter","due_date_gte","due_date_lte","doneState","MarkDoneButton","BulkUpdateButton","TaskListContent","due_date","useActionStyles","TaskListActions","TaskBulkActionButtons","BulkDeleteButton","TaskEditContent","DateInput","bulkActionButtons","FormatListBulletedIcon","cardContent","cardText","DealCard","useRedirect","draggableId","String","provided","snapshot","draggableProps","dragHandleProps","innerRef","opacity","isDragging","p","gutterBottom","borderTopLeftRadius","borderTopRightRadius","droppable","DealColumn","dealIds","align","droppableId","droppableProvided","droppableProps","isDraggingOver","placeholder","initialDeals","reduce","obj","getDealsByColumn","columns","acc","push","forEach","b","DealListContent","currentSort","filterValues","setDeals","useContext","DataProviderContext","useMutation","payload","useEffect","newDeals","isEqual","onDragEnd","result","destination","column","sourceDeal","destinationDeal","splice","Number","columnDeals","all","previousData","sourceColumn","destinationColumn","sourceDeals","destinationDeals","pop","typeChoices","DealCreate","useDataProvider","then","oldDeal","rows","defaultValue","NumberInput","ul","listStyle","li","ContactList","dialog","DealShow","DealShowContent","format","start_at","minHeight","description","OnlyMineInput","alwaysOn","useListFilterContext","displayedFilters","setFilters","FormControlLabel","control","Switch","newFilterValues","defaultProps","dealFilters","SearchInput","DealActions","FilterButton","filters","path","match","MonetizationOnIcon","ProductListFilter","familyData","familyIds","family_id","ProductListActions","CreatePropertyType","useCreateSuggestionContext","onCancel","onCreate","setName","unit","setUnit","synonyms","setSynonyms","PropertyFormIterator","SimpleFormIterator","propertyContainer","ProductImageField","ProductAside","ProductShowContent","nb_used_by","addLabel","Datagrid","useTheme","TabbedForm","FormTab","ArrayInput","FiberManualRecordIcon","ProductFamilyListFilter","categories","category","ProductFamilyListContent","ProductFamilyListActions","ProductFamilyAside","ProductFamilyEditContent","ProductFamilyShowContent","CategoryIcon","transitions","easing","sharp","duration","leavingScreen","closed","Menu","menuCrm","menuProduct","menuCustomers","setState","menu","classnames","DashboardMenuItem","_scrollToTop","tasks","productFamilies","darkTheme","sidebar","overrides","MuiAppBar","colorSecondary","MuiButtonBase","lightTheme","dark","contrastText","default","shape","RaMenuItemLink","borderLeft","active","MuiPaper","elevation1","boxShadow","backgroundClip","MuiButton","contained","MuiLinearProgress","colorPrimary","barColorPrimary","MuiFilledInput","MuiSnackbarContent","Layout","appBar","backgroundImage","backgroundRepeat","backgroundSize","card","hint","form","input","renderInput","meta","touched","inputProps","Form","withTypes","Login","setLoading","useLogin","location","useLocation","handleSubmit","auth","nextPathname","noValidate","CardActions","CircularProgress","thickness","Notification","LoginWithTheme","ThemeProvider","createTheme","HotContacts","isInteger","contactData","contactIds","contactTotal","total","contactsLoaded","SimpleList","secondaryText","addSuffix","leftAvatar","noteTextText","LatestNotes","contactNotesData","contactNotesIds","contactNotesLoaded","dealNotesData","dealNotesIds","dealNotesLoaded","companyNotesData","companyNotesIds","companyNotesLoaded","allNotes","concat","valueOf","NoteSource","Deal","Contact","Company","Map","memo","setTooltipContent","colorScale","scaleQuantile","domain","max","nb_companies","range","projection","projectionConfig","rotate","scale","center","zoom","geography","geographies","geo","ISO_A3","properties","cur","iso3","fill","stroke","NAME","POP_EST","rsmKey","CompaniesMap","setContent","Dashboard","Grid","xs","sm","Input","RegisterForm","redirectTo","useAuthProvider","useSafeSetState","submit","confirm","Container","autoComplete","Register","RegisterWithTheme","changeTheme","Configuration","locale","useLocale","setLocale","useSetLocale","dispatch","useDispatch","Title","customRoutes","RouteWithoutLayout","exact","customEnglishMessages","englishMessages","defaultTheme","i18nProvider","polyglotI18nProvider","messages","App","Admin","loginPage","layout","dashboard","Resource","ListGuesser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.04dea5f0.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios';\n\nconst baseURL = \"/auth\";\n\nexport type Credentials = {\n  access_token: string;\n  refresh_token: string;\n  permissions: string;\n};\n\nconst CREDENTIALS_LOCAL_STORAGE_ITEM = \"credentials\";\n\nexport function isAuthenticated(): boolean {\n  return Boolean(getCredentials());\n}\n\nexport function setCredentials(credentials: Credentials) {\n  localStorage.setItem(\n    CREDENTIALS_LOCAL_STORAGE_ITEM,\n    JSON.stringify(credentials)\n  );\n}\n\nexport function getCredentials(): Credentials | null {\n  const raw = localStorage.getItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n  if (raw === null) {\n    return null;\n  }\n  return JSON.parse(raw);\n}\n\nexport function removeCredentials(): void {\n  localStorage.removeItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n}\n","import axios, { AxiosError } from 'axios';\nimport { \n    GetListResult,\n    GetOneResult,\n    GetManyResult,\n    GetManyReferenceResult,\n    CreateResult,\n    UpdateResult,\n    UpdateManyResult,\n    DeleteResult,\n    DeleteManyResult,\n}  from 'react-admin'\n\nimport {\n    getCredentials,\n} from \"./auth\"\n\n\nconst getList = async (resource: string, params: any): Promise<GetListResult<any>> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetListResult<any>>(`/${resource}/list`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getOne = async (resource: string, params: any): Promise<GetOneResult<any>> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetOneResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getMany = async (resource: string, params: any): Promise<GetManyResult<any>> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyResult<any>>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getManyReference = async (resource: string, params: any): Promise<GetManyReferenceResult<any>>  => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyReferenceResult<any>>(`/${resource}/refs`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst create = async (resource: string, params: any): Promise<CreateResult<any>> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.post<CreateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst update = async (resource: string, params: any): Promise<UpdateResult<any>> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst updateMany = async (resource: string, params: any): Promise<UpdateManyResult> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateManyResult>(`/${resource}/items`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteOne = async (resource: string, params: any): Promise<DeleteResult<any>> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteMany = async (resource: string, params: any): Promise<DeleteManyResult> => {\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteManyResult>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nexport const dataProvider = {\n    getList:    getList,\n    getOne:     getOne,\n    getMany:    getMany,\n    getManyReference: getManyReference,\n    create:     create,\n    update:     update,\n    updateMany: updateMany,\n    delete:     deleteOne,\n    deleteMany: deleteMany,\n}\n","import { AuthProvider } from 'react-admin';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\nimport axios, { AxiosError } from 'axios';\nimport {\n    isAuthenticated,\n    setCredentials,\n    getCredentials,\n    removeCredentials,\n} from \"./auth\"\n\ninterface RefreshToken {\n    access_token: string;\n  }\n\nconst baseURL = \"/auth\";\n\ninterface Permission {\n    permissions: string;\n}\n\ninterface LoginToken {\n    access_token: string;\n    refresh_token: string;\n}\n\ninterface UserIdentity {\n    id: number;\n    fullName: string;\n    avatar: string;\n}\n\nconst refreshToken = async () => {\n    const credentials = getCredentials();\n    if(!credentials) return;\n  \n    const token = credentials?.refresh_token;\n  \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    };\n    let response = await axios.post<RefreshToken>(`${baseURL}/refresh`, undefined, config)\n    const { access_token } = response.data;\n    setCredentials({\n        ...credentials,\n        access_token: access_token,\n    });\n};\n\n\nconst login = async ({ username, password }: {username: string; password:string;}) => {\n    try{\n        const response = await axios.post<LoginToken>(`${baseURL}/login`, { username, password })\n        const { access_token, refresh_token } = response.data;\n        const decodedToken = decodeJwt<Permission>(access_token);\n        setCredentials({\n            access_token,\n            refresh_token,\n            permissions: decodedToken.permissions,\n        });\n        return Promise.resolve();\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.message, status: response.status});\n    }\n};\n\nconst logout = async () => {\n    await axios.get(`${baseURL}/logout`)\n    removeCredentials();\n    return Promise.resolve('/login');\n}\n\nconst register = async ({ \n    first_name,\n    last_name,\n    email,\n    username, \n    password\n}: { \n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n}) => {\n    try{\n    const response = await axios.post<ResponseType>(`${baseURL}/register`, { \n            first_name,\n            last_name,\n            email,\n            username, \n            password\n        })\n\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.message, status: response.status});\n    }\n}\n\nconst getIdentity = async () => { \n    try{\n        refreshToken();\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` }\n        };\n        let response = await axios.get<UserIdentity>(`${baseURL}/user`, config)\n        const { id, fullName, avatar } = response.data;\n        \n        return Promise.resolve({ id, fullName, avatar });\n    } catch (error: any) {\n        // const response = error.response;\n        // removeCredentials();\n        // return Promise.reject({message: response.data, status: response.status});\n\n        return Promise.reject(error);\n    }\n };\n\n const checkError = async ({ status }: any) => {\n    if (status === 401 || status === 403 || status === 422) {\n        try{\n            refreshToken();\n        } catch (error: any) {\n            return Promise.reject();\n        }\n    }\n    return Promise.resolve();\n};\n\nconst checkAuth = () => {\n    try{\n        refreshToken();\n        return Promise.resolve();\n    } catch (error: any) {\n        return Promise.reject();\n    }\n}\n\nconst getPermissions = () => {\n    try{\n        refreshToken();\n        return Promise.resolve();\n    } catch (error: any) {\n        return Promise.reject();\n    }\n}\n\nexport const authProvider: AuthProvider =  {\n    login: login,\n    checkError: checkError,\n    checkAuth: checkAuth,\n    logout: logout,\n    getIdentity: getIdentity,\n    getPermissions: getPermissions,\n    register: register,\n};","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        alignItems:\"center\",\n        gap: theme.spacing(1)\n    },\n    logoIcon: {\n        color: theme.palette.secondary.light,\n    },\n    logoText: {\n        color: theme.palette.primary.light,\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AccountBalanceWalletIcon className={classes.logoIcon} />\n            <Typography variant=\"h6\" className={classes.logoText} >\n                Assistor\n            </Typography>\n        </div>\n    );\n};\n\nexport default Logo;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\n\nconst useStyles = makeStyles({\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n});\n\nconst ConfigurationMenu = forwardRef<any, any>((props, ref) => {\n    const translate = useTranslate();\n    return (\n        <MenuItemLink\n            ref={ref}\n            to=\"/configuration\"\n            primaryText=\"Configuration\"\n            leftIcon={<SettingsIcon />}\n            onClick={props.onClick}\n            sidebarIsOpen\n        />\n    );\n});\n\nconst CustomUserMenu = (props: any) => (\n    <UserMenu {...props}>\n        <ConfigurationMenu />\n    </UserMenu>\n);\n\nconst CustomAppBar = (props: any) => {\n    const classes = useStyles();\n    return (\n        <AppBar {...props} elevation={1} userMenu={<CustomUserMenu />}>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                id=\"react-admin-title\"\n            />\n            <Logo />\n            <span className={classes.spacer} />\n        </AppBar>\n    );\n};\n\nexport default CustomAppBar;\n","import * as React from 'react';\nimport { Fragment, ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    List,\n    MenuItem,\n    ListItemIcon,\n    Typography,\n    Collapse,\n    Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useTranslate, ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(4),\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\ninterface Props {\n    dense: boolean;\n    handleToggle: () => void;\n    icon: ReactElement;\n    isOpen: boolean;\n    name: string;\n    children: ReactNode;\n}\n\nconst SubMenu = (props: Props) => {\n    const { handleToggle, isOpen, name, icon, children, dense } = props;\n    const translate = useTranslate();\n    const classes = useStyles();\n    const sidebarIsOpen = useSelector<ReduxState, boolean>(\n        state => state.admin.ui.sidebarOpen\n    );\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;\n","export const sectors = [\n    'Factory Automation',\n    'Logistics Automation',\n    'Warehouse Automation',\n    'Consulting & Development',\n].map(sector => ({ id: sector, name: sector }));\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { Company } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const CompanyAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Company;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar\n            alt={record.name}\n            className={classes.avatar}\n        >\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <Avatar\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n    );\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ImageField } from 'react-admin';\n\nexport interface StyleProps {\n    width: number;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(theme => ({\n    image: {\n        width: props => props.width\n    },\n}));\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const CountryField = ({\n    record,\n    source=\"url\",\n    title=\"nicename\",\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    title?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles({width: sizeInPixel[size]});\n    if (!record) return null;\n\n    return (\n        <ImageField \n            record={record as any}\n            source={source} \n            title={title}\n            classes={classes}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { linkToRecord, SelectField, ReferenceField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { sectors } from './sectors';\nimport { CompanyAvatar } from './CompanyAvatar';\nimport { Company } from '../types';\nimport { CountryField } from './CountryField';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n    identifier: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        lrft: 0,\n    }\n}));\n\nexport const CompanyCard = ({ record }: { record: Company }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Company>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/companies', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classes.checkbox}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Typography \n                    variant=\"body2\" \n                    color=\"textSecondary\"\n                    className={classes.identifier}\n                >\n                    {`#${record.id}`}\n                </Typography>\n                <div className={classes.identity}>\n                    <CompanyAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.name}\n                        </Typography>\n                        <ReferenceField\n                            record={record}\n                            source=\"country_id\"\n                            reference=\"countries\"\n                            link={false}\n                        >\n                            <CountryField size='small' />\n                        </ReferenceField>\n                        </Box>\n                        {record.relation && (\n                            <Chip \n                                label={record.relation} \n                                variant=\"outlined\" \n                                size=\"small\"\n                            />\n                        )}\n                        <SelectField\n                            color=\"textSecondary\"\n                            source=\"sector\"\n                            choices={sectors}\n                            record={record}\n                        />\n                    </div>\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_contacts}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_contacts > 1\n                                    ? 'contacts'\n                                    : 'contact'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <NoteIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\n\nimport { CompanyCard } from './CompanyCard';\nimport { Company } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} />\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Company>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <CompanyCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const CompanyGridList = () => {\n    const { loaded } = useListContext();\n    return loaded ? <LoadedGridList /> : <LoadingGridList />;\n};\n","export const relations = [\n    'Distributor',\n    'End-customer',\n    'Prospect',\n    'System Integrator'\n].map(relations => ({ id: relations, name: relations }));","import { Box, Chip } from '@material-ui/core';\nimport { Tag } from '../types'\n\nexport const TagChip = ({ record }: { record: Tag; }) => (\n    <>\n        { record && (\n                <Chip\n                label={record.name}\n                size=\"small\"\n                style={{\n                    backgroundColor: record.color,\n                    border: 0,\n                    cursor: 'pointer',\n                }}\n            />\n        )}\n    </>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        order: -1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleListFilter = ({ children }: {children: any;}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, {})\n        : child\n    );\n    return (\n        <div className={classes.root}>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"left\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip, Drawer, IconButton, ListItem } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { sectors } from './sectors';\nimport { relations } from './relations';\nimport { TagChip } from '../tags/TagChip';\nimport { Country, Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        minWidth: '13em',\n    },\n    countryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    tagList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const CompanyListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: tags, ids: tagIds } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    const { data: countries, ids: countryIds } = useGetList<Country>(\n        'countries',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Relation\" icon={<BusinessIcon />}>\n                {relations.map(relation => (\n                    <FilterListItem\n                        key={relation.id}\n                        label={relation.name}\n                        value={{ relation: relation.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                <div className={classes.tagList}>\n                    {tagIds &&\n                        tags &&\n                        tagIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<TagChip record={tags[id]}/>}\n                                value={{ tags: [id] }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Sector\" icon={<LocalShippingIcon />}>\n                {sectors.map(sector => (\n                    <FilterListItem\n                        key={sector.id}\n                        label={sector.name}\n                        value={{ sector: sector.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Countries\" icon={<PublicIcon />}>\n                <div className={classes.countryList}>\n                    {countryIds &&\n                        countries &&\n                        countryIds.map(id => (\n                            <FilterListItem\n                            key={id}\n                            label={countries[id].nicename}\n                            value={{ country_id: id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { Button, useListContext } from 'react-admin';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { Company } from '../types';\n\nconst doneState = { status: 'Done' };\n\nconst SelectAllButton = () => {\n    const { ids, data, onSelect } = useListContext<Company>();\n    return (\n        <Button\n            onClick={(e:any) =>{\n                e.stopPropagation();\n                onSelect(ids);\n            }}\n            label=\"Select All\"\n        >\n            <DoneAllIcon />\n        </Button>\n    );\n};\n\nexport default SelectAllButton;","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    SortButton,\n    FilterLiveSearch,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CompanyGridList } from './CompanyGridList';\nimport { CompanyListFilter } from './CompanyListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\nimport SelectAllButton from './SelectAllButton';\nimport { Box } from '@material-ui/core';\n\nexport const CompanyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<CompanyListActions />}\n            aside={<CompanyListFilter />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100, 1000]} />}\n            perPage={25}\n            sort={{ field: 'name', order: 'ASC' }}\n            component=\"div\"\n        >\n            <CompanyGridList />\n        </List>\n    ) : null;\n};\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        \n    },\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst importOptions = {\n    parseConfig: {\n        // For all options see: https://www.papaparse.com/docs#config\n        dynamicTyping: true\n    }\n}\n\n\nconst CompanyListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar className={classes.toolbar} >\n            <SortButton fields={['id', 'name']} />\n            <SelectAllButton />\n            <ExportButton />\n            <ImportButton {...props} {...importOptions}/>\n            <CreateButton\n                basePath=\"/companies\"\n                variant=\"contained\"\n                label=\"New Company\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","export const sizes = [\n    { id: 1, name: '1 employee' },\n    { id: 10, name: '2-9 employees' },\n    { id: 50, name: '10-49 employees' },\n    { id: 250, name: '50-249 employees' },\n    { id: 500, name: '250 or more employees' },\n];\n","import { AutocompleteInput, AutocompleteInputProps } from 'react-admin';\n\nconst DistributorInput = (props: AutocompleteInputProps) => (\n    <AutocompleteInput \n        {...props}\n        optionText={record => record ? record.country_iso ? `${record.name} (${record.country_iso})` : `${record.name}` : ''} \n        allowEmpty\n        resettable\n    />\n);\n\nexport default DistributorInput;","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    FormDataConsumer,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n} from 'react-admin';\nimport { Box, CardContent, Divider, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nexport const CompanyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n\n    if (!identity) return null;\n\n    const defaultValue = () => ({ sales_id: identity && identity?.id });\n\n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                initialValues={defaultValue}\n                redirect=\"show\"\n            >\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <BusinessIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { Contact } from '../types';\n\nexport const Avatar = ({ record }: { record: Contact }) => (\n    <MuiAvatar src={record.avatar}>\n        {record.first_name.charAt(0)}\n        {record.last_name.charAt(0)}\n    </MuiAvatar>\n);\n","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst getColorFromStatus = (status: string) =>\n    status === 'cold'\n        ? '#7dbde8'\n        : status === 'warm'\n        ? '#e8cb7d'\n        : status === 'hot'\n        ? '#e88b7d'\n        : status === 'in-contract'\n        ? '#a4e87d'\n        : '#000';\n\nexport const Status = ({ status }: { status: string }) => (\n    <Box\n        width={10}\n        height={10}\n        display=\"inline-block\"\n        borderRadius={5}\n        bgcolor={getColorFromStatus(status)}\n        component=\"span\"\n    />\n);\n","import * as React from 'react';\nimport { ReferenceArrayField, SingleFieldList, ChipField } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Contact } from '../types';\n\nconst ColoredChipField = ({ record, ...props }: any) =>\n    record ? (\n        <ChipField\n            record={record}\n            {...props}\n            style={{ backgroundColor: record.color, border: 0 }}\n            component=\"span\"\n        />\n    ) : null;\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'inline-block',\n    },\n});\n\nexport const TagsList = ({ record }: { record: Contact }) => {\n    const classes = useStyles();\n    if (!record) return null;\n    return (\n        <ReferenceArrayField\n            record={record}\n            basePath=\"/contacts\"\n            resource=\"contacts\"\n            source=\"tags\"\n            reference=\"tags\"\n            className={classes.root}\n        >\n            <SingleFieldList linkType={false} component=\"span\">\n                <ColoredChipField\n                    source=\"name\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                />\n            </SingleFieldList>\n        </ReferenceArrayField>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const LogoField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar>\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            title={record.name}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","export const colors = [\n    '#eddcd2',\n    '#fff1e6',\n    '#fde2e4',\n    '#fad2e1',\n    '#c5dedd',\n    '#dbe7e4',\n    '#f0efeb',\n    '#d6e2e9',\n    '#bcd4e6',\n    '#99c1de',\n];\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        display: 'inline-block',\n        margin: 8,\n    },\n});\n\nexport const RoundButton = ({ color, handleClick, selected }: any) => {\n    const classes = useStyles();\n    return (\n        <button\n            type=\"button\"\n            className={classes.root}\n            style={{\n                backgroundColor: color,\n                border: selected ? '2px solid grey' : 'none',\n            }}\n            onClick={handleClick}\n        />\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useGetMany,\n    useCreate,\n    useUpdate,\n    useGetList,\n    Identifier,\n} from 'react-admin';\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { colors } from './colors';\nimport { Contact, Company, Product } from '../types';\nimport { Tag } from '../types';\nimport { RoundButton } from '../components/RoundButton';\n\nexport const TagsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Contact | Company | Product;\n    reference: 'companies' | 'contacts' | 'products';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [newTagName, setNewTagName] = useState('');\n    const [newTagColor, setNewTagColor] = useState(colors[0]);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [disabled, setDisabled] = useState(false);\n\n    const { data: allTags, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' },\n        {},\n        { version } as any // FIXME UseDataProviderOptions don't allow [key: string]: any\n    );\n    const { data: tags, loaded } = useGetMany('tags', record.tags, {\n        enabled: record.tags && record.tags.length > 0,\n    });\n    const [update] = useUpdate();\n    const [create] = useCreate();\n\n    const unselectedTagIds = ids && ids.filter(id => !record.tags.includes(id));\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDeleteTag = (id: Identifier) => {\n        const tags: Identifier[] = record.tags.filter(\n            (tagId: Identifier) => tagId !== id\n        );\n        update(reference, record.id, { tags }, record);\n    };\n\n    const handleAddTag = (id: Identifier) => {\n        const tags: Identifier[] = [...record.tags, id];\n        update(reference, record.id, { tags }, record);\n        setAnchorEl(null);\n    };\n\n    const handleOpenCreateDialog = () => {\n        setOpen(true);\n        setAnchorEl(null);\n        setDisabled(false);\n    };\n\n    const handleNewTagNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setNewTagName(event.target.value);\n    };\n\n    const handleCreateTag = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setDisabled(true);\n        create(\n            'tags',\n            { name: newTagName, color: newTagColor },\n            {\n                onSuccess: ({ data }) => {\n                    update(\n                        reference,\n                        record.id,\n                        { tags: [...record.tags, data.id] },\n                        record,\n                        {\n                            onSuccess: () => {\n                                setNewTagName('');\n                                setNewTagColor(colors[0]);\n                                setOpen(false);\n\n                                setVersion(v => v + 1);\n                            },\n                        }\n                    );\n                },\n            }\n        );\n    };\n\n    // if (!loaded || !tags) return null;\n    return (\n        <>\n            {tags.map(tag => (\n                <Box mt={1} mb={1} key={tag.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteTag(tag.id)}\n                        label={tag.name}\n                        style={{ backgroundColor: tag.color, border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add tag\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Menu\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                {unselectedTagIds?.map(id => (\n                    <MenuItem key={id} onClick={() => handleAddTag(id)}>\n                        <Chip\n                            size=\"small\"\n                            variant=\"outlined\"\n                            label={allTags && allTags[id].name}\n                            style={{\n                                backgroundColor: allTags && allTags[id].color,\n                                border: 0,\n                            }}\n                            onClick={() => handleAddTag(id)}\n                        />\n                    </MenuItem>\n                ))}\n                <MenuItem onClick={handleOpenCreateDialog}>\n                    <Chip\n                        icon={<EditIcon />}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={handleOpenCreateDialog}\n                        color=\"primary\"\n                        label=\"Create new tag\"\n                    />\n                </MenuItem>\n            </Menu>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <form onSubmit={handleCreateTag}>\n                    <DialogTitle id=\"form-dialog-title\">\n                        Create a new tag\n                    </DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            label=\"Tag name\"\n                            fullWidth\n                            value={newTagName}\n                            onChange={handleNewTagNameChange}\n                        />\n                        <Box display=\"flex\" flexWrap=\"wrap\" width={230} mt={2}>\n                            {colors.map(color => (\n                                <RoundButton\n                                    key={color}\n                                    color={color}\n                                    selected={color === newTagColor}\n                                    handleClick={() => {\n                                        setNewTagColor(color);\n                                    }}\n                                />\n                            ))}\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setOpen(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={disabled}\n                        >\n                            Add tag\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    EditButton,\n    ShowButton,\n} from 'react-admin';\nimport { Box, Drawer, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleAside = ({\n    basePath,\n    record,\n    link = 'edit',\n    children,\n}: {\n    basePath: string,\n    record?: any;\n    children: any,\n    link?: string;\n}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    if (!record) return null;\n\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, { record })\n        : child\n    );\n\n    return (\n        <div className={classes.root}>\n            <Box textAlign=\"center\" mb={2}>\n                {link === 'edit' ? (\n                    <EditButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Edit\"\n                    />\n                ) : (\n                    <ShowButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Show\"\n                    />\n                )}\n            </Box>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"right\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    )\n};\n    \n","import * as React from 'react';\nimport { cloneElement, useState } from 'react';\nimport { \n    AutocompleteArrayInput,\n    Edit,\n    EditContextProvider,\n    Identifier, \n    ReferenceArrayField, \n    ReferenceArrayInput, \n    SimpleForm, \n    SingleFieldList, \n    useEditController, \n    useGetList, \n    useGetMany, \n    useUpdate, \n    useRefresh\n} from 'react-admin';\n\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Popover,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { Company, Product } from '../types';\nimport { string } from 'prop-types';\n\nexport const ProductsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Company;\n    reference: 'companies';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n\n\n\n    const { data: products, loaded } = useGetMany('products', record.use_products, {\n        enabled: record.use_products && record.use_products.length > 0,\n    });\n\n    const handleDeleteProduct = (id: Identifier) => {\n        const products: Identifier[] = record.use_products.filter(\n            (productId: Identifier) => productId !== id\n        );\n        update(reference, record.id, { use_products: products }, record);\n    };\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleSucess = (values: any) =>{\n        refresh();\n        handleClose();\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    if (!record) return null;\n\n     return (\n        <>\n            {loaded && products.map(product => (\n                <Box mt={1} key={product.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteProduct(product.id)}\n                        label={product.model}\n                        style={{ backgroundColor: \"#d4d4d4\", border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add product\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Popover\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n            >\n                <Edit\n                    basePath=\"/companies\"\n                    resource={reference}\n                    id={record.id.toString()}\n                    onSuccess={handleSucess}\n                >\n                    <SimpleForm>\n                        <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                            <AutocompleteArrayInput optionText=\"model\" />\n                        </ReferenceArrayInput>\n                    </SimpleForm>\n                </Edit>\n            </Popover>\n        </>\n    );\n}","import * as React from 'react';\nimport {\n    TextField,\n    DateField,\n    FunctionField,\n    ReferenceField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    ShowButton,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider, \n    Link,\n} from '@material-ui/core';\nimport { Company, Sale } from '../types';\nimport { TagsListEdit } from '../tags/TagsListEdit';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { ProductsListEdit } from '../products/ProductsListEdit';\nimport { any } from 'prop-types';\n\nexport const CompanyAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Company;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/companies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n    \n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Company;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Company info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">{record.website}</Link>\n                <br />\n                LinkedIn: <Link href={record.linkedIn} target=\"_blank\" rel=\"noreferrer\">LinkedIn</Link>\n            </Box>\n            <Box mt={1}>\n                Relation: <TextField source=\"relation\" record={record} />\n            </Box>\n            {record.distributor_id && (\n                <Box mt={1}>\n                    Distributor: <ReferenceField\n                            record={record}\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                        >\n                            <TextField source=\"name\" record={record} />\n                        </ReferenceField>\n                </Box>\n            )}\n\n            {record.phone_number && (\n                <Box mt={1}>\n                    <TextField source=\"phone_number\" record={record} />{' '}\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">Main</Typography>\n                </Box>\n            )}\n\n            <Box mt={1} mb={3}>\n                <TextField source=\"address\" />\n                <br />\n                <TextField source=\"city\" /> <TextField source=\"zipcode\" />{' '}\n                <TextField source=\"stateAbbr\" />\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={3}>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"span\"\n                >\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"created_at\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"companies\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record\n                                ? `${record.first_name} ${record.last_name}`\n                                : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"companies\" />\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Use Products</Typography>\n                <Divider />\n\n                <ProductsListEdit record={record} reference=\"companies\" />\n            </Box>\n        </>\n    ) : null;","export const stages = [\n    'opportunity',\n    'proposal-sent',\n    'in-negociation',\n    'won',\n    'lost',\n    'delayed',\n];\n\nexport const stageNames = {\n    opportunity: 'Opportunity',\n    'proposal-sent': 'Proposal Sent',\n    'in-negociation': 'In Negociation',\n    won: 'Won',\n    lost: 'Lost',\n    delayed: 'Delayed',\n};\n\nexport const stageChoices = stages.map(type => ({\n    id: type,\n    /* @ts-ignore */\n    name: stageNames[type],\n}));\n","import * as React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 150,\n    },\n});\n\nexport const StatusSelector = ({ status, setStatus, className = '' }: any) => {\n    const classes = useStyles();\n    return (\n        <TextField\n            select\n            value={status}\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                setStatus(event.target.value);\n            }}\n            variant=\"filled\"\n            label={false}\n            margin=\"none\"\n            size=\"small\"\n            className={clsx(className, classes.root)}\n        >\n            <MenuItem value=\"cold\">\n                Cold <Status status=\"cold\" />\n            </MenuItem>\n            <MenuItem value=\"warm\">\n                Warm <Status status=\"warm\" />\n            </MenuItem>\n            <MenuItem value=\"hot\">\n                Hot <Status status=\"hot\" />\n            </MenuItem>\n            <MenuItem value=\"in-contract\">\n                In Contract <Status status=\"in-contract\" />\n            </MenuItem>\n        </TextField>\n    );\n};\n","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useRecordContext,\n    useCreate,\n    useUpdate,\n    useRefresh,\n    useNotify,\n    useGetIdentity,\n    Identifier,\n    useResourceContext,\n} from 'react-admin';\nimport { TextField as TextInput, Button, Paper } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nimport { StatusSelector } from './StatusSelector';\n\ntype Props = {\n    preview: Boolean;\n}\n\nconst useStyles = makeStyles<Theme, Props>(theme => ({\n    root: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: theme.spacing(1),\n    },\n    small: {\n        marginRight: '1em',\n        '& .MuiFilledInput-input': {\n            paddingTop: 10,\n        },\n    },\n    buttonSwitcher: {\n        marginBottom: theme.spacing(1),\n    },\n    previewConatiner: {\n        display: 'flex',\n    },\n    previewRaw: {\n        flex: 1,\n    },\n    previewMarkdown: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderColor: theme.palette.primary.main,\n        display: ({preview}) => (preview ? 'block' : 'none'),\n    },\n}));\n\nexport const NewNote = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const [preview, setPreview] = useState(false);\n    const classes = useStyles({preview});\n    const record = useRecordContext();\n    const resource = useResourceContext();\n    const [text, setText] = useState('');\n    const [status, setStatus] = useState(record && record.status);\n    const [date, setDate] = useState(getCurrentDate());\n    const [create, { loading }] = useCreate();\n    const [update] = useUpdate();\n    // FIXME: use refetch instead when ReferenceManyField exposes it in the ListContext\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const { identity } = useGetIdentity();\n    if (!record || !identity) return null;\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const data: any = {\n            [foreignKeyMapping[reference]]: record.id,\n            sales_id: identity.id,\n            date,\n            text,\n        };\n        if (showStatus) {\n            data.status = status;\n        }\n        update(\n            reference,\n            ((record && record.id) as unknown) as Identifier,\n            {\n                last_seen: date,\n                status,\n            },\n            record\n        );\n        create(resource, data, {\n            onSuccess: () => {\n                setText('');\n                notify('Note added successfully', 'info');\n                refresh();\n            },\n        });\n        return false;\n    };\n    return (\n        <div className={classes.root}>\n            <form onSubmit={handleSubmit}>\n                <div className={classes.buttonSwitcher}>\n                    <Button \n                        variant={preview ? \"contained\": \"outlined\"} \n                        color=\"primary\"\n                        onClick={()=> setPreview(!preview)}\n                    >Markdown</Button>\n                </div>\n                <div className={classes.previewConatiner}>\n                    <div className={classes.previewRaw}>\n                        <TextInput\n                            label=\"Add a note\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            fullWidth\n                            multiline\n                            value={text}\n                            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                                setText(event.target.value)\n                            }\n                        />\n                    </div>\n                    <Paper className={classes.previewMarkdown}>\n                        <ReactMarkdown children={text} remarkPlugins={[remarkGfm]} />\n                    </Paper>\n                </div>\n                <div className={classes.toolbar}>\n                    <span>\n                        {text ? (\n                            <>\n                                {showStatus && (\n                                    <StatusSelector\n                                        status={status}\n                                        setStatus={setStatus}\n                                        className={classes.small}\n                                    />\n                                )}\n                                <TextInput\n                                    type=\"datetime-local\"\n                                    variant=\"filled\"\n                                    size=\"small\"\n                                    value={date}\n                                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                        setDate(event.target.value);\n                                    }}\n                                    className={classes.small}\n                                />\n                            </>\n                        ) : null}\n                    </span>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!text || loading}\n                    >\n                        Add this note\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst getCurrentDate = () => {\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n    return now.toISOString().slice(0, -8);\n};\n\nconst foreignKeyMapping = {\n    contacts: 'contact_id',\n    deals: 'deal_id',\n    companies: 'company_id',\n    products: 'product_id',\n};\n","import * as React from 'react';\nimport { useState, FormEvent, ChangeEvent } from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    DateField,\n    useResourceContext,\n    useDelete,\n    useUpdate,\n    useNotify,\n    useRecordContext,\n} from 'react-admin';\nimport {\n    Typography,\n    Tooltip,\n    IconButton,\n    FilledInput,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n    },\n    metadata: {\n        marginBottom: theme.spacing(1),\n        color: theme.palette.text.secondary,\n    },\n    textarea: {\n        paddingTop: 16,\n        paddingLeft: 14,\n        paddingRight: 60,\n        paddingBottom: 14,\n        lineHeight: 1.3,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: theme.spacing(1),\n    },\n    cancel: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        backgroundColor: theme.palette.grey[200],\n        padding: '0 1em',\n        borderRadius: 10,\n        display: 'flex',\n        alignItems: 'stretch',\n        marginBottom: theme.spacing(1),\n    },\n    text: {\n        flex: 1,\n    },\n    paragraph: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: 1,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        marginLeft: theme.spacing(2),\n        visibility: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n    },\n}));\n\nexport const Note = ({\n    showStatus,\n    note,\n    isLast,\n    reference,\n}: {\n    showStatus?: boolean;\n    note: any;\n    isLast: boolean;\n    reference: string;\n}) => {\n    const [isHover, setHover] = useState(false);\n    const [isEditing, setEditing] = useState(false);\n    const [noteText, setNoteText] = useState(note.text);\n    const resource = useResourceContext();\n    const record = useRecordContext();\n    const notify = useNotify();\n    const classes = useStyles();\n    const [update, { loading }] = useUpdate();\n\n    const [handleDelete] = useDelete(resource, note.id, note, {\n        mutationMode: 'undoable',\n        onSuccess: () => {\n            notify('Note deleted', 'info', undefined, true);\n            update(\n                reference,\n                record.id,\n                { nb_notes: record.nb_notes - 1 },\n                record\n            );\n        },\n    });\n\n    const handleEnterEditMode = () => {\n        setEditing(true);\n    };\n\n    const handleCancelEdit = () => {\n        setEditing(false);\n        setNoteText(note.text);\n        setHover(false);\n    };\n\n    const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setNoteText(event.target.value);\n    };\n\n    const handleNoteUpdate = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        update(resource, note.id, { text: noteText }, note, {\n            onSuccess: () => {\n                setEditing(false);\n                setNoteText(note.text);\n                setHover(false);\n            },\n        });\n    };\n\n    return (\n        <div\n            className={classes.root}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n        >\n            <div className={classes.metadata}>\n                <ReferenceField\n                    record={note}\n                    resource=\"contactNotes\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    basePath=\"/contactNotes\"\n                >\n                    <TextField source=\"first_name\" variant=\"body1\" />\n                </ReferenceField>{' '}\n                <Typography component=\"span\" variant=\"body1\">\n                    added a note on{' '}\n                </Typography>\n                <DateField\n                    source=\"date\"\n                    record={note}\n                    variant=\"body1\"\n                    showTime\n                    locales=\"en\"\n                    options={{\n                        dateStyle: 'full',\n                        timeStyle: 'short',\n                    }}\n                />{' '}\n                {showStatus && <Status status={note.status} />}\n            </div>\n            {isEditing ? (\n                <form onSubmit={handleNoteUpdate}>\n                    <FilledInput\n                        value={noteText}\n                        onChange={handleTextChange}\n                        fullWidth\n                        multiline\n                        className={classes.textarea}\n                        autoFocus\n                    />\n                    <div className={classes.buttons}>\n                        <Button\n                            className={classes.cancel}\n                            onClick={handleCancelEdit}\n                            color=\"primary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            disabled={loading}\n                        >\n                            Update Note\n                        </Button>\n                    </div>\n                </form>\n            ) : (\n                <div \n                    className={classes.content}\n                    onClick={() => setHover(true)}\n                >\n                    <div className={classes.text}>\n                        <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                    </div>\n                    <div\n                        className={classes.toolbar}\n                        style={{ visibility: isHover ? 'visible' : 'hidden' }}\n                    >\n                        <Tooltip title=\"Edit note\">\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleEnterEditMode}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete note\">\n                            <IconButton size=\"small\" onClick={handleDelete}>\n                                <TrashIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Note } from './Note';\nimport { NewNote } from './NewNote';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '0.5em',\n    },\n});\n\nexport const NotesIterator = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const classes = useStyles();\n    const { data, ids, loaded } = useListContext();\n    if (!loaded) return null;\n    return (\n        <>\n            <NewNote showStatus={showStatus} reference={reference} />\n            <div className={classes.root}>\n                {ids.map((id, index) => (\n                    <Note\n                        note={data[id]}\n                        isLast={index === ids.length - 1}\n                        showStatus={showStatus}\n                        reference={reference}\n                        key={index}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\n\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        // backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const ProductAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Product;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n\n\n    return (record.image\n        ? <Avatar\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n        : <Avatar\n            alt={record.model}\n            className={classes.avatar}\n        >\n            <ShoppingCartIcon />\n        </Avatar>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport { linkToRecord, TextField, ReferenceField, ImageField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { ProductAvatar } from './ProductAvatar';\nimport { Product } from '../types';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 185,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    family: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    image: {\n        width: 28,\n        height: 28,\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        left: theme.spacing(1),\n    },\n    hidden:{\n        display: 'none',\n    }\n}));\n\nexport const ProductCard = ({ record }: { record: Product }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Product>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/products', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classNames(classes.checkbox, {[classes.hidden]: !loaded})}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Box position=\"absolute\" top={10} right={10}>\n                    <ReferenceField\n                        record={record}\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <ImageField \n                            source=\"logo\" \n                            title=\"name\"\n                            classes={classes}\n                        />\n                    </ReferenceField>\n                </Box>\n                <div className={classes.identity}>\n                    <ProductAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.model}\n                        </Typography>\n                        </Box>\n                    </div>\n\n                    <div className={classes.family}>\n                        <Typography variant=\"body2\">\n                            in family{' '}\n                            <ReferenceField\n                                record={record}\n                                source=\"family_id\"\n                                reference=\"productFamilies\"\n                                link=\"show\"\n                            >\n                                <TextField source=\"name\" />\n                            </ReferenceField>\n                        </Typography>\n                    </div>\n\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <DealIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_properties}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_properties > 1 ? 'properties' : 'property'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport { ProductCard } from './ProductCard';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n        justifyContent: 'center',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: \"center\",\n        padding: '1em',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} >\n                <Skeleton variant=\"circle\" width={60} height={60}  animation=\"wave\"/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={110}/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={150}/>\n                <Skeleton variant=\"rect\" width={180} height={40} />\n                </Paper>\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Product>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <ProductCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const ProductGridList = () => {\n    const { loaded, loading } = useListContext();\n    return loading ? <LoadingGridList /> : <LoadedGridList /> ;\n};\n","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { sizes } from './sizes';\nimport { LogoField } from './LogoField';\nimport { CompanyAside } from './CompanyAside';\nimport { Company, Deal, Contact } from '../types';\nimport { stageNames } from '../deals/stages';\nimport { NotesIterator } from '../notes';\nimport { CountryField } from './CountryField';\nimport { ProductGridList } from '../products/ProductGridList';\n\nexport const CompanyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <CompanyShowContent />\n    </ShowBase>\n);\n\nconst CompanyShowContent = () => {\n    const { record, loaded } = useShowContext<Company>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <LogoField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.name}</Typography>\n                                    {record.relation && (\n                                        <Chip \n                                            label={record.relation} \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                        />\n                                    )}\n                                </Box>\n                                <Typography \n                                    variant=\"body2\" \n                                    color=\"textSecondary\"\n                                >\n                                    {`#${record.id} - `}\n                                </Typography>\n                                {record.sector && (\n                                        <Typography variant=\"body2\">\n                                            <TextField source=\"sector\" />,{' '}\n                                            <SelectField\n                                                source=\"size\"\n                                                choices={sizes}\n                                            />\n                                        </Typography>\n                                )}\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"country_id\"\n                                    reference=\"countries\"\n                                    link={false}\n                                >\n                                    <CountryField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes === 1\n                                        ? '1 Note'\n                                        : `${record.nb_notes} Notes`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_contacts === 1\n                                        ? '1 Contact'\n                                        : `${record.nb_contacts} Contacts`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_deals === 1\n                                        ? '1 Deal'\n                                        : `${record.nb_deals} Deals`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_products === 1\n                                        ? '1 Product'\n                                        : `${record.nb_products} Products`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"companyNotes\"\n                                target=\"company_id\"\n                                sort={{ field: 'date', order: 'DESC' }}\n                            >\n                                 <NotesIterator reference=\"companies\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField\n                                reference=\"contacts\"\n                                target=\"company_id\"\n                                sort={{ field: 'last_name', order: 'ASC' }}\n                            >\n                                <ContactsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <ReferenceManyField\n                                reference=\"deals\"\n                                target=\"company_id\"\n                                sort={{ field: 'name', order: 'ASC' }}\n                            >\n                                <DealsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Box mt={1}>\n                            <ReferenceManyField\n                                reference=\"products\"\n                                target=\"company_id\"\n                                label=\"Products\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <ProductGridList />\n                            </ReferenceManyField>\n\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <CompanyAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ContactsIterator = () => {\n    const { data, ids, loaded } = useListContext<Contact>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const contact = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/contacts/${id}/show`}\n                        >\n                            <ListItemAvatar>\n                                <Avatar record={contact} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${contact.first_name} ${contact.last_name}`}\n                                secondary={\n                                    <>\n                                        {contact.title}{' '}\n                                        {`- ${contact.nb_notes} notes `}\n                                        <TagsList record={contact} />\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(contact.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={contact.status} />\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                <CreateRelatedContactButton record={record} />\n            </Box>\n        </Box>\n    );\n};\n\nconst CreateRelatedContactButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/contacts/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<PersonAddIcon />}\n    >\n        Add contact\n    </Button>\n);\n\nconst DealsIterator = () => {\n    const { data, ids, loaded } = useListContext<Deal>();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const deal = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/deals/${id}/show`}\n                        >\n                            <ListItemText\n                                primary={deal.name}\n                                secondary={\n                                    <>\n                                        {/* @ts-ignore */}\n                                        {stageNames[deal.stage]},{' '}\n                                        {deal.amount.toLocaleString('en-US', {\n                                            notation: 'compact',\n                                            style: 'currency',\n                                            currency: 'USD',\n                                            currencyDisplay: 'narrowSymbol',\n                                            minimumSignificantDigits: 3,\n                                        })}\n                                        , {deal.type}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"span\"\n                                >\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(deal.updated_at),\n                                        now\n                                    )}{' '}\n                                    ago{' '}\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n    FormDataConsumer,\n    required,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { CompanyAside } from './CompanyAside';\nimport { LogoField } from './LogoField';\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const CompanyEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit {...props} aside={<CompanyAside link=\"show\" />} actions={false}>\n            <SimpleForm component={CustomLayout} redirect=\"show\">\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <LogoField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { CompanyList } from './CompanyList';\nimport { CompanyCreate } from './CompanyCreate';\nimport { CompanyShow } from './CompanyShow';\nimport { CompanyEdit } from './CompanyEdit';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nexport default {\n    list: CompanyList,\n    create: CompanyCreate,\n    edit: CompanyEdit,\n    show: CompanyShow,\n    icon: BusinessIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Contact, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ContactAside = ({ \n    record, \n    link = 'edit',\n}: {\n    record?: Contact;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/contacts\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst TasksIterator = () => {\n    const { data, ids, loading } = useListContext();\n    if (loading || ids.length === 0) return null;\n    return (\n            <List>\n                {ids.map(id => {\n                    const task = data[id];\n                    return (\n                        <ListItem key={id} disableGutters>\n                            <Box>\n                                <Typography variant=\"body2\">\n                                    {task.text}\n                                </Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                >\n                                    due{' '}\n                                    <DateField\n                                        source=\"due_date\"\n                                        record={task}\n                                    />\n                                </Typography>\n                            </Box>\n                        </ListItem>\n                    );\n                })}\n            </List>\n    );\n};\n\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Contact;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Personal info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                <EmailField source=\"email\" />\n            </Box>\n\n            <Box mt={1}>\n                <TextField source=\"phone_number1\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Work\n                </Typography>\n            </Box>\n\n            <Box mb={1}>\n                <TextField source=\"phone_number2\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Home\n                </Typography>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"body2\">\n                    {record.gender === 'male' ? 'He/Him' : 'She/Her'}\n                </Typography>\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={2}>{record && record.background}</Box>\n            <Box mt={1} mb={3}>\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"first_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Last seen on\n                </Typography>{' '}\n                <DateField\n                    source=\"last_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"contacts\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record ? `${record.first_name} ${record.last_name}` : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"contacts\" />\n            </Box>\n\n            <Box>\n                <Typography variant=\"subtitle2\">Tasks</Typography>\n                <Divider />\n                <ReferenceManyField\n                    resource=\"contacts\"\n                    target=\"contact_id\"\n                    reference=\"tasks\"\n                >\n                    <TasksIterator />\n                </ReferenceManyField>\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Contact } from '../types';\n\nexport const ContactShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ContactShowContent />\n    </ShowBase>\n);\n\nconst ContactShowContent = () => {\n    const { record, loaded } = useShowContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.first_name} {record.last_name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {`#${record.id} - `}\n                                    {record.title} at{' '}\n                                    <ReferenceField\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        link=\"show\"\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <ReferenceManyField\n                            target=\"contact_id\"\n                            reference=\"contactNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator showStatus reference=\"contacts\" />\n                        </ReferenceManyField>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ContactAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { endOfYesterday, startOfWeek, startOfMonth, subMonths } from 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Status } from '../misc/Status';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n        }\n    },\n}));\n\nexport const ContactListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Last seen\" icon={<AccessTimeIcon />}>\n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        last_seen_gte: endOfYesterday().toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        last_seen_gte: startOfWeek(new Date()).toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this week\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfMonth(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before last month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: subMonths(\n                            startOfMonth(new Date()),\n                            1\n                        ).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                <FilterListItem\n                    label={\n                        <>\n                            Cold <Status status=\"cold\" />\n                        </>\n                    }\n                    value={{\n                        status: 'cold',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Warm <Status status=\"warm\" />\n                        </>\n                    }\n                    value={{\n                        status: 'warm',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Hot <Status status=\"hot\" />\n                        </>\n                    }\n                    value={{\n                        status: 'hot',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            In contract <Status status=\"in-contract\" />\n                        </>\n                    }\n                    value={{\n                        status: 'in-contract',\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                {ids &&\n                    data &&\n                    ids.map(id => (\n                        <FilterListItem\n                            key={id}\n                            label={<TagChip record={data[id]}/>}\n                            value={{ tags: [id] }}\n                        />\n                    ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    FilterLiveSearch,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ContactListFilter } from './ContactListFilter';\nimport { Contact } from '../types';\nimport { ImportButton } from 'react-admin-import-csv';\n\nconst ContactListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Contact\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const contact = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/contacts/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={contact} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${contact.first_name} ${contact.last_name}`}\n                            secondary={\n                                <>\n                                    {`#${contact.id} - `}\n                                    {contact.title} at{' '}\n                                    <ReferenceField\n                                        record={contact}\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        basePath=\"/companies\"\n                                        link={false}\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>{' '}\n                                    {!!contact.nb_notes &&\n                                        `- ${contact.nb_notes} notes `}\n                                    <TagsList record={contact} />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                last activity{' '}\n                                {formatDistance(\n                                    new Date(contact.last_seen),\n                                    now\n                                )}{' '}\n                                ago <Status status={contact.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ContactListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['id', 'last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/contacts\"\n                variant=\"contained\"\n                label=\"New Contact\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ContactList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ContactListActions />}\n            aside={<ContactListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            sort={{ field: 'last_seen', order: 'DESC' }}\n        >\n            <ContactListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { Contact } from '../types';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ContactEditContent = () => {\n    const { record, loaded, save } = useEditContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"first_name\" />\n                                                <Spacer />\n                                                <TextInput source=\"last_name\" />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"title\" />\n                                                <Spacer />\n                                                <ReferenceInput\n                                                    source=\"company_id\"\n                                                    reference=\"companies\"\n                                                >\n                                                    <AutocompleteInput optionText=\"name\" />\n                                                </ReferenceInput>\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"email\"\n                                                    fullWidth\n                                                />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"phone_number1\" />\n                                                <Spacer />\n                                                <TextInput source=\"phone_number2\" />\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"background\"\n                                                    multiline\n                                                    fullWidth\n                                                />\n                                                <TextInput\n                                                    source=\"avatar\"\n                                                    fullWidth\n                                                />\n                                                <BooleanInput source=\"has_newsletter\" />\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ContactAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ContactEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ContactEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Contact } from '../types';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ContactCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const contactDefaultValue = () => ({ sales_id: identity && identity?.id });\n    const transform = (data: Contact) => ({\n        ...data,\n        last_seen: new Date(),\n        tags: [],\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"first_name\" \n                    validate={[required()]} \n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    validate={[required()]}\n                    formClassName={classes.inline}\n                />\n                <CustomDivider />\n                <TextInput \n                    source=\"title\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <ReferenceInput\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    formClassName={classes.inline}\n                >\n                    <AutocompleteInput optionText=\"name\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput\n                    source=\"email\"\n                    fullWidth\n                />\n                <TextInput source=\"phone_number1\"\n                    formClassName={clsx(classes.inline, 'first-child')} />\n                <TextInput source=\"phone_number2\"\n                    formClassName={classes.inline} />\n                <CustomDivider />\n                <TextInput\n                    source=\"background\"\n                    multiline\n                    fullWidth\n                />\n                <TextInput\n                    source=\"avatar\"\n                    fullWidth\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n                <BooleanInput source=\"has_newsletter\" />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { ContactShow } from './ContactShow';\nimport { ContactList } from './ContactList';\nimport { ContactEdit } from './ContactEdit';\nimport { ContactCreate } from './ContactCreate';\nimport ContactsIcon from '@material-ui/icons/Contacts';\n\nexport default {\n    list: ContactList,\n    show: ContactShow,\n    edit: ContactEdit,\n    create: ContactCreate,\n    icon: ContactsIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    EditButton,\n    ShowButton,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Sale } from '../types';\n\nexport const TaskAside = ({ record, link = 'edit' }: any) => (\n    <Box ml={4} width={250} minWidth={250}>\n        <Box textAlign=\"center\" mb={2}>\n            {link === 'edit' ? (\n                <EditButton\n                    basePath=\"/Tasks\"\n                    record={record}\n                    label=\"Edit Task\"\n                />\n            ) : (\n                <ShowButton\n                    basePath=\"/Tasks\"\n                    record={record}\n                    label=\"Show Task\"\n                />\n            )}\n        </Box>\n    </Box>\n);\n","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n    FunctionField,\n} from 'react-admin';\nimport { Avatar, Box, Card, CardContent, Typography } from '@material-ui/core';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\n\nimport { TaskAside } from './TaskAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Sale, Task } from '../types';\n\nexport const TaskShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <TaskShowContent />\n    </ShowBase>\n);\n\nconst TaskShowContent = () => {\n    const { record, loaded } = useShowContext<Task>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar >\n                                <AssignmentTurnedInIcon />\n                            </Avatar>\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.text}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={record}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <TaskAside record={record} />\n        </Box>\n    );\n};\n","export const statuses = [\n    {id: 'pending', name: 'Pending', color: '#FFA000'},\n    {id: 'done', name: 'Done', color: '#CDDC39'},\n    {id: 'postponed', name: 'Postponed', color: '#2196F3'},\n]","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { statuses } from './status';\n\nexport const TaskStatus = ({ status }: { status: string }) => {\n    const statusItem = statuses.find(item => item.id === status)\n    const statusColor = statusItem ? statusItem.color : \"#000\";\n    return (\n        <Box\n            width={10}\n            height={10}\n            display=\"inline-block\"\n            borderRadius={5}\n            bgcolor={statusColor}\n            component=\"span\"\n        />\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { endOfYesterday, startOfWeek, startOfMonth, subMonths } from 'date-fns';\n\nimport { TaskStatus } from './TaskStatus';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { statuses } from './status';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const TaskListFilter = () => {\n    const { identity } = useGetIdentity();\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Due date\" icon={<AccessTimeIcon />}>\n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        due_date_gte: endOfYesterday().toISOString(),\n                        due_date_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        due_date_gte: startOfWeek(new Date()).toISOString(),\n                        due_date_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this week\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: startOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this month\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: startOfMonth(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before last month\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: subMonths(\n                            startOfMonth(new Date()),\n                            1\n                        ).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                {statuses.map(status =>(\n                    <FilterListItem\n                    label={\n                        <>\n                            {status.name} <TaskStatus status={status.id} />\n                        </>\n                    }\n                    value={{\n                        status: status.id,\n                    }}\n                />\n                ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { BulkUpdateButton, BulkActionProps } from 'react-admin';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst doneState = { status: 'done' };\n\nconst MarkDoneButton = (props: BulkActionProps) => (\n    <BulkUpdateButton\n        {...props}\n        label=\"Mark checked\"\n        data={doneState}\n        icon={<DoneIcon/>}\n        mutationMode=\"pessimistic\"\n    />\n);\n\nexport default MarkDoneButton;","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { Fragment } from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    BulkDeleteButton,\n    useGetIdentity,\n    BulkActionProps,\n    ListActionsProps,\n    FunctionField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n    Avatar,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { ImportButton } from \"react-admin-import-csv\";\n\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { TaskListFilter } from './TaskListFilter';\nimport { Sale, Task } from '../types';\nimport MarkDoneButton from './MarkDoneButton';\nimport { TaskStatus } from './TaskStatus';\n\nconst TaskListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Task\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const task = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/Tasks/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar>\n                                <AssignmentTurnedInIcon />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <>\n                                {task.text} \n                                </>\n                            }\n                            secondary={\n                                <>\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={task}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                due in{' '}\n                                {formatDistance(\n                                    new Date(task.due_date),\n                                    now\n                                )}\n                                {' '}<TaskStatus status={task.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst TaskListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['due_date']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/Tasks\"\n                variant=\"contained\"\n                label=\"New Task\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nconst TaskBulkActionButtons = (props: BulkActionProps) => (\n    <Fragment>\n        <MarkDoneButton {...props} />\n        {/* default bulk delete action */}\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nexport const TaskList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<TaskListActions />}\n            aside={<TaskListFilter />}\n            bulkActionButtons={<TaskBulkActionButtons />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id, status: 'pending' }}\n            sort={{ field: 'due_date', order: 'DESC' }}\n        >\n            <TaskListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    required,\n    Toolbar,\n    useEditContext,\n    DateInput,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport omit from 'lodash/omit';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { TaskAside } from './TaskAside';\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst TaskEditContent = () => {\n    const classes = useStyles();\n    const { record, loaded, save } = useEditContext<Task>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                        <Avatar >\n                                            <AssignmentTurnedInIcon />\n                                        </Avatar>\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <TextInput \n                                                source=\"text\"\n                                                label=\"Task\"\n                                                validate={[required()]}\n                                                fullWidth\n                                            />\n                                            <DateInput\n                                                source=\"due_date\"\n                                                className={clsx(classes.inline, 'first-child')}\n                                            />\n                                            <SelectInput\n                                                source=\"status\"\n                                                choices={statuses}\n                                                className={classes.inline}\n                                            />\n                                            \n                                            <ReferenceInput\n                                                source=\"sales_id\"\n                                                reference=\"sales\"\n                                                label=\"Assigned to\"\n                                                helperText={false}\n                                            >\n                                                <SelectInput\n                                                    optionText={(sales: any) =>\n                                                        `${sales.first_name} ${sales.last_name}`\n                                                    }\n                                                />\n                                            </ReferenceInput>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <TaskAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const TaskEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <TaskEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    DateInput,\n    useCreateContext,\n    SelectField,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\n\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const TaskCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const defaultValue = () => ({\n        due_date: new Date(), \n        status: 'pending',\n        sales_id: identity && identity?.id,\n    });\n    const transform = (data: Task) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={defaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"text\"\n                    label=\"Task\"\n                    validate={[required()]}\n                    fullWidth\n                />\n                <DateInput\n                    source=\"due_date\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"status\"\n                    choices={statuses}\n                    formClassName={classes.inline}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Assigned to\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar >\n                    <AssignmentTurnedInIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { TaskShow } from './TaskShow';\nimport { TaskList } from './TaskList';\nimport { TaskEdit } from './TaskEdit';\nimport { TaskCreate } from './TaskCreate';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nexport default {\n    list: TaskList,\n    show: TaskShow,\n    edit: TaskEdit,\n    create: TaskCreate,\n    icon: FormatListBulletedIcon,\n};\n","import * as React from 'react';\nimport { ReferenceField, useRedirect } from 'react-admin';\nimport { Card, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { LogoField } from '../companies/LogoField';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    cardContent: {\n        padding: theme.spacing(1),\n        display: 'flex',\n    },\n    cardText: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const DealCard = ({ deal, index }: { deal: Deal; index: number }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    if (!deal) return null;\n\n    const handleClick = () => {\n        redirect(`/deals/${deal.id}/show`);\n    };\n    return (\n        <Draggable draggableId={String(deal.id)} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className={classes.root}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    onClick={handleClick}\n                >\n                    <Card\n                        style={{\n                            opacity: snapshot.isDragging ? 0.9 : 1,\n                            transform: snapshot.isDragging\n                                ? 'rotate(-2deg)'\n                                : '',\n                        }}\n                        elevation={snapshot.isDragging ? 3 : 1}\n                    >\n                        <Box p={1} display=\"flex\">\n                            <ReferenceField\n                                source=\"company_id\"\n                                record={deal}\n                                reference=\"companies\"\n                                resource=\"deals\"\n                                basePath=\"/deals\"\n                            >\n                                <LogoField size=\"small\" />\n                            </ReferenceField>\n                            <Box ml={1}>\n                                <Typography variant=\"body2\" gutterBottom>\n                                    {deal.name}\n                                </Typography>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    {deal.amount.toLocaleString('en-US', {\n                                        notation: 'compact',\n                                        style: 'currency',\n                                        currency: 'USD',\n                                        currencyDisplay: 'narrowSymbol',\n                                        minimumSignificantDigits: 3,\n                                    })}\n                                    , {deal.type}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Card>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Identifier, RecordMap } from 'react-admin';\n\nimport { DealCard } from './DealCard';\nimport { stageNames } from './stages';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        flex: 1,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: '#eaeaee',\n        '&:first-child': {\n            paddingLeft: 5,\n            borderTopLeftRadius: 5,\n        },\n        '&:last-child': {\n            paddingRight: 5,\n            borderTopRightRadius: 5,\n        },\n    },\n    droppable: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 5,\n        padding: 5,\n        '&.isDraggingOver': {\n            backgroundColor: '#dadadf',\n        },\n    },\n});\n\nexport const DealColumn = ({\n    stage,\n    dealIds,\n    data,\n}: {\n    stage: string;\n    dealIds: Identifier[];\n    data: RecordMap<Deal>;\n}) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography align=\"center\" variant=\"subtitle1\">\n                {/* @ts-ignore */}\n                {stageNames[stage]}\n            </Typography>\n            <Droppable droppableId={stage}>\n                {(droppableProvided, snapshot) => (\n                    <div\n                        ref={droppableProvided.innerRef}\n                        {...droppableProvided.droppableProps}\n                        className={\n                            classes.droppable +\n                            (snapshot.isDraggingOver ? ' isDraggingOver' : '')\n                        }\n                    >\n                        {dealIds.map((id, index) => (\n                            <DealCard key={id} index={index} deal={data[id]} />\n                        ))}\n                        {droppableProvided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport {\n    useMutation,\n    Identifier,\n    useListContext,\n    RecordMap,\n    DataProviderContext,\n} from 'react-admin';\nimport { Box } from '@material-ui/core';\nimport { DragDropContext, OnDragEndResponder } from 'react-beautiful-dnd';\nimport isEqual from 'lodash/isEqual';\n\nimport { DealColumn } from './DealColumn';\nimport { stages } from './stages';\nimport { Deal } from '../types';\n\ninterface DealsByColumn {\n    [stage: string]: Identifier[];\n}\n\nconst initialDeals: DealsByColumn = stages.reduce(\n    (obj, stage) => ({ ...obj, [stage]: [] }),\n    {}\n);\n\nconst getDealsByColumn = (\n    ids: Identifier[],\n    data: RecordMap<Deal>\n): DealsByColumn => {\n    // group deals by column\n    const columns = ids.reduce(\n        (acc, id) => {\n            acc[data[id].stage].push(id);\n            return acc;\n        },\n        stages.reduce((obj, stage) => ({ ...obj, [stage]: [] }), {} as any)\n    );\n    // order each column by index\n    stages.forEach(stage => {\n        columns[stage] = columns[stage].sort(\n            (a: Identifier, b: Identifier) => data[a].index - data[b].index\n        );\n    });\n    return columns;\n};\n\nexport const DealListContent = () => {\n    const {\n        data,\n        ids,\n        loaded,\n        page,\n        perPage,\n        currentSort,\n        filterValues,\n    } = useListContext<Deal>();\n\n    const [deals, setDeals] = useState<DealsByColumn>(\n        loaded ? getDealsByColumn(ids, data) : initialDeals\n    );\n    // we use the raw dataProvider to avoid too many updates to the Redux store after updates (which would create junk)\n    const dataProvider = useContext(DataProviderContext);\n\n    // FIXME: use refetch when available\n    const [refresh] = useMutation({\n        resource: 'deals',\n        type: 'getList',\n        payload: {\n            pagination: { page, perPage },\n            sort: currentSort,\n            filter: filterValues,\n        },\n    });\n\n    // update deals by columns when the dataProvider response updates\n    useEffect(() => {\n        if (!loaded) return;\n        const newDeals = getDealsByColumn(ids, data);\n        if (isEqual(deals, newDeals)) {\n            return;\n        }\n        setDeals(newDeals);\n    }, [data, ids, loaded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!loaded) return null;\n\n    const onDragEnd: OnDragEndResponder = async result => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // moving deal inside the same column\n\n            const column = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const sourceDeal = data[column[source.index]];\n            const destinationDeal = data[column[destination.index]];\n\n            // update local state\n            // remove source deal from column\n            column.splice(source.index, 1);\n            // read source deal at destination\n            column.splice(destination.index, 0, Number(draggableId));\n            setDeals({\n                ...deals,\n                [source.droppableId]: column,\n            });\n\n            // update backend\n            // Fetch all the deals in this stage (because the list may be filtered, but we need to update even non-filtered deals)\n            const { data: columnDeals } = await dataProvider.getList('deals', {\n                sort: { field: 'index', order: 'ASC' },\n                pagination: { page: 1, perPage: 100 },\n                filter: { stage: source.droppableId },\n            });\n\n            if (source.index > destination.index) {\n                // deal moved up, eg\n                // dest   src\n                //  <------\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between destination.index and source.index, increase the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index >= destinationDeal.index &&\n                                deal.index < sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index + 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            } else {\n                // deal moved down, e.g\n                // src   dest\n                //  ------>\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between source.index and destination.index, decrease the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index <= destinationDeal.index &&\n                                deal.index > sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index - 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            }\n        } else {\n            // moving deal across columns\n\n            const sourceColumn = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const destinationColumn = Array.from(\n                deals[destination.droppableId]\n            ); // [4, 7, 23, 5] arrays of ids\n            const sourceDeal = data[sourceColumn[source.index]];\n            const destinationDeal = data[destinationColumn[destination.index]]; // may be undefined if dropping at the end of a column\n\n            // update local state\n            sourceColumn.splice(source.index, 1);\n            destinationColumn.splice(destination.index, 0, draggableId);\n            setDeals({\n                ...deals,\n                [source.droppableId]: sourceColumn,\n                [destination.droppableId]: destinationColumn,\n            });\n\n            // update backend\n            // Fetch all the deals in both stages (because the list may be filtered, but we need to update even non-filtered deals)\n            const [\n                { data: sourceDeals },\n                { data: destinationDeals },\n            ] = await Promise.all([\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: source.droppableId },\n                }),\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: destination.droppableId },\n                }),\n            ]);\n\n            await Promise.all([\n                // decrease index on the deals after the source index in the source columns\n                ...sourceDeals\n                    .filter(deal => deal.index > sourceDeal.index)\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index - 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // increase index on the deals after the destination index in the destination columns\n                ...destinationDeals\n                    .filter(deal =>\n                        destinationDeal\n                            ? deal.index >= destinationDeal.index\n                            : false\n                    )\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index + 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // change the dragged deal to take the destination index and column\n                dataProvider.update('deals', {\n                    id: sourceDeal.id,\n                    data: {\n                        index: destinationDeal\n                            ? destinationDeal.index\n                            : (destinationDeals.length > 0)\n                            ? destinationDeals.pop()!.index + 1 \n                            : 0,\n                        stage: destination.droppableId,\n                    },\n                    previousData: sourceDeal,\n                }),\n            ]);\n\n            refresh();\n        }\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Box display=\"flex\">\n                {stages.map(stage => (\n                    <DealColumn\n                        stage={stage}\n                        dealIds={deals[stage]}\n                        data={data}\n                        key={stage}\n                    />\n                ))}\n            </Box>\n        </DragDropContext>\n    );\n};\n","export const types = [\n    'Other',\n    'Copywriting',\n    'Print project',\n    'UI Design',\n    'Website design',\n];\n\nexport const typeChoices = types.map(type => ({ id: type, name: type }));\n","import * as React from 'react';\nimport {\n    Create,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    NumberInput,\n    ReferenceInput,\n    AutocompleteInput,\n    required,\n    useRedirect,\n    useDataProvider,\n    useGetIdentity,\n} from 'react-admin';\nimport { Dialog } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stageChoices } from './stages';\nimport { typeChoices } from './types';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n});\n\nexport const DealCreate = ({ open }: { open: boolean }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const dataProvider = useDataProvider();\n    const { identity } = useGetIdentity();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    const onSuccess = ({ data: deal }: { data: Deal }) => {\n        redirect('/deals');\n        // increase the index of all deals in the same stage as the new deal\n        dataProvider\n            .getList('deals', {\n                pagination: { page: 1, perPage: 50 },\n                sort: { field: 'id', order: 'ASC' },\n                filter: { stage: deal.stage },\n            })\n            .then(({ data: deals }) =>\n                Promise.all(\n                    deals\n                        .filter(oldDeal => oldDeal.id !== deal.id)\n                        .map(oldDeal =>\n                            dataProvider.update('deals', {\n                                id: oldDeal.id,\n                                data: { index: oldDeal.index + 1 },\n                                previousData: oldDeal,\n                            })\n                        )\n                )\n            );\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Create\n                resource=\"deals\"\n                basePath=\"/deals\"\n                className={classes.root}\n                onSuccess={onSuccess}\n            >\n                <SimpleForm initialValues={{ index: 0, sales_id: identity && identity?.id }}>\n                    <TextInput\n                        source=\"name\"\n                        label=\"Deal name\"\n                        fullWidth\n                        validate={[required()]}\n                    />\n                    <TextInput\n                        source=\"description\"\n                        multiline\n                        rows={3}\n                        fullWidth\n                    />\n                    <ReferenceInput\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        fullWidth\n                        validate={[required()]}\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <SelectInput\n                        source=\"stage\"\n                        choices={stageChoices}\n                        fullWidth\n                        validate={[required()]}\n                        defaultValue=\"opportunity\"\n                    />\n                    <SelectInput\n                        source=\"type\"\n                        choices={typeChoices}\n                        fullWidth\n                    />\n                    <NumberInput source=\"amount\" fullWidth defaultValue={0} />\n                    <ReferenceInput\n                        source=\"sales_id\"\n                        reference=\"sales\"\n                        label=\"Account manager\"\n                        helperText={false}\n                        fullWidth\n                    >\n                        <SelectInput\n                            optionText={(sales: any) =>\n                                `${sales.first_name} ${sales.last_name}`\n                            }\n                        />\n                    </ReferenceInput>\n                </SimpleForm>\n            </Create>\n        </Dialog>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { Link } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    ul: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        display: 'inline-block',\n    },\n    li: {\n        display: 'inline',\n        '&:after': {\n            content: '\", \"',\n        },\n        '&:last-child:after': {\n            content: '\"\"',\n        },\n    },\n});\n\nexport const ContactList = () => {\n    const { ids, data, loaded } = useListContext();\n    const classes = useStyles();\n    if (!loaded) return <div style={{ height: '2em' }} />;\n    return (\n        <ul className={classes.ul}>\n            {ids.map(id => (\n                <li key={id} className={classes.li}>\n                    <Link\n                        component={RouterLink}\n                        to={`/contacts/${id}`}\n                        variant=\"subtitle1\"\n                    >\n                        {data[id].first_name} {data[id].last_name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n","import * as React from 'react';\nimport {\n    ShowBase,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    ReferenceArrayField,\n    useRecordContext,\n    useRedirect,\n    useRefresh,\n    useDataProvider,\n    Identifier,\n} from 'react-admin';\nimport {\n    Box,\n    Dialog,\n    DialogContent,\n    Typography,\n    Divider,\n    Button,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format } from 'date-fns';\n\nimport { CompanyAvatar } from '../companies/CompanyAvatar';\nimport { NotesIterator } from '../notes';\nimport { ContactList } from './ContactList';\nimport { stageNames } from './stages';\n\nconst useStyles = makeStyles({\n    dialog: {\n        position: 'absolute',\n        top: 50,\n    },\n});\n\nexport const DealShow = ({ open, id }: { open: boolean; id: Identifier }) => {\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            fullWidth\n            maxWidth=\"md\"\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogContent>\n                <ShowBase resource=\"deals\" basePath=\"/deals\" id={id}>\n                    <DealShowContent />\n                </ShowBase>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nconst DealShowContent = () => {\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    \n    if (!record) return null;\n\n    const onDelete = async() =>{\n        const { data: columnDeals } = await dataProvider.getList('deals', {\n            sort: { field: 'index', order: 'ASC' },\n            pagination: { page: 1, perPage: 100 },\n            filter: { stage: record.droppableId },\n        });\n        await Promise.all([\n            ...columnDeals\n                .filter(\n                    deal => deal.index < record.index\n                )\n                .map(deal =>\n                    dataProvider.update('deals', {\n                        id: deal.id,\n                        data: { index: deal.index - 1 },\n                        previousData: deal,\n                    })\n                ),\n            // for the deal that was moved, update its index\n            dataProvider.delete('deals', {\n                id: record.id,\n                previousData: record,\n            }),\n        ]);\n        redirect('/deals');\n        refresh();\n    };\n\n    return (\n        <>\n            <Box display=\"flex\">\n                <Box\n                    width={100}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                >\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <CompanyAvatar />\n                    </ReferenceField>\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <TextField\n                            source=\"name\"\n                            align=\"center\"\n                            component=\"div\"\n                        />\n                    </ReferenceField>\n                </Box>\n                <Box ml={2} flex=\"1\">\n                    <Box display=\"flex\" justifyContent=\"space-between\" >\n                        <Typography variant=\"h5\">{record.name}</Typography>\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<DeleteIcon />}            \n                            onClick={(e:any) =>{\n                                e.stopPropagation();\n                                onDelete();\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </Box>\n\n                    <Box display=\"flex\" mt={2}>\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Start\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {format(new Date(record.start_at), 'PP')}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Budget\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.amount.toLocaleString('en-US', {\n                                    notation: 'compact',\n                                    style: 'currency',\n                                    currency: 'USD',\n                                    currencyDisplay: 'narrowSymbol',\n                                    minimumSignificantDigits: 3,\n                                })}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Type\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.type}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Stage\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {/* @ts-ignore */}\n                                {stageNames[record.stage]}\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2}>\n                        <Box\n                            display=\"flex\"\n                            mr={5}\n                            flexDirection=\"column\"\n                            minHeight={48}\n                        >\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Contacts\n                            </Typography>\n                            <ReferenceArrayField\n                                source=\"contact_ids\"\n                                reference=\"contacts\"\n                            >\n                                <ContactList />\n                            </ReferenceArrayField>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2} style={{ whiteSpace: 'pre-line' }}>\n                        <Typography color=\"textSecondary\" variant=\"body2\">\n                            Description\n                        </Typography>\n                        <Typography>{record.description}</Typography>\n                    </Box>\n\n                    <Divider />\n\n                    <Box mt={2}>\n                        <ReferenceManyField\n                            target=\"deal_id\"\n                            reference=\"dealNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator reference=\"deals\" />\n                        </ReferenceManyField>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useListFilterContext, useGetIdentity } from 'react-admin';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const OnlyMineInput = ({ alwaysOn }: { alwaysOn: boolean }) => {\n    const {\n        filterValues,\n        displayedFilters,\n        setFilters,\n    } = useListFilterContext();\n    const { identity } = useGetIdentity();\n    const classes = useStyles();\n    const handleChange = () => {\n        const newFilterValues = { ...filterValues };\n        if (typeof filterValues.sales_id !== 'undefined') {\n            delete newFilterValues.sales_id;\n        } else {\n            newFilterValues.sales_id = identity && identity?.id;\n        }\n        setFilters(newFilterValues, displayedFilters);\n    };\n    return (\n        <div className={classes.root}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={typeof filterValues.sales_id !== 'undefined'}\n                        onChange={handleChange}\n                        color=\"primary\"\n                        name=\"checkedC\"\n                    />\n                }\n                label=\"Only companies I manage\"\n            />\n        </div>\n    );\n};\n\nOnlyMineInput.defaultProps = { source: 'sales_id' };\n","import * as React from 'react';\nimport {\n    CreateButton,\n    ExportButton,\n    FilterButton,\n    List,\n    ListProps,\n    SearchInput,\n    SelectInput,\n    TopToolbar,\n    useGetIdentity,\n} from 'react-admin';\nimport { Route } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DealListContent } from './DealListContent';\nimport { DealCreate } from './DealCreate';\nimport { DealShow } from './DealShow';\nimport { OnlyMineInput } from './OnlyMineInput';\nimport { typeChoices } from './types';\n\nexport const DealList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <>\n            <List\n                {...props}\n                perPage={100}\n                sort={{ field: 'index', order: 'ASC' }}\n                filters={dealFilters}\n                filterDefaultValues={{ sales_id: identity && identity?.id }}\n                actions={<DealActions />}\n                pagination={false}\n                component=\"div\"\n            >\n                <DealListContent />\n            </List>\n            <Route path=\"/deals/create\">\n                {({ match }) => <DealCreate open={!!match} />}\n            </Route>\n            <Route path=\"/deals/:id/show\">\n                {({ match }) =>\n                    !!match ? (\n                        <DealShow open={!!match} id={match?.params?.id} />\n                    ) : null\n                }\n            </Route>\n        </>\n    ) : null;\n};\n\nconst dealFilters = [\n    <SearchInput source=\"q\" alwaysOn />,\n    <OnlyMineInput alwaysOn />,\n    <SelectInput source=\"type\" choices={typeChoices} />,\n];\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst DealActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <FilterButton />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/deals\"\n                variant=\"contained\"\n                label=\"New Deal\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { DealList } from './DealList';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nexport default {\n    list: DealList,\n    icon: MonetizationOnIcon,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nimport { ProductFamily } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const ProductListFilter = () => {\n    const { identity } = useGetIdentity();\n    const { data: familyData, ids: familyIds } = useGetList<ProductFamily>(\n        'productFamilies',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Families\" icon={<CategoryIcon />}>\n                {familyIds &&\n                    familyData &&\n                    familyIds.map(id => (\n                        <FilterListItem\n                            key={id}\n                            label={<Chip label={familyData[id].name} size=\"small\"/>}\n                            value={{ family_id: id }}\n                        />\n                    ))}\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ProductGridList } from './ProductGridList';\nimport { ProductListFilter } from './ProductListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\n\nexport const ProductList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<ProductListActions />}\n            aside={<ProductListFilter />}\n            filterDefaultValues={{ }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n            perPage={25}\n            sort={{ field: 'model', order: 'ASC' }}\n            component=\"div\"\n        >\n            <ProductGridList />\n        </List>\n    ) : null;\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ProductListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/products\"\n                variant=\"contained\"\n                label=\"New Product\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n    ReferenceInput,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    DialogTitle,\n } from '@material-ui/core';\n import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nexport const CreatePropertyType = () => {\n    const classes = useStyles();\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [unit, setUnit] = useState('');\n    const [synonyms, setSynonyms] = useState('');\n    const [create] = useCreate('propertyTypes');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        unit: unit,\n                        synonyms: synonyms,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: any;}) => {\n                    setName('');\n                    setUnit('');\n                    setSynonyms('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>Add new Product Property Type</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <div className={classes.root}>\n                        <TextField\n                            label=\"New type name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                            required\n                        />\n                        <TextField\n                            label=\"Unit\"\n                            value={unit}\n                            onChange={event => setUnit(event.target.value)}\n                        />\n                        <TextField\n                            label=\"Commma separated synonyms\"\n                            value={synonyms}\n                            onChange={event => setSynonyms(event.target.value)}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" disabled={!name}>Add</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import { \n    AutocompleteInput, \n    ReferenceInput, \n    SimpleFormIterator,\n    SimpleFormIteratorProps, \n    TextInput, \n} from \"react-admin\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nimport { CreatePropertyType } from \"./CreatePropertyType\";\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(1),\n        width: '32%',\n        minWidth: theme.spacing(10),\n        '&.first-child': {\n            marginLeft: 0,\n        },\n        [theme.breakpoints.down('xs')]: {\n            display: 'block',\n            marginLeft: 0,\n            width: '100%',\n            margin: 0,\n        }\n    },\n    \n}));\n\nexport const PropertyFormIterator = (props: SimpleFormIteratorProps) => {\n    const classes = useStyles();\n    return (\n        <SimpleFormIterator {...props} >\n            <ReferenceInput\n                source=\"type_id\"\n                reference=\"propertyTypes\"\n                label=\"Type\"\n                formClassName={classNames(classes.inline, 'first-child')}\n                fullWidth\n            >\n                <AutocompleteInput \n                    optionText=\"name\" \n                    create={<CreatePropertyType />}\n                />\n            </ReferenceInput>\n            <TextInput \n                source=\"property_value\" \n                label=\"Value\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n            <TextInput \n                source=\"condition\"  \n                label=\"Condition\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n        </SimpleFormIterator>\n    );\n};","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    TabbedForm,\n    TextInput,\n    FormTab,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    ArrayInput,\n    SimpleFormIterator,\n    ReferenceArrayInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { Box, CardContent, Divider, Avatar, useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\n\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n    propertyContainer: {\n        display: 'flex',\n        gap: theme.spacing(1),\n        minWidth: '500px',\n    },\n}));\n\nexport const ProductCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const theme = useTheme();\n\n    const defaultValue = () => ({ });\n\n    return (\n        <Create {...props} actions={false} >\n            <TabbedForm>\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <ShoppingCartIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth=\"80%\">\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const ProductImageField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: Product;\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.image) return (\n        <Avatar>\n            <ShoppingCartIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            title={record.model}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n} from 'react-admin';\nimport { Box, Typography, Divider, Link } from '@material-ui/core';\n\nimport { Product, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ProductAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: Product;\n    link?: string;\n}) =>{\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/products\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Product;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Product info</Typography>\n            <Divider />\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Company: \n                <ReferenceField\n                    record={record}\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Family: \n                <ReferenceField\n                    record={record}\n                    source=\"family_id\"\n                    reference=\"productFamilies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1}>\n                Code: <TextField source=\"code\" record={record} />\n            </Box>\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n\n            <Box mt={3}>\n                <Typography variant=\"subtitle2\">Description</Typography>\n                <Divider />\n\n                <Box mt={1}>\n                    <TextField source=\"description\" />\n                </Box>\n\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    EditButton,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    Datagrid,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { NotesIterator } from '../notes';\n\n\nimport { ProductImageField } from './ProductImageField';\nimport { ProductAside } from './ProductAside';\nimport { Product, ProductPrperty } from '../types';\nimport { LogoField } from '../companies/LogoField';\nimport { CompanyGridList } from '../companies/CompanyGridList';\nimport { CompanyCard } from '../companies/CompanyCard';\n\nexport const ProductShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductShowContent />\n    </ShowBase>\n);\n\nconst ProductShowContent = () => {\n    const { record, loaded } = useShowContext<Product>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <ProductImageField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.model}</Typography>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes > 1\n                                        ? `${record.nb_notes} Notes`\n                                        : `${record.nb_notes} Note`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_properties > 1\n                                        ? `${record.nb_properties} Properties`\n                                        : `${record.nb_properties} Property`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_used_by > 1\n                                        ? `Used by ${record.nb_used_by} Companies`\n                                        : `Used by ${record.nb_used_by} Company`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"productNotes\"\n                                target=\"product_id\"\n                            >\n                                 <NotesIterator reference=\"products\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField reference=\"productProperties\" target=\"product_id\" addLabel={false}>\n                                <Datagrid>\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                    <TextField source=\"property_value\" />\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"unit\" />\n                                    </ReferenceField>\n                                    <TextField source=\"condition\" />\n    \n                                </Datagrid>\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Box mt={1}>\n                            <ReferenceArrayField\n                                reference=\"companies\"\n                                source=\"used_by_companies\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <CompanyGridList />\n                            </ReferenceArrayField>\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ProductPrpertiesIterator = () => {\n    const { data, ids, loaded } = useListContext<ProductPrperty>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const productProperty = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/productProperties/${id}/show`}\n                        >\n                            {/* <ListItemAvatar>\n                                <Avatar record={productProperty} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${productProperty.first_name} ${productProperty.last_name}`}\n                                secondary={\n                                    <>\n                                        {productProperty.title}{' '}\n                                        {productProperty.nb_notes &&\n                                        `- ${productProperty.nb_notes} notes `}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(productProperty.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={productProperty.status} />\n                                </Typography>\n                            </ListItemSecondaryAction> */}\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                {/* <CreateRelatedProductPrpertyButton record={record} /> */}\n            </Box>\n        </Box>\n    );\n};\n\n// const CreateRelatedProductPrpertyButton = ({ record }: any) => (\n//     <Button\n//         component={RouterLink}\n//         to={{\n//             pathname: '/productProperties/create',\n//             state: { record: { product_id: record.id } },\n//         }}\n//         color=\"primary\"\n//         variant=\"contained\"\n//         size=\"small\"\n//         startIcon={<PersonAddIcon />}\n//     >\n//         Add property\n//     </Button>\n// );\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    TabbedForm,\n    FormTab,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    required,\n    ArrayInput,\n    SimpleFormIterator,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductAside } from './ProductAside';\nimport { ProductImageField } from './ProductImageField';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const ProductEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit \n            {...props} \n            aside={<ProductAside link=\"show\" />} \n            actions={false}\n        >\n            <TabbedForm\n                redirect=\"show\"\n            >\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <ProductImageField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductList } from './ProductList';\nimport { ProductCreate } from './ProductCreate';\nimport { ProductShow } from './ProductShow';\nimport { ProductEdit } from './ProductEdit';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    show: ProductShow,\n    icon: FiberManualRecordIcon,\n};\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { ProductFamily } from '../types';\n\nexport const Avatar = ({ record }: { record: ProductFamily }) => (\n    <MuiAvatar src={record.image}>\n        {record.name}\n    </MuiAvatar>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const ProductFamilyListFilter = () => {\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n        </CollapsibleListFilter>\n    );\n};\n","export const categories = [\n    'Safety laser scanners', \n    '2D LiDAR sensors', \n    '3D LiDAR sensors', \n    'Cleaning Robot',\n].map(category => ({ id: category, name: category }));","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    SelectField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ProductFamilyListFilter } from './ProductFamilyListFilter';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst ProductFamilyListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        ProductFamily\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const record = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/productFamilies/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={record} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${record.name}`}\n                            secondary={\n                                <>\n                                    {record.name} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst ProductFamilyListActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/productFamilies\"\n                variant=\"contained\"\n                label=\"Add New\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ProductFamilyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ProductFamilyListActions />}\n            aside={<ProductFamilyListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{  }}\n            // sort={{  }}\n        >\n            <ProductFamilyListContent />\n        </RaList>\n    ) : null;\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport { \n    Card, \n    CardContent, \n    Divider, \n    Box, \n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n } from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ProductFamilyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n\n    const contactDefaultValue = () => ({ });\n    const transform = (data: ProductFamily) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <SelectInput\n                    source=\"category\"\n                    choices={categories}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"name\" fullWidth />\n                <TextInput source=\"website\" fullWidth />\n                <TextInput source=\"image\" fullWidth />\n                <TextInput \n                    source=\"description\"\n                    multiline\n                    rows={3} \n                    fullWidth \n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <CategoryIcon />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    SelectField,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider,\n    Link,\n } from '@material-ui/core';\n\nimport { ProductFamily, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { categories } from './categories';\n\nexport const ProductFamilyAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: ProductFamily;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/productFamilies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: ProductFamily;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Family info</Typography>\n            <Divider />\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                <Typography>Category:</Typography>\n                <SelectField\n                    source=\"category\"\n                    choices={categories}\n                />\n            </Box>\n\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ProductFamilyEditContent = () => {\n    const { record, loaded, save } = useEditContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex={1}>\n                                            <SelectInput\n                                                source=\"category\"\n                                                choices={categories}\n                                            />\n                                            <TextInput source=\"name\" fullWidth />\n                                            <TextInput source=\"website\" fullWidth />\n                                            <TextInput source=\"image\" fullWidth />\n                                            <TextInput \n                                                source=\"description\"\n                                                multiline\n                                                rows={3} \n                                                fullWidth \n                                            />\n                                        </Box>\n                                        \n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ProductFamilyAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ProductFamilyEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ProductFamilyEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n    SelectField,\n    Pagination,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { ProductFamily } from '../types';\nimport { ProductGridList } from '../products/ProductGridList';\nimport { categories } from './categories';\n\nexport const ProductFamilyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductFamilyShowContent />\n    </ShowBase>\n);\n\nconst ProductFamilyShowContent = () => {\n    const { record, loaded } = useShowContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {record.title} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box mt={2} p={1}>\n                            <ReferenceManyField\n                                reference=\"products\"\n                                target=\"family_id\"\n                                label=\"Products\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <ProductGridList />\n                            </ReferenceManyField>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductFamilyAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductFamilyList } from './ProductFamilyList';\nimport { ProductFamilyCreate } from './ProductFamilyCreate';\nimport { ProductFamilyEdit } from './ProductFamilyEdit';\nimport { ProductFamilyShow } from './ProductFamilyShow';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nexport default {\n    list: ProductFamilyList,\n    create: ProductFamilyCreate,\n    edit: ProductFamilyEdit,\n    show: ProductFamilyShow,\n    icon: CategoryIcon,\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport {\n    useTranslate,\n    DashboardMenuItem,\n    MenuItemLink,\n    MenuProps,\n    ReduxState,\n} from 'react-admin';\n\n\nimport SubMenu from './SubMenu';\nimport { AppState } from '../types';\n\nimport companies from '../companies';\nimport contacts from '../contacts';\nimport tasks from '../tasks';\nimport deals from '../deals';\nimport products from '../products';\nimport productFamilies from '../productFamilies';\n\n\n\ntype MenuName = 'menuCrm' | 'menuProduct' | 'menuCustomers';\n\nconst Menu = ({ dense = false }: MenuProps) => {\n    const [state, setState] = useState({\n        menuCrm: true,\n        menuProduct: true,\n        menuCustomers: true,\n    });\n    const translate = useTranslate();\n    const open = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen);\n    useSelector((state: AppState) => state.theme); // force rerender on theme change\n    const classes = useStyles();\n\n    const handleToggle = (menu: MenuName) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div\n            className={classnames(classes.root, {\n                [classes.open]: open,\n                [classes.closed]: !open,\n            })}\n        >\n            {' '}\n            <DashboardMenuItem />\n            <SubMenu\n                handleToggle={() => handleToggle('menuCrm')}\n                isOpen={state.menuCrm}\n                name=\"CRM\"\n                icon={<companies.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/companies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Companies\"\n                    leftIcon={<companies.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/contacts',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Contacts\"\n                    leftIcon={<contacts.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/deals',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Deals\"\n                    leftIcon={<deals.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/tasks',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Taks\"\n                    leftIcon={<tasks.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuProduct')}\n                isOpen={state.menuProduct}\n                name=\"Products\"\n                icon={<products.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/products',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Products\"\n                    leftIcon={<products.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/productFamilies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Families\"\n                    leftIcon={<productFamilies.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    open: {\n        width: 200,\n    },\n    closed: {\n        width: 55,\n    },\n}));\n\nexport default Menu;\n","export const darkTheme = {\n    palette: {\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#FBBA72',\n        },\n        type: 'dark' as 'dark', // Switching the dark mode on is a single property value change.\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#ffffffb3',\n                backgroundColor: '#616161e6',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        primary: {\n            main: '#4f3cc9',\n        },\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n        background: {\n            default: '#fcfcfe',\n        },\n        type: 'light' as 'light',\n    },\n    shape: {\n        borderRadius: 10,\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        RaMenuItemLink: {\n            root: {\n                borderLeft: '3px solid #fff',\n            },\n            active: {\n                borderLeft: '3px solid #4f3cc9',\n            },\n        },\n        MuiPaper: {\n            elevation1: {\n                boxShadow: 'none',\n            },\n            root: {\n                border: '1px solid #e0e0e3',\n                backgroundClip: 'padding-box',\n            },\n        },\n        MuiButton: {\n            contained: {\n                backgroundColor: '#fff',\n                color: '#4f3cc9',\n                boxShadow: 'none',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#808080',\n                backgroundColor: '#fff',\n            },\n        },\n        MuiLinearProgress: {\n            colorPrimary: {\n                backgroundColor: '#f5f5f5',\n            },\n            barColorPrimary: {\n                backgroundColor: '#d7d7d7',\n            },\n        },\n        MuiFilledInput: {\n            root: {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                '&$disabled': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n            },\n        },\n        MuiSnackbarContent: {\n            root: {\n                border: 'none',\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Layout, LayoutProps } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme } from './themes';\nimport { AppState } from '../types';\n\nexport default (props: LayoutProps) => {\n    const theme = useSelector((state: AppState) =>\n        state.theme === 'dark' ? darkTheme : lightTheme\n    );\n    return <Layout {...props} appBar={AppBar} menu={Menu} theme={theme} />;\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, withTypes } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Link,\n    Typography,\n} from '@material-ui/core';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Notification, useTranslate, useLogin, useNotify } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        // marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst renderInput = ({\n    meta: { touched, error } = { touched: false, error: undefined },\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    username?: string;\n    password?: string;\n}\n\nconst { Form } = withTypes<FormValues>();\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const translate = useTranslate();\n    const classes = useStyles();\n    const notify = useNotify();\n    const login = useLogin();\n    const location = useLocation<{ nextPathname: string } | null>();\n\n    const handleSubmit = async (auth: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await login(auth, location.state ? location.state.nextPathname : '/');\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    const validate = ({\n        username,\n        password,\n    }: FormValues) => {\n        const errors = { \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined,\n        };\n        return errors;\n    };\n\n    return (\n        <Form\n            onSubmit={handleSubmit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className={classes.main}>\n                        <Card className={classes.card}>\n                            <div className={classes.avatar}>\n                                <Avatar className={classes.icon}>\n                                    <LockIcon />\n                                </Avatar>\n                            </div>\n                            <div className={classes.hint}>\n                                Wecome to Assistor.\n                            </div>\n                            <div className={classes.form}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        name=\"username\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                    />\n                                </div>\n                                <div className={classes.input}>\n                                    <Field\n                                        name=\"password\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </div>\n                            <CardActions className={classes.actions}>\n                                <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    fullWidth\n                                >\n                                    {loading && (\n                                        <CircularProgress\n                                            size={25}\n                                            thickness={2}\n                                        />\n                                    )}\n                                    {translate('ra.auth.sign_in')}\n                                </Button>\n                                <Typography variant=\"body2\">Or</Typography>\n                                <Link\n                                    color=\"textSecondary\"\n                                    component={RouterLink}\n                                    to=\"/register\"\n                                    variant=\"body1\"\n                                >\n                                    Register\n                                </Link>\n                            </CardActions>\n                        </Card>\n                        <Notification />\n                    </div>\n                </form>\n            )}\n        />\n    );\n};\n\nLogin.propTypes = {\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n};\n\n// We need to put the ThemeProvider decoration in another component\n// Because otherwise the useStyles() hook used in Login won't get\n// the right theme\nconst LoginWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Login {...props} />\n    </ThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Card, Box, Link } from '@material-ui/core';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport { useGetList, SimpleList, useGetIdentity } from 'react-admin';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Contact } from '../types';\n\nexport const HotContacts = () => {\n    const { identity } = useGetIdentity();\n    const {\n        data: contactData,\n        ids: contactIds,\n        total: contactTotal,\n        loaded: contactsLoaded,\n    } = useGetList<Contact>(\n        'contacts',\n        { page: 1, perPage: 10 },\n        { field: 'last_seen', order: 'DESC' },\n        { status: 'hot', sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <ContactsIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Link\n                    underline=\"none\"\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                    component={RouterLink}\n                    to=\"/contacts\"\n                >\n                    Hot contacts\n                </Link>\n            </Box>\n            <Card>\n                <SimpleList<Contact>\n                    basePath=\"/contacts\"\n                    linkType=\"show\"\n                    ids={contactIds}\n                    data={contactData}\n                    total={contactTotal}\n                    loaded={contactsLoaded}\n                    primaryText={contact =>\n                        `${contact.first_name} ${contact.last_name}`\n                    }\n                    secondaryText={contact =>\n                        formatDistance(\n                            new Date(contact.last_seen),\n                            new Date(),\n                            {\n                                addSuffix: true,\n                            }\n                        )\n                    }\n                    leftAvatar={contact => <Avatar record={contact} />}\n                />\n            </Card>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Card, CardContent, Typography, Box } from '@material-ui/core';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useGetList,\n    useGetIdentity,\n    ReferenceField,\n    TextField,\n    FunctionField,\n} from 'react-admin';\nimport { formatDistance } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n\nimport { Contact as ContactType } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    note: {\n        marginBottom: theme.spacing(2),\n    },\n    noteText: {\n        backgroundColor: theme.palette.grey[200],\n        padding: theme.spacing(1),\n        borderRadius: 10,\n    },\n    noteTextText: {\n        display: '-webkit-box',\n        '-webkit-line-clamp': 3,\n        '-webkit-box-orient': 'vertical',\n        overflow: 'hidden',\n    },\n}));\n\nexport const LatestNotes = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const {\n        data: contactNotesData,\n        ids: contactNotesIds,\n        loaded: contactNotesLoaded,\n    } = useGetList(\n        'contactNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: dealNotesData,\n        ids: dealNotesIds,\n        loaded: dealNotesLoaded,\n    } = useGetList(\n        'dealNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: companyNotesData,\n        ids: companyNotesIds,\n        loaded: companyNotesLoaded,\n    } = useGetList(\n        'companyNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    if (!contactNotesLoaded || !dealNotesLoaded || !companyNotesLoaded) {\n        return null;\n    }\n    // TypeScript guards\n    if (\n        !contactNotesIds ||\n        !contactNotesData ||\n        !dealNotesIds ||\n        !dealNotesData ||\n        !companyNotesIds ||\n        !companyNotesData\n    ) {\n        return null;\n    }\n\n    const allNotes = ([] as any[])\n        .concat(\n            contactNotesIds.map(id => ({\n                ...contactNotesData[id],\n                type: 'contactNote',\n            })),\n            dealNotesIds.map(id => ({\n                ...dealNotesData[id], \n                type: 'dealNote' \n            })),\n            companyNotesIds.map(id => ({\n                ...companyNotesData[id], \n                type: 'companyNote' \n            })),\n        )\n        .sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf())\n        .slice(0, 5);\n\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <NoteIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    My Latest Notes\n                </Typography>\n            </Box>\n            <Card>\n                <CardContent>\n                    {allNotes.map(note => (\n                        <div\n                            id={`${note.type}_${note.id}`}\n                            key={`${note.type}_${note.id}`}\n                            className={classes.note}\n                        >\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                on{' '}\n                                <NoteSource note={note} />\n                                , added{' '}\n                                {formatDistance(\n                                    new Date(note.date),\n                                    new Date(),\n                                    {\n                                        addSuffix: true,\n                                    }\n                                )}\n                            </Typography>\n                            <div className={classes.noteText}>\n                                <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                            </div>\n                        </div>\n                    ))}\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nconst NoteSource = ({ note }: any) => {\n    if (note.type === 'dealNote'){\n        return <Deal note={note} />;\n    }\n    else if (note.type === 'contactNote') {\n        return <Contact note={note} />;\n    }\n    else if (note.type === 'companyNote') {\n        return <Company note={note} />;\n    }\n    return null;\n};\n\nconst Deal = ({ note }: any) => (\n    <>\n        Deal{' '}\n        <ReferenceField\n            record={note}\n            source=\"deal_id\"\n            reference=\"deals\"\n            basePath=\"/deals\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n\nconst Contact = ({ note }: any) => (\n    <>\n        Contact{' '}\n        <ReferenceField\n            record={note}\n            source=\"contact_id\"\n            reference=\"contacts\"\n            basePath=\"/contacts\"\n            link=\"show\"\n        >\n            <FunctionField<ContactType>\n                variant=\"body1\"\n                render={contact =>\n                    contact ? `${contact.first_name} ${contact.last_name}` : ''\n                }\n            />\n        </ReferenceField>\n    </>\n);\n\nconst Company = ({ note }: any) => (\n    <>\n        Company{' '}\n        <ReferenceField\n            record={note}\n            source=\"company_id\"\n            reference=\"companies\"\n            basePath=\"/companies\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n","import React, { useState, memo } from \"react\";\nimport { \n    ComposableMap, \n    Geographies, \n    Geography, \n    ZoomableGroup,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { geoCentroid } from \"d3-geo\";\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { Country } from '../types';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst Map = memo(({setTooltipContent}: any) => {\n    const { data, ids, loaded } = useGetList<Country>(\n        'countries',\n        { perPage: 1000, page: 1 }\n    );\n    if (!loaded) return null;\n\n    const colorScale = scaleQuantile<string>()\n        .domain([0, max(ids.map(id => data[id].nb_companies))])\n        .range([\n            \"#e1f5fe\",\n            \"#b3e5fc\",\n            \"#81d4fa\",\n            \"#4fc3f7\",\n            \"#29b6f6\",\n            \"#03a9f4\",\n            \"#039be5\",\n            \"#0288d1\",\n            \"#0277bd\"\n        ]);\n\n    return (\n        <ComposableMap\n            data-tip=\"\"\n            projection=\"geoAzimuthalEqualArea\"\n            projectionConfig={{\n                rotate: [-25.0, -50.0, 0],\n                scale: 750\n            }}\n        >\n            <ZoomableGroup\n                center={[0, 0]}\n                zoom={1}\n            >\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) => (\n                        <>\n                            {geographies\n                            .map(geo => {\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <Geography \n                                            key={geo.rsmKey} \n                                            geography={geo} \n                                            fill={cur ? colorScale(data[cur].nb_companies) : \"#D6D6DA\"}\n                                            stroke=\"#EAEAEC\"\n                                            onMouseEnter={() => {\n                                                const { NAME, POP_EST } = geo.properties;\n                                                const nb_companies = cur ? data[cur].nb_companies : 0;\n                                                setTooltipContent(`${NAME} - ${nb_companies}`);\n                                            }}\n                                            onMouseLeave={() => {\n                                                setTooltipContent(\"\");\n                                            }}\n                                        />\n                                );\n                            })}\n                            {/* {geographies.map(geo => {\n                                const centroid = geoCentroid(geo);\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <g key={geo.rsmKey + \"-name\"}>\n                                        {cur &&\n                                            <Marker coordinates={centroid}>\n                                                <text y=\"2\" fontSize={9} textAnchor=\"middle\">\n                                                {data[cur].nicename}\n                                                </text>\n                                            </Marker>\n                                        }\n                                    </g>\n                                );\n                            })} */}\n                        </>\n                    )}\n                </Geographies>\n            </ZoomableGroup>\n        </ComposableMap>\n    );\n});\n\nexport const CompaniesMap = () => {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <div>\n            <Map setTooltipContent={setContent} />\n            <ReactTooltip>{content}</ReactTooltip>\n        </div>\n    );\n}","import * as React from 'react';\nimport { Box, Grid } from '@material-ui/core';\n\nimport { Welcome } from './Welcome';\nimport { DealsChart } from './DealsChart';\nimport { HotContacts } from './HotContacts';\nimport { LatestNotes } from './LatestNotes';\nimport { DealsPipeline } from './DealsPipeline';\nimport { CompaniesMap } from './CompaniesMap';\n\nexport const Dashboard = () => {\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={8}>\n                    <CompaniesMap />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <HotContacts />\n                </Grid>\n                <Grid item xs={12}>\n                    <LatestNotes />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\nimport {\n    Button,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Grid,\n    CardContent,\n    Typography,\n    Link,\n    Container,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    useTranslate, \n    useNotify, \n    useLogin, \n    useSafeSetState, \n    useRedirect,\n    useAuthProvider,\n} from 'react-admin';\nimport axios from 'axios';\n\n\nconst baseURL = \"/auth\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    button: {\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst Input = ({\n    meta: { touched, error }, // eslint-disable-line react/prop-types\n    input: inputProps, // eslint-disable-line react/prop-types\n    ...props\n}: {\n    meta: any;\n    input: any;\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n    confirm: string;\n}\n\nconst RegisterForm = ({ redirectTo }:\n    {redirectTo?: string | undefined;}) => {\n    const authProvider = useAuthProvider();\n    const [loading, setLoading] = useSafeSetState(false);\n    const translate = useTranslate();\n    const login = useLogin();\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const validate = ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password, \n        confirm \n    }: FormValues) => {\n        const errors = { \n            first_name: !first_name ? translate('ra.validation.required') : undefined, \n            last_name: !last_name ? translate('ra.validation.required') : undefined, \n            email: !email ? translate('ra.validation.required') : undefined, \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined, \n            confirm: password !== confirm ? 'Confirmation should match password': undefined\n        };\n        return errors;\n    };\n\n    interface ResponseType {\n        message: string;\n    }\n\n    const submit = async ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password,\n    }: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await authProvider.register({ \n                    first_name,\n                    last_name,\n                    email,\n                    username, \n                    password\n                });\n        \n            setLoading(false)\n            login({ username, password }, redirectTo)\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    return (\n        <Form\n            onSubmit={submit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <CardContent>\n                        <Container maxWidth=\"xs\">\n                        <Grid container spacing={2} >\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"first_name\"\n                                        name=\"first_name\"\n                                        component={Input}\n                                        label=\"First Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"last_name\"\n                                        name=\"last_name\"\n                                        component={Input}\n                                        label=\"Last Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"email\"\n                                        name=\"email\"\n                                        component={Input}\n                                        label=\"Email Address\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"username\"\n                                        name=\"username\"\n                                        component={Input}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"password\"\n                                        name=\"password\"\n                                        component={Input}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"confirm\"\n                                        name=\"confirm\"\n                                        component={Input}\n                                        label=\"Confirm Password\"\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                    </CardContent>\n                    <CardActions className={classes.actions}>\n                        <Button\n                            variant=\"contained\"\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.button}\n                            fullWidth\n                        >\n                            {loading && (\n                                <CircularProgress\n                                    size={25}\n                                    thickness={2}\n                                />\n                            )}\n                            Register\n                        </Button>\n                        <Typography variant=\"body2\">Or</Typography>\n                        <Link\n                            color=\"textSecondary\"\n                            component={RouterLink}\n                            to=\"/login\"\n                            variant=\"body1\"\n                        >\n                            Login\n                        </Link>\n                    </CardActions>\n                </form>\n            )}\n        />\n    );\n};\n\nRegisterForm.propTypes = {\n    redirectTo: PropTypes.string,\n};\n\nexport default RegisterForm;","import React, { ReactNode, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n    Card, \n    CardContent, \n    Theme, \n    Avatar,\n    Grid,\n    Link,\n} from '@material-ui/core';\nimport {\n    Notification,\n} from 'react-admin';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { lightTheme } from '../layout/themes';\n\nimport RegisterForm from './RegisterForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n        main: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '100vh',\n            // height: '1px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundImage:\n                'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        },\n        card: {\n            minWidth: 300,\n            // marginTop: '6em',\n        },\n        avatar: {\n            margin: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n        },\n        icon: {\n            backgroundColor: theme.palette.secondary.main,\n        },\n        hint: {\n            marginTop: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n            color: theme.palette.grey[500],\n        },\n    }),\n    { name: 'Register' }\n);\n\nconst Register = () => {\n    const classes = useStyles();\n    return (\n            <div className={classes.main}>\n                <Card className={classes.card}>\n                    <div className={classes.avatar}>\n                        <Avatar className={classes.icon}>\n                            <ExitToAppIcon />\n                        </Avatar>\n                    </div>\n                    <div className={classes.hint}>\n                                Register to Assistor.\n                            </div>\n                    <RegisterForm />\n                </Card>\n                <Notification />\n            </div>\n    );\n}\n\nconst RegisterWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Register {...props} />\n    </ThemeProvider>\n);\n\nexport default RegisterWithTheme;","import { ThemeName } from '../types';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeTheme } from './actions';\nimport { AppState } from '../types';\n\nconst useStyles = makeStyles({\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n});\n\nconst Configuration = () => {\n    const translate = useTranslate();\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const theme = useSelector((state: AppState) => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <Card>\n            <Title title={translate('pos.configuration')} />\n            <CardContent>\n                <div className={classes.label}>\n                    {translate('pos.theme.name')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'light' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('light'))}\n                >\n                    {translate('pos.theme.light')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'dark' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('dark'))}\n                >\n                    {translate('pos.theme.dark')}\n                </Button>\n            </CardContent>\n            <CardContent>\n                <div className={classes.label}>{translate('pos.language')}</div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'en' ? 'primary' : 'default'}\n                    onClick={() => setLocale('en')}\n                >\n                    en\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'fr' ? 'primary' : 'default'}\n                    onClick={() => setLocale('fr')}\n                >\n                    fr\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'ja' ? 'primary' : 'default'}\n                    onClick={() => setLocale('ja')}\n                >\n                    ja\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Configuration;","import * as React from \"react\";\nimport { RouteWithoutLayout } from 'react-admin';\nimport { Route } from 'react-router-dom';\nimport Register from './auth/RegisterPage';\nimport Configuration from './configuration/Configuration';\n\nexport const customRoutes = [\n    <RouteWithoutLayout exact path=\"/register\" component={Register} />,\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n];","import { TranslationMessages } from 'react-admin';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n\n};\n\nexport default customEnglishMessages;","import * as React from 'react';\nimport { Admin, Resource, ListGuesser, EditGuesser, ShowGuesser, defaultTheme } from 'react-admin';\nimport {\n    unstable_createMuiStrictModeTheme,\n    createTheme,\n} from '@material-ui/core/styles';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\nimport { dataProvider } from './dataProvider';\nimport { authProvider } from './authProvider';\nimport { Login, Layout } from './layout';\nimport contacts from './contacts';\nimport companies from './companies';\nimport products from './products';\nimport tasks from './tasks';\nimport productfamiliess from './productFamilies';\nimport deals from './deals';\nimport { Dashboard } from './dashboard/Dashboard';\nimport { customRoutes } from './customRoutes';\n// import Login from './Login'\nimport productFamilies from './productFamilies';\nimport englishMessages from './i18n/en';\n\n// FIXME MUI bug https://github.com/mui-org/material-ui/issues/13394\nconst theme =\n    process.env.NODE_ENV !== 'production'\n        ? unstable_createMuiStrictModeTheme(defaultTheme)\n        : createTheme(defaultTheme);\n\nconst i18nProvider = polyglotI18nProvider(locale => {\n    if (locale === 'fr') {\n        return import('./i18n/fr').then(messages => messages.default);\n    }\n    \n    if (locale === 'ja') {\n        return import('./i18n/ja').then(messages => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n}, 'en');\n\nconst App = () => (\n    <Admin\n        customRoutes={customRoutes}\n        dataProvider={dataProvider}\n        authProvider={authProvider}\n        loginPage={Login}\n        layout={Layout}\n        dashboard={Dashboard}\n        theme={theme}\n        i18nProvider={i18nProvider}\n    >\n        <Resource name=\"deals\" {...deals} />\n        <Resource name=\"contacts\" {...contacts} />\n        <Resource name=\"companies\" {...companies} />\n        <Resource name=\"products\" {...products} />\n        <Resource name=\"productProperties\" />\n        <Resource name=\"propertyTypes\" />\n        <Resource name=\"contactNotes\" />\n        <Resource name=\"companyNotes\" />\n        <Resource name=\"productNotes\" />\n        <Resource name=\"dealNotes\" />\n        <Resource name=\"productFamilies\" {...productFamilies} />\n        <Resource name=\"tasks\" {...tasks} />\n        <Resource name=\"sales\" list={ListGuesser} />\n        <Resource name=\"tags\" list={ListGuesser} />\n        <Resource name=\"countries\" list={ListGuesser} />\n    </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}