{"version":3,"sources":["auth.ts","authProvider.ts","dataProvider.ts","layout/Logo.tsx","notifications/NotificationButton.tsx","layout/GlobalSearch.tsx","layout/SwitchLanguage.tsx","layout/AppBar.tsx","layout/SubMenu.tsx","companies/sectors.ts","companies/CompanyAvatar.tsx","companies/CountryField.tsx","companies/CompanyCard.tsx","companies/CompanyGridList.tsx","companies/relations.ts","tags/TagChip.tsx","components/CollapsibleListFilter.tsx","companies/CompanyListFilter.tsx","companies/SelectAllButton.tsx","companies/CompanyList.tsx","companies/sizes.ts","companies/DistributorInput.tsx","companies/CompanyCreate.tsx","contacts/Avatar.tsx","misc/Status.tsx","tags/TagsList.tsx","companies/LogoField.tsx","tags/colors.ts","components/RoundButton.tsx","tags/TagsListEdit.tsx","components/CollapsibleAside.tsx","products/ProductsListEdit.tsx","companies/CompanyAside.tsx","deals/stages.ts","notes/StatusSelector.tsx","notes/NewNote.tsx","notes/Note.tsx","notes/NotesIterator.tsx","products/ProductAvatar.tsx","products/ProductCard.tsx","products/ProductGridList.tsx","companies/CompanyShow.tsx","companies/CompanyEdit.tsx","companies/index.ts","contacts/ContactAside.tsx","contacts/ContactShow.tsx","contacts/ContactListFilter.tsx","contacts/ContactList.tsx","contacts/ContactEdit.tsx","contacts/ContactCreate.tsx","contacts/index.tsx","tasks/TaskAside.tsx","tasks/status.ts","tasks/TaskChip.tsx","tasks/TaskShow.tsx","tasks/TaskStatus.tsx","tasks/TaskListFilter.tsx","tasks/MarkDoneButton.tsx","tasks/TaskList.tsx","tasks/TaskEdit.tsx","tasks/TaskCreate.tsx","tasks/index.ts","deals/DealCard.tsx","deals/DealColumn.tsx","deals/DealListContent.tsx","deals/types.ts","deals/DealCreate.tsx","deals/ContactList.tsx","deals/DealShow.tsx","deals/OnlyMineInput.tsx","deals/DealList.tsx","deals/index.ts","productFamilies/categories.ts","products/ProductListFilter.tsx","products/ProductList.tsx","products/CreatePropertyType.tsx","products/PropertyFormIterator.tsx","productFamilies/CreateProductFamily.tsx","products/ProductCreate.tsx","products/ProductImageField.tsx","products/ProductAside.tsx","products/ProductShow.tsx","products/ProductEdit.tsx","products/index.ts","productFamilies/Avatar.tsx","productFamilies/ProductFamilyListFilter.tsx","productFamilies/ProductFamilyList.tsx","productFamilies/ProductFamilyCreate.tsx","productFamilies/ProductFamilyAside.tsx","productFamilies/ProductFamilyEdit.tsx","productFamilies/ProductFamilyShow.tsx","productFamilies/index.ts","layout/Menu.tsx","layout/themes.ts","notifications/NotificationContainer.tsx","layout/Layout.tsx","layout/Login.tsx","dashboard/HotContacts.tsx","dashboard/LatestNotes.tsx","dashboard/CompaniesMap.tsx","dashboard/Dashboard.tsx","auth/RegisterForm.tsx","auth/RegisterPage.tsx","configuration/actions.ts","configuration/Configuration.tsx","customRoutes.tsx","themeReducer.ts","i18n/en.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["CREDENTIALS_LOCAL_STORAGE_ITEM","setCredentials","credentials","localStorage","setItem","JSON","stringify","getCredentials","raw","getItem","parse","isTokenValid","access_token","currentDate","Date","decodedToken","decodeJwt","exp","getTime","baseURL","refreshToken","a","token","refresh_token","config","headers","Authorization","axios","post","undefined","response","data","login","username","password","permissions","Promise","resolve","reject","message","msg","status","logout","get","removeItem","register","first_name","last_name","email","getIdentity","id","fullName","avatar","checkError","authProvider","checkAuth","getPermissions","refreshTokenIfInvalid","getList","resource","params","getOne","getMany","getManyReference","create","update","put","updateMany","deleteOne","delete","deleteMany","dataProvider","useStyles","makeStyles","theme","root","display","breakpoints","down","spacing","logoIcon","color","palette","secondary","light","logoText","primary","Logo","classes","className","Typography","variant","NotificationButton","props","redirect","useRedirect","identity","useGetIdentity","React","anchorEl","setAnchorEl","now","useGetList","page","perPage","field","order","status_dif","sales_id","ids","hasNotification","loaded","length","IconButton","onClick","event","currentTarget","Badge","badgeContent","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","task","taskOverdue","due_date","toISOString","MenuItem","handleNotificationClick","ListItemAvatar","style","backgroundColor","red","ListItemText","text","formatDistance","createStyles","search","position","borderRadius","shape","alpha","common","white","marginLeft","width","up","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","GlobalSearch","InputBase","placeholder","input","inputProps","menuItem","icon","minWidth","SwitchLanguage","forwardRef","ref","locale","useLocale","setLocale","useSetLocale","e","ListItemIcon","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","useTranslate","MenuItemLink","to","primaryText","leftIcon","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","AppBar","elevation","userMenu","sidebarIsClosed","SubMenu","handleToggle","isOpen","name","children","dense","translate","useSelector","state","admin","ui","sidebarOpen","header","button","Tooltip","placement","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","sectors","sector","img","objectFit","small","large","CompanyAvatar","record","size","logo","src","process","alt","imgProps","clsx","image","sizeInPixel","medium","CountryField","source","ImageField","paper","flexDirection","textAlign","marginTop","stats","singleStat","statIcon","marginRight","checkbox","top","right","identifier","lrft","CompanyCard","useState","setElevation","useListContext","onToggleItem","selectedIds","Link","linkToRecord","underline","onMouseEnter","onMouseLeave","Paper","Checkbox","edge","checked","includes","tabIndex","disableRipple","stopPropagation","Box","ReferenceField","reference","link","relation","Chip","label","SelectField","choices","marginBottom","nb_contacts","nb_notes","gridList","flexWrap","gap","grey","LoadingGridList","nbChildren","fn","key","Array","from","_","LoadedGridList","CompanyGridList","relations","TagChip","border","cursor","sideBig","sideSmall","container","drawerContent","maxWidth","CollapsibleListFilter","setOpen","childrenWithProps","child","Drawer","anchor","countryList","maxHeight","tagList","CompanyListFilter","tags","tagIds","countries","countryIds","FilterLiveSearch","FilterList","FilterListItem","value","nicename","country_id","SelectAllButton","onSelect","Button","toolbar","createButton","importOptions","parseConfig","dynamicTyping","CompanyListActions","TopToolbar","SortButton","fields","ExportButton","CreateButton","basePath","sizes","DistributorInput","AutocompleteInput","optionText","country_iso","allowEmpty","resettable","inline","CustomLayout","CardContent","paddingTop","ml","CustomDivider","mb","Divider","Avatar","charAt","getColorFromStatus","Status","bgcolor","ColoredChipField","ChipField","TagsList","ReferenceArrayField","SingleFieldList","linkType","LogoField","colors","margin","RoundButton","handleClick","selected","type","TagsListEdit","newTagName","setNewTagName","newTagColor","setNewTagColor","version","setVersion","disabled","setDisabled","allTags","useGetMany","enabled","useUpdate","useCreate","unselectedTagIds","filter","handleAddTag","handleOpenCreateDialog","tag","mt","onDelete","tagId","handleDeleteTag","Dialog","onSubmit","preventDefault","onSuccess","v","DialogTitle","DialogContent","autoFocus","fullWidth","onChange","target","DialogActions","CollapsibleAside","EditButton","ShowButton","ProductsListEdit","refresh","useRefresh","use_products","products","handleClose","product","productId","handleDeleteProduct","model","Popover","toString","values","SimpleForm","ReferenceArrayInput","AutocompleteArrayInput","CompanyAside","AsideContent","href","website","rel","linkedIn","TextField","distributor_id","phone_number","DateField","options","year","month","day","FunctionField","render","stages","stageNames","opportunity","won","lost","delayed","stageChoices","StatusSelector","setStatus","select","buttonSwitcher","previewConatiner","previewRaw","previewMarkdown","paddingRight","borderColor","main","preview","NewNote","showStatus","setPreview","useRecordContext","useResourceContext","setText","getCurrentDate","date","setDate","loading","notify","useNotify","foreignKeyMapping","last_seen","multiline","remarkPlugins","remarkGfm","setMinutes","getMinutes","getTimezoneOffset","slice","contacts","deals","companies","metadata","textarea","paddingBottom","lineHeight","buttons","cancel","content","paragraph","fontFamily","typography","fontSize","body1","visibility","Note","note","isLast","isHover","setHover","isEditing","setEditing","noteText","setNoteText","useDelete","mutationMode","handleDelete","showTime","locales","dateStyle","timeStyle","FilledInput","NotesIterator","index","ProductAvatar","family","left","hidden","ProductCard","classNames","nb_properties","Skeleton","animation","ProductGridList","CompanyShowContent","useShowContext","setValue","Card","gridGap","Tabs","indicatorColor","textColor","newValue","scrollButtons","Tab","nb_deals","nb_products","ReferenceManyField","sort","pagination","Pagination","rowsPerPageOptions","TabPanel","other","role","ContactsIterator","contact","ListItem","RouterLink","ListItemSecondaryAction","CreateRelatedContactButton","pathname","company_id","startIcon","CreateRelatedProductButton","DealsIterator","deal","stage","amount","toLocaleString","notation","currency","currencyDisplay","minimumSignificantDigits","updated_at","list","actions","aside","filterDefaultValues","Create","initialValues","TextInput","validate","required","SelectInput","formClassName","FormDataConsumer","formData","ReferenceInput","helperText","sales","edit","show","ShowBase","BusinessIcon","ContactAside","TasksIterator","disableGutters","EmailField","gender","background","ContactShowContent","ContactListFilter","last_seen_gte","endOfYesterday","last_seen_lte","startOfWeek","startOfMonth","subMonths","ContactListContent","SimpleListLoading","hasLeftAvatarOrIcon","hasSecondaryText","ContactListActions","Spacer","ContactEditContent","useEditContext","save","FormWithRedirect","formProps","mr","BooleanInput","Toolbar","omit","EditBase","transform","ContactsIcon","TaskAside","statuses","getStatus","find","TaskChip","statusItem","statusName","statusColor","doneStatus","TaskShowContent","DoneButton","TaskStatus","TaskListFilter","due_date_gte","due_date_lte","endOfToday","endOfWeek","endOfMonth","doneState","MarkDoneButton","BulkUpdateButton","TaskListContent","useActionStyles","TaskListActions","TaskBulkActionButtons","BulkDeleteButton","TaskEditContent","DateInput","bulkActionButtons","FormatListBulletedIcon","cardContent","cardText","DealCard","draggableId","String","provided","snapshot","draggableProps","dragHandleProps","innerRef","opacity","isDragging","p","gutterBottom","borderTopLeftRadius","borderTopRightRadius","droppable","DealColumn","dealIds","align","droppableId","droppableProvided","droppableProps","isDraggingOver","initialDeals","reduce","obj","getDealsByColumn","columns","acc","push","forEach","b","DealListContent","currentSort","filterValues","setDeals","useContext","DataProviderContext","useMutation","payload","useEffect","newDeals","isEqual","onDragEnd","result","destination","column","sourceDeal","destinationDeal","splice","Number","columnDeals","all","previousData","sourceColumn","destinationColumn","sourceDeals","destinationDeals","pop","typeChoices","DealCreate","useDataProvider","then","oldDeal","rows","defaultValue","NumberInput","ul","listStyle","li","ContactList","dialog","DealShow","DealShowContent","format","start_at","minHeight","description","OnlyMineInput","alwaysOn","useListFilterContext","displayedFilters","setFilters","FormControlLabel","control","Switch","newFilterValues","defaultProps","dealFilters","SearchInput","DealActions","FilterButton","filters","path","match","MonetizationOnIcon","categories","category","familyList","categoryList","ProductListFilter","familyData","familyIds","family_id","ProductListActions","CreatePropertyType","useCreateSuggestionContext","onCancel","onCreate","setName","unit","setUnit","synonyms","setSynonyms","PropertyFormIterator","SimpleFormIterator","CreateProductFamily","setCategory","setWebsite","setImage","Select","propertyContainer","ProductImageField","ProductAside","ProductShowContent","nb_used_by","addLabel","Datagrid","useTheme","TabbedForm","FormTab","ArrayInput","FiberManualRecordIcon","ProductFamilyListFilter","ProductFamilyListContent","ProductFamilyListActions","ProductFamilyAside","ProductFamilyEditContent","ProductFamilyShowContent","CategoryIcon","easing","sharp","duration","leavingScreen","closed","Menu","menuCrm","menuProduct","menuCustomers","setState","menu","classnames","DashboardMenuItem","_scrollToTop","tasks","productFamilies","darkTheme","sidebar","overrides","MuiAppBar","colorSecondary","MuiButtonBase","lightTheme","dark","contrastText","default","RaMenuItemLink","borderLeft","active","MuiPaper","elevation1","boxShadow","backgroundClip","MuiButton","contained","MuiLinearProgress","colorPrimary","barColorPrimary","MuiFilledInput","MuiSnackbarContent","NotificationContainer","Notification","autoHideDuration","Layout","appBar","notification","backgroundImage","backgroundRepeat","backgroundSize","card","hint","form","renderInput","meta","touched","error","Form","withTypes","Login","setLoading","useLogin","location","useLocation","handleSubmit","auth","nextPathname","noValidate","CardActions","CircularProgress","thickness","LoginWithTheme","ThemeProvider","createTheme","HotContacts","isInteger","contactData","contactIds","contactTotal","total","contactsLoaded","SimpleList","secondaryText","addSuffix","leftAvatar","noteTextText","LatestNotes","contactNotesData","contactNotesIds","contactNotesLoaded","dealNotesData","dealNotesIds","dealNotesLoaded","companyNotesData","companyNotesIds","companyNotesLoaded","allNotes","concat","valueOf","NoteSource","Deal","Contact","Company","Map","memo","setTooltipContent","colorScale","scaleQuantile","domain","max","nb_companies","range","projection","projectionConfig","rotate","scale","center","zoom","geography","geographies","geo","ISO_A3","properties","cur","iso3","fill","stroke","NAME","POP_EST","rsmKey","CompaniesMap","setContent","Dashboard","Grid","item","xs","sm","Input","RegisterForm","redirectTo","useAuthProvider","useSafeSetState","submit","confirm","Container","autoComplete","Register","RegisterWithTheme","CHANGE_THEME","changeTheme","Configuration","dispatch","useDispatch","Title","customRoutes","RouteWithoutLayout","exact","themeReducer","previousState","action","customEnglishMessages","englishMessages","i18nProvider","defaultTheme","polyglotI18nProvider","messages","App","Admin","loginPage","layout","dashboard","customReducers","disableTelemetry","Resource","ListGuesser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.20093da4.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\n\nconst baseURL = \"/auth\";\n\nexport type Credentials = {\n  access_token: string;\n  refresh_token: string;\n  permissions: string;\n};\n\nconst CREDENTIALS_LOCAL_STORAGE_ITEM = \"credentials\";\n\nexport function isAuthenticated(): boolean {\n  return Boolean(getCredentials());\n}\n\nexport function setCredentials(credentials: Credentials) {\n  localStorage.setItem(\n    CREDENTIALS_LOCAL_STORAGE_ITEM,\n    JSON.stringify(credentials)\n  );\n}\n\nexport function getCredentials(): Credentials | null {\n  const raw = localStorage.getItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n  if (raw === null) {\n    return null;\n  }\n  return JSON.parse(raw);\n}\n\nexport function removeCredentials(): void {\n  localStorage.removeItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n}\n\n\nexport const isTokenValid = (access_token: string) => {\n  const currentDate = new Date();\n  const decodedToken: JwtPayload = decodeJwt<JwtPayload>(access_token);\n  return decodedToken && decodedToken.exp && (decodedToken.exp * 1000 > currentDate.getTime());\n}","import { AuthProvider } from 'react-admin';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\nimport axios, { AxiosError } from 'axios';\nimport {\n    isAuthenticated,\n    setCredentials,\n    getCredentials,\n    removeCredentials,\n    isTokenValid,\n} from \"./auth\"\nimport jwtDecode from 'jwt-decode';\n\ninterface RefreshToken {\n    access_token: string;\n  }\n\nconst baseURL = \"/auth\";\n\ninterface Permission {\n    permissions: string;\n}\n\ninterface LoginToken {\n    access_token: string;\n    refresh_token: string;\n}\n\ninterface UserIdentity {\n    id: number;\n    fullName: string;\n    avatar: string;\n}\n\n\nexport const refreshToken = async () => {\n    const credentials = getCredentials();\n    if(!credentials) return;\n  \n    const token = credentials?.refresh_token;\n  \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    };\n    let response = await axios.post<RefreshToken>(`${baseURL}/refresh`, undefined, config)\n    const { access_token } = response.data;\n    setCredentials({\n        ...credentials,\n        access_token: access_token,\n    });\n};\n\n\nconst login = async ({ username, password }: {username: string; password:string;}) => {\n    try{\n        const response = await axios.post<LoginToken>(`${baseURL}/login`, { username, password })\n        const { access_token, refresh_token } = response.data;\n        const decodedToken = decodeJwt<Permission>(access_token);\n        setCredentials({\n            access_token,\n            refresh_token,\n            permissions: decodedToken.permissions,\n        });\n        return Promise.resolve();\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.msg, status: response.status});\n    }\n};\n\nconst logout = async () => {\n    await axios.get(`${baseURL}/logout`)\n    removeCredentials();\n    return Promise.resolve('/login');\n}\n\nconst register = async ({ \n    first_name,\n    last_name,\n    email,\n    username, \n    password\n}: { \n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n}) => {\n    try{\n    const response = await axios.post<ResponseType>(`${baseURL}/register`, { \n            first_name,\n            last_name,\n            email,\n            username, \n            password\n        })\n\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.msg, status: response.status});\n    }\n}\n\nconst getIdentity = async () => { \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` }\n        };\n        let response = await axios.get<UserIdentity>(`${baseURL}/user`, config)\n        const { id, fullName, avatar } = response.data;\n        \n        return Promise.resolve({ id, fullName, avatar });\n    } catch (error: any) {\n        // const response = error.response;\n        // removeCredentials();\n        // return Promise.reject({message: response.data, status: response.status});\n\n        return Promise.reject(error);\n    }\n };\n\n const checkError = async ({ status }: any) => {\n    if (status === 401 || status === 403 || status === 422) {\n        try{\n            refreshToken();\n        } catch (error: any) {\n            return Promise.reject();\n        }\n    }\n    return Promise.resolve();\n};\n\nconst checkAuth = () => {\n    const credentials = getCredentials();\n    const token = credentials?.access_token;\n    return token && isTokenValid(token)? Promise.resolve() : Promise.reject();\n}\n\nconst getPermissions = () => {\n    return Promise.resolve();\n}\n\nexport const authProvider: AuthProvider =  {\n    login: login,\n    checkError: checkError,\n    checkAuth: checkAuth,\n    logout: logout,\n    getIdentity: getIdentity,\n    getPermissions: getPermissions,\n    register: register,\n};","import axios, { AxiosError } from 'axios';\nimport { \n    GetListResult,\n    GetOneResult,\n    GetManyResult,\n    GetManyReferenceResult,\n    CreateResult,\n    UpdateResult,\n    UpdateManyResult,\n    DeleteResult,\n    DeleteManyResult,\n}  from 'react-admin'\n\nimport {\n    getCredentials, \n    isTokenValid,\n} from \"./auth\"\n\nimport { refreshToken } from './authProvider';\n\nconst refreshTokenIfInvalid = () => {\n    const credentials = getCredentials();\n    const token = credentials?.access_token;\n\n    if(token && !isTokenValid(token)){\n        refreshToken();\n    }\n}\n\n\nconst getList = async (resource: string, params: any): Promise<GetListResult<any>> => {\n    refreshTokenIfInvalid();\n\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetListResult<any>>(`/${resource}/list`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getOne = async (resource: string, params: any): Promise<GetOneResult<any>> => {\n    refreshTokenIfInvalid();\n\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetOneResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getMany = async (resource: string, params: any): Promise<GetManyResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyResult<any>>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getManyReference = async (resource: string, params: any): Promise<GetManyReferenceResult<any>>  => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyReferenceResult<any>>(`/${resource}/refs`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst create = async (resource: string, params: any): Promise<CreateResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.post<CreateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst update = async (resource: string, params: any): Promise<UpdateResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst updateMany = async (resource: string, params: any): Promise<UpdateManyResult> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateManyResult>(`/${resource}/items`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteOne = async (resource: string, params: any): Promise<DeleteResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteMany = async (resource: string, params: any): Promise<DeleteManyResult> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteManyResult>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nexport const dataProvider = {\n    getList:    getList,\n    getOne:     getOne,\n    getMany:    getMany,\n    getManyReference: getManyReference,\n    create:     create,\n    update:     update,\n    updateMany: updateMany,\n    delete:     deleteOne,\n    deleteMany: deleteMany,\n}\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        alignItems:\"center\",\n        gap: theme.spacing(1)\n    },\n    logoIcon: {\n        color: theme.palette.secondary.light,\n    },\n    logoText: {\n        color: theme.palette.primary.light,\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AccountBalanceWalletIcon className={classes.logoIcon} />\n            <Typography variant=\"h6\" className={classes.logoText} >\n                Assistor\n            </Typography>\n        </div>\n    );\n};\n\nexport default Logo;\n","import * as React from 'react';\n\nimport {\n    Avatar,\n    Badge, \n    IconButton, \n    ListItem, \n    ListItemAvatar, \n    ListItemSecondaryAction, \n    ListItemText, \n    Menu,\n    MenuItem,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { \n    useGetList, \n    useRedirect, \n    ReferenceField,\n    FunctionField,\n    useGetIdentity,\n} from 'react-admin';\nimport { red } from '@material-ui/core/colors';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\n\nimport { Sale, Task } from '../types';\nimport { formatDistance } from 'date-fns';\nimport { TaskStatus } from '../tasks/TaskStatus';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst NotificationButton = (props: any) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const { identity } = useGetIdentity();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const now = Date.now();\n\n    const { data, ids, loaded } = useGetList<Task>(\n        'tasks',\n        { page: 1, perPage: 1000 },\n        { field: 'due_date', order: 'ASC' },\n        { status_dif: 'done', sales_id: identity && identity?.id,},\n    );\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleNotificationClick = (id: any) => {\n        setAnchorEl(null);\n\n        redirect(`/tasks/${id}/show`);\n    }\n\n    const hasNotification = ids.length > 0;\n      \n    return (\n        <div {...props}>\n            <IconButton \n                onClick={handleClick}\n            >\n                <Badge \n                    badgeContent={ids.length} \n                    color=\"error\"\n                > \n                    { hasNotification\n                        ? <NotificationsIcon />\n                        : <NotificationsNoneIcon />\n                    }\n                </Badge>\n            </IconButton>\n            { hasNotification &&\n                <Menu \n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                >\n                    {ids.map(id => {\n                        const task = data[id];\n                        const taskOverdue = task.due_date < (new Date()).toISOString();\n                        return (\n                            <MenuItem onClick={() => handleNotificationClick(id)}>\n                                <ListItemAvatar>\n                                <Avatar\n                                    style={taskOverdue ? { backgroundColor: red[400] } : undefined}\n                                >\n                                    {taskOverdue\n                                    ? <NotificationsActiveIcon />\n                                    : <AssignmentTurnedInIcon />\n                                    }\n                                </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={\n                                        <>\n                                        {task.text}\n                                        </>\n                                    }\n                                    secondary={\n                                        <>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                due in{' '}\n                                                {formatDistance(\n                                                    new Date(task.due_date),\n                                                    now\n                                                    )}\n                                            </Typography>\n                                        </>\n                                    }\n                                    />\n                            </MenuItem>\n                        );\n                    })}\n                </Menu>\n             }\n        </div>\n    )\n}\n\nexport default NotificationButton;","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { createStyles, alpha, Theme, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }),\n);\n\nconst GlobalSearch = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n    );\n};\n\nexport default GlobalSearch;","import * as React from 'react';\nimport { forwardRef, memo } from 'react';\nimport { Layout, AppBar, UserMenu, useLocale, useSetLocale } from 'react-admin';\nimport { MenuItem, ListItemIcon, MenuItemProps } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Language from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles(theme => ({\n    menuItem: {\n        color: theme.palette.text.secondary,\n    },\n    icon: { minWidth: theme.spacing(5) },\n}));\n\nconst SwitchLanguage = forwardRef((props: any, ref: any) => {\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={ref}\n            className={classes.menuItem}\n            onClick={e => {\n                setLocale(locale === 'en' ? 'ja' : 'en');\n                props.onClick(e);\n            }}\n        >\n            <ListItemIcon className={classes.icon}>\n                <Language />\n            </ListItemIcon>\n            Switch Language\n        </MenuItem>\n    );\n});\n\nexport default SwitchLanguage;","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\nimport NotificationButton from '../notifications/NotificationButton';\nimport GlobalSearch from './GlobalSearch';\nimport SwitchLanguage from './SwitchLanguage';\n\nconst useStyles = makeStyles({\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n});\n\nconst ConfigurationMenu = forwardRef<any, any>((props, ref) => {\n    const translate = useTranslate();\n    return (\n        <MenuItemLink\n            ref={ref}\n            to=\"/configuration\"\n            primaryText=\"Configuration\"\n            leftIcon={<SettingsIcon />}\n            onClick={props.onClick}\n            sidebarIsOpen\n        />\n    );\n});\n\nconst CustomUserMenu = (props: any) => (\n    <UserMenu {...props}>\n        <ConfigurationMenu />\n        <SwitchLanguage />\n    </UserMenu>\n);\n\nconst CustomAppBar = (props: any) => {\n    const classes = useStyles();\n    return (\n        <AppBar \n            {...props} \n            elevation={1} \n            userMenu={<CustomUserMenu />\n        }>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                id=\"react-admin-title\"\n            />\n            <Logo />\n            <span className={classes.spacer} />\n            <GlobalSearch />\n            <NotificationButton />\n        </AppBar>\n    );\n};\n\nexport default CustomAppBar;\n","import * as React from 'react';\nimport { Fragment, ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    List,\n    MenuItem,\n    ListItemIcon,\n    Typography,\n    Collapse,\n    Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useTranslate, ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(4),\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\ninterface Props {\n    dense: boolean;\n    handleToggle: () => void;\n    icon: ReactElement;\n    isOpen: boolean;\n    name: string;\n    children: ReactNode;\n}\n\nconst SubMenu = (props: Props) => {\n    const { handleToggle, isOpen, name, icon, children, dense } = props;\n    const translate = useTranslate();\n    const classes = useStyles();\n    const sidebarIsOpen = useSelector<ReduxState, boolean>(\n        state => state.admin.ui.sidebarOpen\n    );\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;\n","export const sectors = [\n    'Factory Automation',\n    'Logistics Automation',\n    'Warehouse Automation',\n    'Consulting & Development',\n].map(sector => ({ id: sector, name: sector }));\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { Company } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const CompanyAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Company;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar\n            alt={record.name}\n            className={classes.avatar}\n        >\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <Avatar\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n    );\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ImageField } from 'react-admin';\n\nexport interface StyleProps {\n    width: number;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(theme => ({\n    image: {\n        width: props => props.width\n    },\n}));\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const CountryField = ({\n    record,\n    source=\"url\",\n    title=\"nicename\",\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    title?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles({width: sizeInPixel[size]});\n    if (!record) return null;\n\n    return (\n        <ImageField \n            record={record as any}\n            source={source} \n            title={title}\n            classes={classes}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { linkToRecord, SelectField, ReferenceField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { sectors } from './sectors';\nimport { CompanyAvatar } from './CompanyAvatar';\nimport { Company } from '../types';\nimport { CountryField } from './CountryField';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n    identifier: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        lrft: 0,\n    }\n}));\n\nexport const CompanyCard = ({ record }: { record: Company }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Company>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/companies', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classes.checkbox}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Typography \n                    variant=\"body2\" \n                    color=\"textSecondary\"\n                    className={classes.identifier}\n                >\n                    {`#${record.id}`}\n                </Typography>\n                <div className={classes.identity}>\n                    <CompanyAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.name}\n                        </Typography>\n                        <ReferenceField\n                            record={record}\n                            source=\"country_id\"\n                            reference=\"countries\"\n                            link={false}\n                        >\n                            <CountryField size='small' />\n                        </ReferenceField>\n                        </Box>\n                        {record.relation && (\n                            <Chip \n                                label={record.relation} \n                                variant=\"outlined\" \n                                size=\"small\"\n                            />\n                        )}\n                        <SelectField\n                            color=\"textSecondary\"\n                            source=\"sector\"\n                            choices={sectors}\n                            record={record}\n                        />\n                    </div>\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_contacts}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_contacts > 1\n                                    ? 'contacts'\n                                    : 'contact'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <NoteIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\n\nimport { CompanyCard } from './CompanyCard';\nimport { Company } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} />\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Company>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <CompanyCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const CompanyGridList = () => {\n    const { loaded } = useListContext();\n    return loaded ? <LoadedGridList /> : <LoadingGridList />;\n};\n","export const relations = [\n    'Distributor',\n    'End-customer',\n    'Prospect',\n    'Competitor',\n].map(relations => ({ id: relations, name: relations }));","import { Box, Chip } from '@material-ui/core';\nimport { Tag } from '../types'\n\nexport const TagChip = ({ record }: { record: Tag; }) => (\n    <>\n        { record && (\n                <Chip\n                label={record.name}\n                size=\"small\"\n                style={{\n                    backgroundColor: record.color,\n                    border: 0,\n                    cursor: 'pointer',\n                }}\n            />\n        )}\n    </>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        order: -1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleListFilter = ({ children }: {children: any;}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, {})\n        : child\n    );\n    return (\n        <div className={classes.root}>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"left\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip, Drawer, IconButton, ListItem } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { sectors } from './sectors';\nimport { relations } from './relations';\nimport { TagChip } from '../tags/TagChip';\nimport { Country, Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        minWidth: '13em',\n    },\n    countryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    tagList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const CompanyListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: tags, ids: tagIds } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    const { data: countries, ids: countryIds } = useGetList<Country>(\n        'countries',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Relation\" icon={<BusinessIcon />}>\n                {relations.map(relation => (\n                    <FilterListItem\n                        key={relation.id}\n                        label={relation.name}\n                        value={{ relation: relation.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                <div className={classes.tagList}>\n                    {tagIds &&\n                        tags &&\n                        tagIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<TagChip record={tags[id]}/>}\n                                value={{ tags: [id] }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Sector\" icon={<LocalShippingIcon />}>\n                {sectors.map(sector => (\n                    <FilterListItem\n                        key={sector.id}\n                        label={sector.name}\n                        value={{ sector: sector.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Countries\" icon={<PublicIcon />}>\n                <div className={classes.countryList}>\n                    {countryIds &&\n                        countries &&\n                        countryIds.map(id => (\n                            <FilterListItem\n                            key={id}\n                            label={countries[id].nicename}\n                            value={{ country_id: id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { Button, useListContext } from 'react-admin';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { Company } from '../types';\n\nconst doneState = { status: 'Done' };\n\nconst SelectAllButton = () => {\n    const { ids, data, onSelect } = useListContext<Company>();\n    return (\n        <Button\n            onClick={(e:any) =>{\n                e.stopPropagation();\n                onSelect(ids);\n            }}\n            label=\"Select All\"\n        >\n            <DoneAllIcon />\n        </Button>\n    );\n};\n\nexport default SelectAllButton;","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    SortButton,\n    FilterLiveSearch,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CompanyGridList } from './CompanyGridList';\nimport { CompanyListFilter } from './CompanyListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\nimport SelectAllButton from './SelectAllButton';\nimport { Box } from '@material-ui/core';\n\nexport const CompanyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<CompanyListActions />}\n            aside={<CompanyListFilter />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100, 1000]} />}\n            perPage={25}\n            sort={{ field: 'name', order: 'ASC' }}\n            component=\"div\"\n        >\n            <CompanyGridList />\n        </List>\n    ) : null;\n};\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        \n    },\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst importOptions = {\n    parseConfig: {\n        // For all options see: https://www.papaparse.com/docs#config\n        dynamicTyping: true\n    }\n}\n\n\nconst CompanyListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar className={classes.toolbar} >\n            <SortButton fields={['id', 'name']} />\n            <SelectAllButton />\n            <ExportButton />\n            <ImportButton {...props} {...importOptions}/>\n            <CreateButton\n                basePath=\"/companies\"\n                variant=\"contained\"\n                label=\"New Company\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","export const sizes = [\n    { id: 1, name: '1 employee' },\n    { id: 10, name: '2-9 employees' },\n    { id: 50, name: '10-49 employees' },\n    { id: 250, name: '50-249 employees' },\n    { id: 500, name: '250 or more employees' },\n];\n","import { AutocompleteInput, AutocompleteInputProps } from 'react-admin';\n\nconst DistributorInput = (props: AutocompleteInputProps) => (\n    <AutocompleteInput \n        {...props}\n        optionText={record => record ? record.country_iso ? `${record.name} (${record.country_iso})` : `${record.name}` : ''} \n        allowEmpty\n        resettable\n    />\n);\n\nexport default DistributorInput;","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    FormDataConsumer,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n} from 'react-admin';\nimport { Box, CardContent, Divider, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nexport const CompanyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n\n    if (!identity) return null;\n\n    const defaultValue = () => ({ sales_id: identity && identity?.id });\n\n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                initialValues={defaultValue}\n                redirect=\"show\"\n            >\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <BusinessIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { Contact } from '../types';\n\nexport const Avatar = ({ record }: { record: Contact }) => (\n    <MuiAvatar src={record.avatar}>\n        {record.first_name.charAt(0)}\n        {record.last_name.charAt(0)}\n    </MuiAvatar>\n);\n","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst getColorFromStatus = (status: string) =>\n    status === 'cold'\n        ? '#7dbde8'\n        : status === 'warm'\n        ? '#e8cb7d'\n        : status === 'hot'\n        ? '#e88b7d'\n        : status === 'in-contract'\n        ? '#a4e87d'\n        : '#000';\n\nexport const Status = ({ status }: { status: string }) => (\n    <Box\n        width={10}\n        height={10}\n        display=\"inline-block\"\n        borderRadius={5}\n        bgcolor={getColorFromStatus(status)}\n        component=\"span\"\n    />\n);\n","import * as React from 'react';\nimport { ReferenceArrayField, SingleFieldList, ChipField } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Contact } from '../types';\n\nconst ColoredChipField = ({ record, ...props }: any) =>\n    record ? (\n        <ChipField\n            record={record}\n            {...props}\n            style={{ backgroundColor: record.color, border: 0 }}\n            component=\"span\"\n        />\n    ) : null;\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'inline-block',\n    },\n});\n\nexport const TagsList = ({ record }: { record: Contact }) => {\n    const classes = useStyles();\n    if (!record) return null;\n    return (\n        <ReferenceArrayField\n            record={record}\n            basePath=\"/contacts\"\n            resource=\"contacts\"\n            source=\"tags\"\n            reference=\"tags\"\n            className={classes.root}\n        >\n            <SingleFieldList linkType={false} component=\"span\">\n                <ColoredChipField\n                    source=\"name\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                />\n            </SingleFieldList>\n        </ReferenceArrayField>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const LogoField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar>\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            title={record.name}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","export const colors = [\n    '#eddcd2',\n    '#fff1e6',\n    '#fde2e4',\n    '#fad2e1',\n    '#c5dedd',\n    '#dbe7e4',\n    '#f0efeb',\n    '#d6e2e9',\n    '#bcd4e6',\n    '#99c1de',\n];\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        display: 'inline-block',\n        margin: 8,\n    },\n});\n\nexport const RoundButton = ({ color, handleClick, selected }: any) => {\n    const classes = useStyles();\n    return (\n        <button\n            type=\"button\"\n            className={classes.root}\n            style={{\n                backgroundColor: color,\n                border: selected ? '2px solid grey' : 'none',\n            }}\n            onClick={handleClick}\n        />\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useGetMany,\n    useCreate,\n    useUpdate,\n    useGetList,\n    Identifier,\n} from 'react-admin';\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { colors } from './colors';\nimport { Contact, Company, Product } from '../types';\nimport { Tag } from '../types';\nimport { RoundButton } from '../components/RoundButton';\n\nexport const TagsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Contact | Company | Product;\n    reference: 'companies' | 'contacts' | 'products';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [newTagName, setNewTagName] = useState('');\n    const [newTagColor, setNewTagColor] = useState(colors[0]);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [disabled, setDisabled] = useState(false);\n\n    const { data: allTags, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' },\n        {},\n        { version } as any // FIXME UseDataProviderOptions don't allow [key: string]: any\n    );\n    const { data: tags, loaded } = useGetMany('tags', record.tags, {\n        enabled: record.tags && record.tags.length > 0,\n    });\n    const [update] = useUpdate();\n    const [create] = useCreate();\n\n    const unselectedTagIds = ids && ids.filter(id => !record.tags.includes(id));\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDeleteTag = (id: Identifier) => {\n        const tags: Identifier[] = record.tags.filter(\n            (tagId: Identifier) => tagId !== id\n        );\n        update(reference, record.id, { tags }, record);\n    };\n\n    const handleAddTag = (id: Identifier) => {\n        const tags: Identifier[] = [...record.tags, id];\n        update(reference, record.id, { tags }, record);\n        setAnchorEl(null);\n    };\n\n    const handleOpenCreateDialog = () => {\n        setOpen(true);\n        setAnchorEl(null);\n        setDisabled(false);\n    };\n\n    const handleNewTagNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setNewTagName(event.target.value);\n    };\n\n    const handleCreateTag = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setDisabled(true);\n        create(\n            'tags',\n            { name: newTagName, color: newTagColor },\n            {\n                onSuccess: ({ data }) => {\n                    update(\n                        reference,\n                        record.id,\n                        { tags: [...record.tags, data.id] },\n                        record,\n                        {\n                            onSuccess: () => {\n                                setNewTagName('');\n                                setNewTagColor(colors[0]);\n                                setOpen(false);\n\n                                setVersion(v => v + 1);\n                            },\n                        }\n                    );\n                },\n            }\n        );\n    };\n\n    // if (!loaded || !tags) return null;\n    return (\n        <>\n            {tags.map(tag => (\n                <Box mt={1} mb={1} key={tag.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteTag(tag.id)}\n                        label={tag.name}\n                        style={{ backgroundColor: tag.color, border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add tag\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Menu\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                {unselectedTagIds?.map(id => (\n                    <MenuItem key={id} onClick={() => handleAddTag(id)}>\n                        <Chip\n                            size=\"small\"\n                            variant=\"outlined\"\n                            label={allTags && allTags[id].name}\n                            style={{\n                                backgroundColor: allTags && allTags[id].color,\n                                border: 0,\n                            }}\n                            onClick={() => handleAddTag(id)}\n                        />\n                    </MenuItem>\n                ))}\n                <MenuItem onClick={handleOpenCreateDialog}>\n                    <Chip\n                        icon={<EditIcon />}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={handleOpenCreateDialog}\n                        color=\"primary\"\n                        label=\"Create new tag\"\n                    />\n                </MenuItem>\n            </Menu>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <form onSubmit={handleCreateTag}>\n                    <DialogTitle id=\"form-dialog-title\">\n                        Create a new tag\n                    </DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            label=\"Tag name\"\n                            fullWidth\n                            value={newTagName}\n                            onChange={handleNewTagNameChange}\n                        />\n                        <Box display=\"flex\" flexWrap=\"wrap\" width={230} mt={2}>\n                            {colors.map(color => (\n                                <RoundButton\n                                    key={color}\n                                    color={color}\n                                    selected={color === newTagColor}\n                                    handleClick={() => {\n                                        setNewTagColor(color);\n                                    }}\n                                />\n                            ))}\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setOpen(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={disabled}\n                        >\n                            Add tag\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    EditButton,\n    ShowButton,\n} from 'react-admin';\nimport { Box, Drawer, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleAside = ({\n    basePath,\n    record,\n    link = 'edit',\n    children,\n}: {\n    basePath: string,\n    record?: any;\n    children: any,\n    link?: string;\n}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    if (!record) return null;\n\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, { record })\n        : child\n    );\n\n    return (\n        <div className={classes.root}>\n            <Box textAlign=\"center\" mb={2}>\n                {link === 'edit' ? (\n                    <EditButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Edit\"\n                    />\n                ) : (\n                    <ShowButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Show\"\n                    />\n                )}\n            </Box>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"right\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    )\n};\n    \n","import * as React from 'react';\nimport { cloneElement, useState } from 'react';\nimport { \n    AutocompleteArrayInput,\n    Edit,\n    EditContextProvider,\n    Identifier, \n    ReferenceArrayField, \n    ReferenceArrayInput, \n    SimpleForm, \n    SingleFieldList, \n    useEditController, \n    useGetList, \n    useGetMany, \n    useUpdate, \n    useRefresh\n} from 'react-admin';\n\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Popover,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { Company, Product } from '../types';\nimport { string } from 'prop-types';\n\nexport const ProductsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Company;\n    reference: 'companies';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n\n\n\n    const { data: products, loaded } = useGetMany('products', record.use_products, {\n        enabled: record.use_products && record.use_products.length > 0,\n    });\n\n    const handleDeleteProduct = (id: Identifier) => {\n        const products: Identifier[] = record.use_products.filter(\n            (productId: Identifier) => productId !== id\n        );\n        update(reference, record.id, { use_products: products }, record);\n    };\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleSucess = (values: any) =>{\n        refresh();\n        handleClose();\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    if (!record) return null;\n\n     return (\n        <>\n            {loaded && products.map(product => (\n                <Box mt={1} key={product.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteProduct(product.id)}\n                        label={product.model}\n                        style={{ backgroundColor: \"#d4d4d4\", border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add product\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Popover\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n            >\n                <Edit\n                    basePath=\"/companies\"\n                    resource={reference}\n                    id={record.id.toString()}\n                    onSuccess={handleSucess}\n                >\n                    <SimpleForm>\n                        <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                            <AutocompleteArrayInput optionText=\"model\" />\n                        </ReferenceArrayInput>\n                    </SimpleForm>\n                </Edit>\n            </Popover>\n        </>\n    );\n}","import * as React from 'react';\nimport {\n    TextField,\n    DateField,\n    FunctionField,\n    ReferenceField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    ShowButton,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider, \n    Link,\n} from '@material-ui/core';\nimport { Company, Sale } from '../types';\nimport { TagsListEdit } from '../tags/TagsListEdit';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { ProductsListEdit } from '../products/ProductsListEdit';\nimport { any } from 'prop-types';\n\nexport const CompanyAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Company;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/companies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n    \n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Company;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Company info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">{record.website}</Link>\n                <br />\n                LinkedIn: <Link href={record.linkedIn} target=\"_blank\" rel=\"noreferrer\">LinkedIn</Link>\n            </Box>\n            <Box mt={1}>\n                Relation: <TextField source=\"relation\" record={record} />\n            </Box>\n            {record.distributor_id && (\n                <Box mt={1}>\n                    Distributor: <ReferenceField\n                            record={record}\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                        >\n                            <TextField source=\"name\" record={record} />\n                        </ReferenceField>\n                </Box>\n            )}\n\n            {record.phone_number && (\n                <Box mt={1}>\n                    <TextField source=\"phone_number\" record={record} />{' '}\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">Main</Typography>\n                </Box>\n            )}\n\n            <Box mt={1} mb={3}>\n                <TextField source=\"address\" />\n                <br />\n                <TextField source=\"city\" /> <TextField source=\"zipcode\" />{' '}\n                <TextField source=\"stateAbbr\" />\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={3}>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"span\"\n                >\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"created_at\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"companies\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record\n                                ? `${record.first_name} ${record.last_name}`\n                                : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"companies\" />\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Use Products</Typography>\n                <Divider />\n\n                <ProductsListEdit record={record} reference=\"companies\" />\n            </Box>\n        </>\n    ) : null;","export const stages = [\n    'opportunity',\n    'proposal-sent',\n    'in-negociation',\n    'won',\n    'lost',\n    'delayed',\n];\n\nexport const stageNames = {\n    opportunity: 'Opportunity',\n    'proposal-sent': 'Proposal Sent',\n    'in-negociation': 'In Negociation',\n    won: 'Won',\n    lost: 'Lost',\n    delayed: 'Delayed',\n};\n\nexport const stageChoices = stages.map(type => ({\n    id: type,\n    /* @ts-ignore */\n    name: stageNames[type],\n}));\n","import * as React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 150,\n    },\n});\n\nexport const StatusSelector = ({ status, setStatus, className = '' }: any) => {\n    const classes = useStyles();\n    return (\n        <TextField\n            select\n            value={status}\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                setStatus(event.target.value);\n            }}\n            variant=\"filled\"\n            label={false}\n            margin=\"none\"\n            size=\"small\"\n            className={clsx(className, classes.root)}\n        >\n            <MenuItem value=\"cold\">\n                Cold <Status status=\"cold\" />\n            </MenuItem>\n            <MenuItem value=\"warm\">\n                Warm <Status status=\"warm\" />\n            </MenuItem>\n            <MenuItem value=\"hot\">\n                Hot <Status status=\"hot\" />\n            </MenuItem>\n            <MenuItem value=\"in-contract\">\n                In Contract <Status status=\"in-contract\" />\n            </MenuItem>\n        </TextField>\n    );\n};\n","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useRecordContext,\n    useCreate,\n    useUpdate,\n    useRefresh,\n    useNotify,\n    useGetIdentity,\n    Identifier,\n    useResourceContext,\n} from 'react-admin';\nimport { TextField as TextInput, Button, Paper } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nimport { StatusSelector } from './StatusSelector';\n\ntype Props = {\n    preview: Boolean;\n}\n\nconst useStyles = makeStyles<Theme, Props>(theme => ({\n    root: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: theme.spacing(1),\n    },\n    small: {\n        marginRight: '1em',\n        '& .MuiFilledInput-input': {\n            paddingTop: 10,\n        },\n    },\n    buttonSwitcher: {\n        marginBottom: theme.spacing(1),\n    },\n    previewConatiner: {\n        display: 'flex',\n    },\n    previewRaw: {\n        flex: 1,\n    },\n    previewMarkdown: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderColor: theme.palette.primary.main,\n        display: ({preview}) => (preview ? 'block' : 'none'),\n    },\n}));\n\nexport const NewNote = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const [preview, setPreview] = useState(false);\n    const classes = useStyles({preview});\n    const record = useRecordContext();\n    const resource = useResourceContext();\n    const [text, setText] = useState('');\n    const [status, setStatus] = useState(record && record.status);\n    const [date, setDate] = useState(getCurrentDate());\n    const [create, { loading }] = useCreate();\n    const [update] = useUpdate();\n    // FIXME: use refetch instead when ReferenceManyField exposes it in the ListContext\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const { identity } = useGetIdentity();\n    if (!record || !identity) return null;\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const data: any = {\n            [foreignKeyMapping[reference]]: record.id,\n            sales_id: identity.id,\n            date,\n            text,\n        };\n        if (showStatus) {\n            data.status = status;\n        }\n        update(\n            reference,\n            ((record && record.id) as unknown) as Identifier,\n            {\n                last_seen: date,\n                status,\n            },\n            record\n        );\n        create(resource, data, {\n            onSuccess: () => {\n                setText('');\n                notify('Note added successfully', 'info');\n                refresh();\n            },\n        });\n        return false;\n    };\n    return (\n        <div className={classes.root}>\n            <form onSubmit={handleSubmit}>\n                <div className={classes.buttonSwitcher}>\n                    <Button \n                        variant={preview ? \"contained\": \"outlined\"} \n                        color=\"primary\"\n                        onClick={()=> setPreview(!preview)}\n                    >Markdown</Button>\n                </div>\n                <div className={classes.previewConatiner}>\n                    <div className={classes.previewRaw}>\n                        <TextInput\n                            label=\"Add a note\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            fullWidth\n                            multiline\n                            value={text}\n                            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                                setText(event.target.value)\n                            }\n                        />\n                    </div>\n                    <Paper className={classes.previewMarkdown}>\n                        <ReactMarkdown children={text} remarkPlugins={[remarkGfm]} />\n                    </Paper>\n                </div>\n                <div className={classes.toolbar}>\n                    <span>\n                        {text ? (\n                            <>\n                                {showStatus && (\n                                    <StatusSelector\n                                        status={status}\n                                        setStatus={setStatus}\n                                        className={classes.small}\n                                    />\n                                )}\n                                <TextInput\n                                    type=\"datetime-local\"\n                                    variant=\"filled\"\n                                    size=\"small\"\n                                    value={date}\n                                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                        setDate(event.target.value);\n                                    }}\n                                    className={classes.small}\n                                />\n                            </>\n                        ) : null}\n                    </span>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!text || loading}\n                    >\n                        Add this note\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst getCurrentDate = () => {\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n    return now.toISOString().slice(0, -8);\n};\n\nconst foreignKeyMapping = {\n    contacts: 'contact_id',\n    deals: 'deal_id',\n    companies: 'company_id',\n    products: 'product_id',\n};\n","import * as React from 'react';\nimport { useState, FormEvent, ChangeEvent } from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    DateField,\n    useResourceContext,\n    useDelete,\n    useUpdate,\n    useNotify,\n    useRecordContext,\n} from 'react-admin';\nimport {\n    Typography,\n    Tooltip,\n    IconButton,\n    FilledInput,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n    },\n    metadata: {\n        marginBottom: theme.spacing(1),\n        color: theme.palette.text.secondary,\n    },\n    textarea: {\n        paddingTop: 16,\n        paddingLeft: 14,\n        paddingRight: 60,\n        paddingBottom: 14,\n        lineHeight: 1.3,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: theme.spacing(1),\n    },\n    cancel: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        backgroundColor: theme.palette.grey[200],\n        padding: '0 1em',\n        borderRadius: 10,\n        display: 'flex',\n        alignItems: 'stretch',\n        marginBottom: theme.spacing(1),\n    },\n    text: {\n        flex: 1,\n    },\n    paragraph: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: 1,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        marginLeft: theme.spacing(2),\n        visibility: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n    },\n}));\n\nexport const Note = ({\n    showStatus,\n    note,\n    isLast,\n    reference,\n}: {\n    showStatus?: boolean;\n    note: any;\n    isLast: boolean;\n    reference: string;\n}) => {\n    const [isHover, setHover] = useState(false);\n    const [isEditing, setEditing] = useState(false);\n    const [noteText, setNoteText] = useState(note.text);\n    const resource = useResourceContext();\n    const record = useRecordContext();\n    const notify = useNotify();\n    const classes = useStyles();\n    const [update, { loading }] = useUpdate();\n\n    const [handleDelete] = useDelete(resource, note.id, note, {\n        mutationMode: 'undoable',\n        onSuccess: () => {\n            notify('Note deleted', 'info', undefined, true);\n            update(\n                reference,\n                record.id,\n                { nb_notes: record.nb_notes - 1 },\n                record\n            );\n        },\n    });\n\n    const handleEnterEditMode = () => {\n        setEditing(true);\n    };\n\n    const handleCancelEdit = () => {\n        setEditing(false);\n        setNoteText(note.text);\n        setHover(false);\n    };\n\n    const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setNoteText(event.target.value);\n    };\n\n    const handleNoteUpdate = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        update(resource, note.id, { text: noteText }, note, {\n            onSuccess: () => {\n                setEditing(false);\n                setNoteText(note.text);\n                setHover(false);\n            },\n        });\n    };\n\n    return (\n        <div\n            className={classes.root}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n        >\n            <div className={classes.metadata}>\n                <ReferenceField\n                    record={note}\n                    resource=\"contactNotes\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    basePath=\"/contactNotes\"\n                >\n                    <TextField source=\"first_name\" variant=\"body1\" />\n                </ReferenceField>{' '}\n                <Typography component=\"span\" variant=\"body1\">\n                    added a note on{' '}\n                </Typography>\n                <DateField\n                    source=\"date\"\n                    record={note}\n                    variant=\"body1\"\n                    showTime\n                    locales=\"en\"\n                    options={{\n                        dateStyle: 'full',\n                        timeStyle: 'short',\n                    }}\n                />{' '}\n                {showStatus && <Status status={note.status} />}\n            </div>\n            {isEditing ? (\n                <form onSubmit={handleNoteUpdate}>\n                    <FilledInput\n                        value={noteText}\n                        onChange={handleTextChange}\n                        fullWidth\n                        multiline\n                        className={classes.textarea}\n                        autoFocus\n                    />\n                    <div className={classes.buttons}>\n                        <Button\n                            className={classes.cancel}\n                            onClick={handleCancelEdit}\n                            color=\"primary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            disabled={loading}\n                        >\n                            Update Note\n                        </Button>\n                    </div>\n                </form>\n            ) : (\n                <div \n                    className={classes.content}\n                    onClick={() => setHover(true)}\n                >\n                    <div className={classes.text}>\n                        <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                    </div>\n                    <div\n                        className={classes.toolbar}\n                        style={{ visibility: isHover ? 'visible' : 'hidden' }}\n                    >\n                        <Tooltip title=\"Edit note\">\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleEnterEditMode}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete note\">\n                            <IconButton size=\"small\" onClick={handleDelete}>\n                                <TrashIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Note } from './Note';\nimport { NewNote } from './NewNote';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '0.5em',\n    },\n});\n\nexport const NotesIterator = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const classes = useStyles();\n    const { data, ids, loaded } = useListContext();\n    if (!loaded) return null;\n    return (\n        <>\n            <NewNote showStatus={showStatus} reference={reference} />\n            <div className={classes.root}>\n                {ids.map((id, index) => (\n                    <Note\n                        note={data[id]}\n                        isLast={index === ids.length - 1}\n                        showStatus={showStatus}\n                        reference={reference}\n                        key={index}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\n\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        // backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const ProductAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Product;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n\n\n    return (record.image\n        ? <Avatar\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n        : <Avatar\n            alt={record.model}\n            className={classes.avatar}\n        >\n            <ShoppingCartIcon />\n        </Avatar>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport { linkToRecord, TextField, ReferenceField, ImageField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { ProductAvatar } from './ProductAvatar';\nimport { Product } from '../types';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    family: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    image: {\n        width: 28,\n        height: 28,\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        left: theme.spacing(1),\n    },\n    hidden:{\n        display: 'none',\n    }\n}));\n\nexport const ProductCard = ({ record }: { record: Product }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Product>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/products', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classNames(classes.checkbox, {[classes.hidden]: !loaded})}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Box position=\"absolute\" top={10} right={10}>\n                    <ReferenceField\n                        record={record}\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <ImageField \n                            source=\"logo\" \n                            title=\"name\"\n                            classes={classes}\n                        />\n                    </ReferenceField>\n                </Box>\n                <div className={classes.identity}>\n                    <ProductAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.model}\n                        </Typography>\n                        </Box>\n                    </div>\n\n                    <div className={classes.family}>\n                        <Typography variant=\"body2\">\n                            in family{' '}\n                            <ReferenceField\n                                record={record}\n                                source=\"family_id\"\n                                reference=\"productFamilies\"\n                                link=\"show\"\n                            >\n                                <TextField source=\"name\" />\n                            </ReferenceField>\n                        </Typography>\n                    </div>\n\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <DealIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_properties}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_properties > 1 ? 'properties' : 'property'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport { ProductCard } from './ProductCard';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: \"center\",\n        padding: '1em',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} >\n                <Skeleton variant=\"circle\" width={60} height={60}  animation=\"wave\"/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={110}/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={150}/>\n                <Skeleton variant=\"rect\" width={180} height={40} />\n                </Paper>\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Product>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <ProductCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const ProductGridList = () => {\n    const { loaded, loading } = useListContext();\n    return loading ? <LoadingGridList /> : <LoadedGridList /> ;\n};\n","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { sizes } from './sizes';\nimport { LogoField } from './LogoField';\nimport { CompanyAside } from './CompanyAside';\nimport { Company, Deal, Contact } from '../types';\nimport { stageNames } from '../deals/stages';\nimport { NotesIterator } from '../notes';\nimport { CountryField } from './CountryField';\nimport { ProductGridList } from '../products/ProductGridList';\n\nexport const CompanyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <CompanyShowContent />\n    </ShowBase>\n);\n\nconst CompanyShowContent = () => {\n    const { record, loaded } = useShowContext<Company>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <LogoField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.name}</Typography>\n                                    {record.relation && (\n                                        <Chip \n                                            label={record.relation} \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                        />\n                                    )}\n                                </Box>\n                                <Typography \n                                    variant=\"body2\" \n                                    color=\"textSecondary\"\n                                >\n                                    {`#${record.id} - `}\n                                </Typography>\n                                {record.sector && (\n                                        <Typography variant=\"body2\">\n                                            <TextField source=\"sector\" />,{' '}\n                                            <SelectField\n                                                source=\"size\"\n                                                choices={sizes}\n                                            />\n                                        </Typography>\n                                )}\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"country_id\"\n                                    reference=\"countries\"\n                                    link={false}\n                                >\n                                    <CountryField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes === 1\n                                        ? '1 Note'\n                                        : `${record.nb_notes} Notes`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_contacts === 1\n                                        ? '1 Contact'\n                                        : `${record.nb_contacts} Contacts`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_deals === 1\n                                        ? '1 Deal'\n                                        : `${record.nb_deals} Deals`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_products === 1\n                                        ? '1 Product'\n                                        : `${record.nb_products} Products`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"companyNotes\"\n                                target=\"company_id\"\n                                sort={{ field: 'date', order: 'DESC' }}\n                            >\n                                 <NotesIterator reference=\"companies\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField\n                                reference=\"contacts\"\n                                target=\"company_id\"\n                                sort={{ field: 'last_name', order: 'ASC' }}\n                            >\n                                <ContactsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <ReferenceManyField\n                                reference=\"deals\"\n                                target=\"company_id\"\n                                sort={{ field: 'name', order: 'ASC' }}\n                            >\n                                <DealsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Box mt={1}>\n                                <ReferenceManyField\n                                    reference=\"products\"\n                                    target=\"company_id\"\n                                    label=\"Products\"\n                                    pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                    perPage={25}\n                                >\n                                    <ProductGridList />\n                                </ReferenceManyField>\n                            </Box>\n                            <Box textAlign=\"center\" mt={1}>\n                                <CreateRelatedProductButton record={record} />\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <CompanyAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ContactsIterator = () => {\n    const { data, ids, loaded } = useListContext<Contact>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const contact = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/contacts/${id}/show`}\n                        >\n                            <ListItemAvatar>\n                                <Avatar record={contact} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${contact.first_name} ${contact.last_name}`}\n                                secondary={\n                                    <>\n                                        {contact.title}{' '}\n                                        {`- ${contact.nb_notes} notes `}\n                                        <TagsList record={contact} />\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(contact.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={contact.status} />\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                <CreateRelatedContactButton record={record} />\n            </Box>\n        </Box>\n    );\n};\n\nconst CreateRelatedContactButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/contacts/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<PersonAddIcon />}\n    >\n        Add contact\n    </Button>\n);\n\nconst CreateRelatedProductButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/products/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<AddIcon />}\n    >\n        Add product\n    </Button>\n);\n\nconst DealsIterator = () => {\n    const { data, ids, loaded } = useListContext<Deal>();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const deal = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/deals/${id}/show`}\n                        >\n                            <ListItemText\n                                primary={deal.name}\n                                secondary={\n                                    <>\n                                        {/* @ts-ignore */}\n                                        {stageNames[deal.stage]},{' '}\n                                        {deal.amount.toLocaleString('en-US', {\n                                            notation: 'compact',\n                                            style: 'currency',\n                                            currency: 'USD',\n                                            currencyDisplay: 'narrowSymbol',\n                                            minimumSignificantDigits: 3,\n                                        })}\n                                        , {deal.type}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"span\"\n                                >\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(deal.updated_at),\n                                        now\n                                    )}{' '}\n                                    ago{' '}\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n    FormDataConsumer,\n    required,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { CompanyAside } from './CompanyAside';\nimport { LogoField } from './LogoField';\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const CompanyEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit {...props} aside={<CompanyAside link=\"show\" />} actions={false}>\n            <SimpleForm component={CustomLayout} redirect=\"show\">\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <LogoField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { CompanyList } from './CompanyList';\nimport { CompanyCreate } from './CompanyCreate';\nimport { CompanyShow } from './CompanyShow';\nimport { CompanyEdit } from './CompanyEdit';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nexport default {\n    list: CompanyList,\n    create: CompanyCreate,\n    edit: CompanyEdit,\n    show: CompanyShow,\n    icon: BusinessIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Contact, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ContactAside = ({ \n    record, \n    link = 'edit',\n}: {\n    record?: Contact;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/contacts\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst TasksIterator = () => {\n    const { data, ids, loading } = useListContext();\n    if (loading || ids.length === 0) return null;\n    return (\n            <List>\n                {ids.map(id => {\n                    const task = data[id];\n                    return (\n                        <ListItem key={id} disableGutters>\n                            <Box>\n                                <Typography variant=\"body2\">\n                                    {task.text}\n                                </Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                >\n                                    due{' '}\n                                    <DateField\n                                        source=\"due_date\"\n                                        record={task}\n                                    />\n                                </Typography>\n                            </Box>\n                        </ListItem>\n                    );\n                })}\n            </List>\n    );\n};\n\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Contact;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Personal info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                <EmailField source=\"email\" />\n            </Box>\n\n            <Box mt={1}>\n                <TextField source=\"phone_number1\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Work\n                </Typography>\n            </Box>\n\n            <Box mb={1}>\n                <TextField source=\"phone_number2\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Home\n                </Typography>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"body2\">\n                    {record.gender === 'male' ? 'He/Him' : 'She/Her'}\n                </Typography>\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={2}>{record && record.background}</Box>\n            <Box mt={1} mb={3}>\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"first_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Last seen on\n                </Typography>{' '}\n                <DateField\n                    source=\"last_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"contacts\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record ? `${record.first_name} ${record.last_name}` : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"contacts\" />\n            </Box>\n\n            <Box>\n                <Typography variant=\"subtitle2\">Tasks</Typography>\n                <Divider />\n                <ReferenceManyField\n                    resource=\"contacts\"\n                    target=\"contact_id\"\n                    reference=\"tasks\"\n                >\n                    <TasksIterator />\n                </ReferenceManyField>\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Contact } from '../types';\n\nexport const ContactShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ContactShowContent />\n    </ShowBase>\n);\n\nconst ContactShowContent = () => {\n    const { record, loaded } = useShowContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.first_name} {record.last_name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {`#${record.id} - `}\n                                    {record.title} at{' '}\n                                    <ReferenceField\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        link=\"show\"\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <ReferenceManyField\n                            target=\"contact_id\"\n                            reference=\"contactNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator showStatus reference=\"contacts\" />\n                        </ReferenceManyField>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ContactAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { endOfYesterday, startOfWeek, startOfMonth, subMonths } from 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Status } from '../misc/Status';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n        }\n    },\n}));\n\nexport const ContactListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Last seen\" icon={<AccessTimeIcon />}>\n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        last_seen_gte: endOfYesterday().toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        last_seen_gte: startOfWeek(new Date()).toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this week\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfMonth(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before last month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: subMonths(\n                            startOfMonth(new Date()),\n                            1\n                        ).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                <FilterListItem\n                    label={\n                        <>\n                            Cold <Status status=\"cold\" />\n                        </>\n                    }\n                    value={{\n                        status: 'cold',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Warm <Status status=\"warm\" />\n                        </>\n                    }\n                    value={{\n                        status: 'warm',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Hot <Status status=\"hot\" />\n                        </>\n                    }\n                    value={{\n                        status: 'hot',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            In contract <Status status=\"in-contract\" />\n                        </>\n                    }\n                    value={{\n                        status: 'in-contract',\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                {ids &&\n                    data &&\n                    ids.map(id => (\n                        <FilterListItem\n                            key={id}\n                            label={<TagChip record={data[id]}/>}\n                            value={{ tags: [id] }}\n                        />\n                    ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    FilterLiveSearch,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ContactListFilter } from './ContactListFilter';\nimport { Contact } from '../types';\nimport { ImportButton } from 'react-admin-import-csv';\n\nconst ContactListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Contact\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const contact = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/contacts/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={contact} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${contact.first_name} ${contact.last_name}`}\n                            secondary={\n                                <>\n                                    {`#${contact.id} - `}\n                                    {contact.title} at{' '}\n                                    <ReferenceField\n                                        record={contact}\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        basePath=\"/companies\"\n                                        link={false}\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>{' '}\n                                    {!!contact.nb_notes &&\n                                        `- ${contact.nb_notes} notes `}\n                                    <TagsList record={contact} />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                last activity{' '}\n                                {formatDistance(\n                                    new Date(contact.last_seen),\n                                    now\n                                )}{' '}\n                                ago <Status status={contact.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ContactListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['id', 'last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/contacts\"\n                variant=\"contained\"\n                label=\"New Contact\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ContactList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ContactListActions />}\n            aside={<ContactListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            sort={{ field: 'last_seen', order: 'DESC' }}\n        >\n            <ContactListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { Contact } from '../types';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ContactEditContent = () => {\n    const { record, loaded, save } = useEditContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"first_name\" />\n                                                <Spacer />\n                                                <TextInput source=\"last_name\" />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"title\" />\n                                                <Spacer />\n                                                <ReferenceInput\n                                                    source=\"company_id\"\n                                                    reference=\"companies\"\n                                                >\n                                                    <AutocompleteInput optionText=\"name\" />\n                                                </ReferenceInput>\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"email\"\n                                                    fullWidth\n                                                />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"phone_number1\" />\n                                                <Spacer />\n                                                <TextInput source=\"phone_number2\" />\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"background\"\n                                                    multiline\n                                                    fullWidth\n                                                />\n                                                <TextInput\n                                                    source=\"avatar\"\n                                                    fullWidth\n                                                />\n                                                <BooleanInput source=\"has_newsletter\" />\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ContactAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ContactEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ContactEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Contact } from '../types';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ContactCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const contactDefaultValue = () => ({ sales_id: identity && identity?.id });\n    const transform = (data: Contact) => ({\n        ...data,\n        last_seen: new Date(),\n        tags: [],\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"first_name\" \n                    validate={[required()]} \n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    validate={[required()]}\n                    formClassName={classes.inline}\n                />\n                <CustomDivider />\n                <TextInput \n                    source=\"title\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <ReferenceInput\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    formClassName={classes.inline}\n                >\n                    <AutocompleteInput optionText=\"name\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput\n                    source=\"email\"\n                    fullWidth\n                />\n                <TextInput source=\"phone_number1\"\n                    formClassName={clsx(classes.inline, 'first-child')} />\n                <TextInput source=\"phone_number2\"\n                    formClassName={classes.inline} />\n                <CustomDivider />\n                <TextInput\n                    source=\"background\"\n                    multiline\n                    fullWidth\n                />\n                <TextInput\n                    source=\"avatar\"\n                    fullWidth\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n                <BooleanInput source=\"has_newsletter\" />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { ContactShow } from './ContactShow';\nimport { ContactList } from './ContactList';\nimport { ContactEdit } from './ContactEdit';\nimport { ContactCreate } from './ContactCreate';\nimport ContactsIcon from '@material-ui/icons/Contacts';\n\nexport default {\n    list: ContactList,\n    show: ContactShow,\n    edit: ContactEdit,\n    create: ContactCreate,\n    icon: ContactsIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    EditButton,\n    ShowButton,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Task } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const TaskAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Task;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/tasks\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Task;\n}) => \n    record ? (\n        <>\n        </>\n    ) : null;","export const statuses = [\n    {id: 'pending', name: 'Pending', color: '#FFA000'},\n    {id: 'done', name: 'Done', color: '#CDDC39'},\n    {id: 'postponed', name: 'Postponed', color: '#2196F3'},\n]\n\nexport const getStatus = (id: string) => statuses.find(status => status.id == id);","import { Box, Chip } from '@material-ui/core';\nimport { Task } from '../types'\nimport { getStatus } from './status';\n\nexport const TaskChip = ({ record }: { record: Task; }) => {\n    const statusItem = getStatus(record.status);\n    const statusName = statusItem ? statusItem.name: '';\n    const statusColor = statusItem ? statusItem.color: '#000'\n    \n    return (\n         <>\n            { record && (\n                    <Chip\n                    label={statusName}\n                    size=\"small\"\n                    style={{\n                        backgroundColor: statusColor,\n                        border: 0,\n                        cursor: 'pointer',\n                    }}\n                />\n            )}\n        </>\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    Identifier,\n    useShowContext,\n    FunctionField, \n    Button, \n    useUpdate,\n    useRefresh,\n    useNotify\n} from 'react-admin';\nimport { \n    Avatar, \n    Box, \n    Card, \n    CardContent, \n    Chip, \n    Typography,\n} from '@material-ui/core';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { TaskAside } from './TaskAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Sale, Task } from '../types';\nimport { TaskChip } from './TaskChip';\n\nconst doneStatus = 'done';\n\nexport const TaskShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <TaskShowContent />\n    </ShowBase>\n);\n\nconst TaskShowContent = () => {\n    const { record, loaded } = useShowContext<Task>();\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n    const notify = useNotify();\n\n    if (!loaded || !record) return null;\n\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" alignItems=\"flex-start\">\n                            <Avatar >\n                                <AssignmentTurnedInIcon />\n                            </Avatar>\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.text} {' '}\n                                    <TaskChip record={record} />\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={record}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            {\n                                record.status != doneStatus && \n                                <DoneButton record={record} />\n                            }\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <TaskAside record={record} />\n        </Box>\n    );\n};\n\n\nconst DoneButton = ({\n    record,\n}: {\n    record: Task;\n}) =>{\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n    const notify = useNotify();\n\n    const handleDone = (event: any) => {\n        event.preventDefault();\n        update(\n            'tasks',\n            ((record && record.id) as unknown) as Identifier,\n            {\n                status: doneStatus,\n            },\n            record, {\n                onSuccess: () => {\n                    notify('Task is marked done', 'info');\n                    refresh();\n                },\n            },\n        );\n        return false;\n    };\n    return (\n        <Button\n            label=\"Done\"\n            variant=\"outlined\"\n            onClick={handleDone}\n        >\n            <DoneIcon />\n        </Button>\n    );\n}","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { getStatus } from './status';\n\nexport const TaskStatus = ({ status }: { status: string }) => {\n    const statusItem = getStatus(status);\n    const statusColor = statusItem ? statusItem.color : \"#000\";\n    return (\n        <Box\n            width={10}\n            height={10}\n            display=\"inline-block\"\n            borderRadius={5}\n            bgcolor={statusColor}\n            component=\"span\"\n        />\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { \n    endOfYesterday, \n    startOfWeek, \n    startOfMonth, \n    subMonths, \n    endOfToday,\n    endOfWeek,\n    addWeeks,\n    endOfMonth,\n } from 'date-fns';\n\nimport { TaskStatus } from './TaskStatus';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { statuses } from './status';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const TaskListFilter = () => {\n    const { identity } = useGetIdentity();\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Due date\" icon={<AccessTimeIcon />}>                \n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfToday().toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"This month\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfMonth(new Date()).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                {statuses.map(status =>(\n                    <FilterListItem\n                    label={\n                        <>\n                            {status.name} <TaskStatus status={status.id} />\n                        </>\n                    }\n                    value={{\n                        status: status.id,\n                    }}\n                />\n                ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { BulkUpdateButton, BulkActionProps } from 'react-admin';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst doneState = { status: 'done' };\n\nconst MarkDoneButton = (props: BulkActionProps) => (\n    <BulkUpdateButton\n        {...props}\n        label=\"Mark checked\"\n        data={doneState}\n        icon={<DoneIcon/>}\n        mutationMode=\"pessimistic\"\n    />\n);\n\nexport default MarkDoneButton;","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { Fragment } from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    BulkDeleteButton,\n    useGetIdentity,\n    BulkActionProps,\n    ListActionsProps,\n    FunctionField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n    Avatar,\n    Chip,\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { ImportButton } from \"react-admin-import-csv\";\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\n\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { TaskListFilter } from './TaskListFilter';\nimport { Sale, Task } from '../types';\nimport MarkDoneButton from './MarkDoneButton';\nimport { TaskStatus } from './TaskStatus';\n\nconst TaskListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Task\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const task = data[id];\n                const taskOverdue = (task.status !== 'done') &&  (task.due_date < (new Date()).toISOString());\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/Tasks/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar\n                                style={taskOverdue ? { backgroundColor: red[400] } : undefined}\n                            >\n                                {taskOverdue\n                                ? <NotificationsActiveIcon />\n                                : <AssignmentTurnedInIcon />\n                                }\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <>\n                                {task.text}\n                                </>\n                            }\n                            secondary={\n                                <>\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={task}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                due in{' '}\n                                {formatDistance(\n                                    new Date(task.due_date),\n                                    now\n                                )}\n                                {' '}<TaskStatus status={task.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst TaskListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['due_date', 'status']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/Tasks\"\n                variant=\"contained\"\n                label=\"New Task\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nconst TaskBulkActionButtons = (props: BulkActionProps) => (\n    <Fragment>\n        <MarkDoneButton {...props} />\n        {/* default bulk delete action */}\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nexport const TaskList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<TaskListActions />}\n            aside={<TaskListFilter />}\n            bulkActionButtons={<TaskBulkActionButtons />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id, status: 'pending' }}\n            sort={{ field: 'due_date', order: 'ASC' }}\n        >\n            <TaskListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    required,\n    Toolbar,\n    useEditContext,\n    DateInput,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport omit from 'lodash/omit';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { TaskAside } from './TaskAside';\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst TaskEditContent = () => {\n    const classes = useStyles();\n    const { record, loaded, save } = useEditContext<Task>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                        <Avatar >\n                                            <AssignmentTurnedInIcon />\n                                        </Avatar>\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <TextInput \n                                                source=\"text\"\n                                                label=\"Task\"\n                                                validate={[required()]}\n                                                fullWidth\n                                            />\n                                            <DateInput\n                                                source=\"due_date\"\n                                                className={clsx(classes.inline, 'first-child')}\n                                            />\n                                            <SelectInput\n                                                source=\"status\"\n                                                choices={statuses}\n                                                className={classes.inline}\n                                            />\n                                            \n                                            <ReferenceInput\n                                                source=\"sales_id\"\n                                                reference=\"sales\"\n                                                label=\"Assigned to\"\n                                                helperText={false}\n                                            >\n                                                <SelectInput\n                                                    optionText={(sales: any) =>\n                                                        `${sales.first_name} ${sales.last_name}`\n                                                    }\n                                                />\n                                            </ReferenceInput>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <TaskAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const TaskEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <TaskEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    DateInput,\n    useCreateContext,\n    SelectField,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\n\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const TaskCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const defaultValue = () => ({\n        due_date: new Date(), \n        status: 'pending',\n        sales_id: identity && identity?.id,\n    });\n    const transform = (data: Task) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={defaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"text\"\n                    label=\"Task\"\n                    validate={[required()]}\n                    fullWidth\n                />\n                <DateInput\n                    source=\"due_date\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"status\"\n                    choices={statuses}\n                    formClassName={classes.inline}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Assigned to\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar >\n                    <AssignmentTurnedInIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { TaskShow } from './TaskShow';\nimport { TaskList } from './TaskList';\nimport { TaskEdit } from './TaskEdit';\nimport { TaskCreate } from './TaskCreate';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nexport default {\n    list: TaskList,\n    show: TaskShow,\n    edit: TaskEdit,\n    create: TaskCreate,\n    icon: FormatListBulletedIcon,\n};\n","import * as React from 'react';\nimport { ReferenceField, useRedirect } from 'react-admin';\nimport { Card, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { LogoField } from '../companies/LogoField';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    cardContent: {\n        padding: theme.spacing(1),\n        display: 'flex',\n    },\n    cardText: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const DealCard = ({ deal, index }: { deal: Deal; index: number }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    if (!deal) return null;\n\n    const handleClick = () => {\n        redirect(`/deals/${deal.id}/show`);\n    };\n    return (\n        <Draggable draggableId={String(deal.id)} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className={classes.root}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    onClick={handleClick}\n                >\n                    <Card\n                        style={{\n                            opacity: snapshot.isDragging ? 0.9 : 1,\n                            transform: snapshot.isDragging\n                                ? 'rotate(-2deg)'\n                                : '',\n                        }}\n                        elevation={snapshot.isDragging ? 3 : 1}\n                    >\n                        <Box p={1} display=\"flex\">\n                            <ReferenceField\n                                source=\"company_id\"\n                                record={deal}\n                                reference=\"companies\"\n                                resource=\"deals\"\n                                basePath=\"/deals\"\n                            >\n                                <LogoField size=\"small\" />\n                            </ReferenceField>\n                            <Box ml={1}>\n                                <Typography variant=\"body2\" gutterBottom>\n                                    {deal.name}\n                                </Typography>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    {deal.amount.toLocaleString('en-US', {\n                                        notation: 'compact',\n                                        style: 'currency',\n                                        currency: 'USD',\n                                        currencyDisplay: 'narrowSymbol',\n                                        minimumSignificantDigits: 3,\n                                    })}\n                                    , {deal.type}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Card>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Identifier, RecordMap } from 'react-admin';\n\nimport { DealCard } from './DealCard';\nimport { stageNames } from './stages';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        flex: 1,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: '#eaeaee',\n        '&:first-child': {\n            paddingLeft: 5,\n            borderTopLeftRadius: 5,\n        },\n        '&:last-child': {\n            paddingRight: 5,\n            borderTopRightRadius: 5,\n        },\n    },\n    droppable: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 5,\n        padding: 5,\n        '&.isDraggingOver': {\n            backgroundColor: '#dadadf',\n        },\n    },\n});\n\nexport const DealColumn = ({\n    stage,\n    dealIds,\n    data,\n}: {\n    stage: string;\n    dealIds: Identifier[];\n    data: RecordMap<Deal>;\n}) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography align=\"center\" variant=\"subtitle1\">\n                {/* @ts-ignore */}\n                {stageNames[stage]}\n            </Typography>\n            <Droppable droppableId={stage}>\n                {(droppableProvided, snapshot) => (\n                    <div\n                        ref={droppableProvided.innerRef}\n                        {...droppableProvided.droppableProps}\n                        className={\n                            classes.droppable +\n                            (snapshot.isDraggingOver ? ' isDraggingOver' : '')\n                        }\n                    >\n                        {dealIds.map((id, index) => (\n                            <DealCard key={id} index={index} deal={data[id]} />\n                        ))}\n                        {droppableProvided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport {\n    useMutation,\n    Identifier,\n    useListContext,\n    RecordMap,\n    DataProviderContext,\n} from 'react-admin';\nimport { Box } from '@material-ui/core';\nimport { DragDropContext, OnDragEndResponder } from 'react-beautiful-dnd';\nimport isEqual from 'lodash/isEqual';\n\nimport { DealColumn } from './DealColumn';\nimport { stages } from './stages';\nimport { Deal } from '../types';\n\ninterface DealsByColumn {\n    [stage: string]: Identifier[];\n}\n\nconst initialDeals: DealsByColumn = stages.reduce(\n    (obj, stage) => ({ ...obj, [stage]: [] }),\n    {}\n);\n\nconst getDealsByColumn = (\n    ids: Identifier[],\n    data: RecordMap<Deal>\n): DealsByColumn => {\n    // group deals by column\n    const columns = ids.reduce(\n        (acc, id) => {\n            acc[data[id].stage].push(id);\n            return acc;\n        },\n        stages.reduce((obj, stage) => ({ ...obj, [stage]: [] }), {} as any)\n    );\n    // order each column by index\n    stages.forEach(stage => {\n        columns[stage] = columns[stage].sort(\n            (a: Identifier, b: Identifier) => data[a].index - data[b].index\n        );\n    });\n    return columns;\n};\n\nexport const DealListContent = () => {\n    const {\n        data,\n        ids,\n        loaded,\n        page,\n        perPage,\n        currentSort,\n        filterValues,\n    } = useListContext<Deal>();\n\n    const [deals, setDeals] = useState<DealsByColumn>(\n        loaded ? getDealsByColumn(ids, data) : initialDeals\n    );\n    // we use the raw dataProvider to avoid too many updates to the Redux store after updates (which would create junk)\n    const dataProvider = useContext(DataProviderContext);\n\n    // FIXME: use refetch when available\n    const [refresh] = useMutation({\n        resource: 'deals',\n        type: 'getList',\n        payload: {\n            pagination: { page, perPage },\n            sort: currentSort,\n            filter: filterValues,\n        },\n    });\n\n    // update deals by columns when the dataProvider response updates\n    useEffect(() => {\n        if (!loaded) return;\n        const newDeals = getDealsByColumn(ids, data);\n        if (isEqual(deals, newDeals)) {\n            return;\n        }\n        setDeals(newDeals);\n    }, [data, ids, loaded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!loaded) return null;\n\n    const onDragEnd: OnDragEndResponder = async result => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // moving deal inside the same column\n\n            const column = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const sourceDeal = data[column[source.index]];\n            const destinationDeal = data[column[destination.index]];\n\n            // update local state\n            // remove source deal from column\n            column.splice(source.index, 1);\n            // read source deal at destination\n            column.splice(destination.index, 0, Number(draggableId));\n            setDeals({\n                ...deals,\n                [source.droppableId]: column,\n            });\n\n            // update backend\n            // Fetch all the deals in this stage (because the list may be filtered, but we need to update even non-filtered deals)\n            const { data: columnDeals } = await dataProvider.getList('deals', {\n                sort: { field: 'index', order: 'ASC' },\n                pagination: { page: 1, perPage: 100 },\n                filter: { stage: source.droppableId },\n            });\n\n            if (source.index > destination.index) {\n                // deal moved up, eg\n                // dest   src\n                //  <------\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between destination.index and source.index, increase the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index >= destinationDeal.index &&\n                                deal.index < sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index + 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            } else {\n                // deal moved down, e.g\n                // src   dest\n                //  ------>\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between source.index and destination.index, decrease the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index <= destinationDeal.index &&\n                                deal.index > sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index - 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            }\n        } else {\n            // moving deal across columns\n\n            const sourceColumn = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const destinationColumn = Array.from(\n                deals[destination.droppableId]\n            ); // [4, 7, 23, 5] arrays of ids\n            const sourceDeal = data[sourceColumn[source.index]];\n            const destinationDeal = data[destinationColumn[destination.index]]; // may be undefined if dropping at the end of a column\n\n            // update local state\n            sourceColumn.splice(source.index, 1);\n            destinationColumn.splice(destination.index, 0, draggableId);\n            setDeals({\n                ...deals,\n                [source.droppableId]: sourceColumn,\n                [destination.droppableId]: destinationColumn,\n            });\n\n            // update backend\n            // Fetch all the deals in both stages (because the list may be filtered, but we need to update even non-filtered deals)\n            const [\n                { data: sourceDeals },\n                { data: destinationDeals },\n            ] = await Promise.all([\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: source.droppableId },\n                }),\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: destination.droppableId },\n                }),\n            ]);\n\n            await Promise.all([\n                // decrease index on the deals after the source index in the source columns\n                ...sourceDeals\n                    .filter(deal => deal.index > sourceDeal.index)\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index - 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // increase index on the deals after the destination index in the destination columns\n                ...destinationDeals\n                    .filter(deal =>\n                        destinationDeal\n                            ? deal.index >= destinationDeal.index\n                            : false\n                    )\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index + 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // change the dragged deal to take the destination index and column\n                dataProvider.update('deals', {\n                    id: sourceDeal.id,\n                    data: {\n                        index: destinationDeal\n                            ? destinationDeal.index\n                            : (destinationDeals.length > 0)\n                            ? destinationDeals.pop()!.index + 1 \n                            : 0,\n                        stage: destination.droppableId,\n                    },\n                    previousData: sourceDeal,\n                }),\n            ]);\n\n            refresh();\n        }\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Box display=\"flex\">\n                {stages.map(stage => (\n                    <DealColumn\n                        stage={stage}\n                        dealIds={deals[stage]}\n                        data={data}\n                        key={stage}\n                    />\n                ))}\n            </Box>\n        </DragDropContext>\n    );\n};\n","export const types = [\n    'Other',\n    'Copywriting',\n    'Print project',\n    'UI Design',\n    'Website design',\n];\n\nexport const typeChoices = types.map(type => ({ id: type, name: type }));\n","import * as React from 'react';\nimport {\n    Create,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    NumberInput,\n    ReferenceInput,\n    AutocompleteInput,\n    required,\n    useRedirect,\n    useDataProvider,\n    useGetIdentity,\n} from 'react-admin';\nimport { Dialog } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stageChoices } from './stages';\nimport { typeChoices } from './types';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n});\n\nexport const DealCreate = ({ open }: { open: boolean }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const dataProvider = useDataProvider();\n    const { identity } = useGetIdentity();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    const onSuccess = ({ data: deal }: { data: Deal }) => {\n        redirect('/deals');\n        // increase the index of all deals in the same stage as the new deal\n        dataProvider\n            .getList('deals', {\n                pagination: { page: 1, perPage: 50 },\n                sort: { field: 'id', order: 'ASC' },\n                filter: { stage: deal.stage },\n            })\n            .then(({ data: deals }) =>\n                Promise.all(\n                    deals\n                        .filter(oldDeal => oldDeal.id !== deal.id)\n                        .map(oldDeal =>\n                            dataProvider.update('deals', {\n                                id: oldDeal.id,\n                                data: { index: oldDeal.index + 1 },\n                                previousData: oldDeal,\n                            })\n                        )\n                )\n            );\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Create\n                resource=\"deals\"\n                basePath=\"/deals\"\n                className={classes.root}\n                onSuccess={onSuccess}\n            >\n                <SimpleForm initialValues={{ index: 0, sales_id: identity && identity?.id }}>\n                    <TextInput\n                        source=\"name\"\n                        label=\"Deal name\"\n                        fullWidth\n                        validate={[required()]}\n                    />\n                    <TextInput\n                        source=\"description\"\n                        multiline\n                        rows={3}\n                        fullWidth\n                    />\n                    <ReferenceInput\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        fullWidth\n                        validate={[required()]}\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <SelectInput\n                        source=\"stage\"\n                        choices={stageChoices}\n                        fullWidth\n                        validate={[required()]}\n                        defaultValue=\"opportunity\"\n                    />\n                    <SelectInput\n                        source=\"type\"\n                        choices={typeChoices}\n                        fullWidth\n                    />\n                    <NumberInput source=\"amount\" fullWidth defaultValue={0} />\n                    <ReferenceInput\n                        source=\"sales_id\"\n                        reference=\"sales\"\n                        label=\"Account manager\"\n                        helperText={false}\n                        fullWidth\n                    >\n                        <SelectInput\n                            optionText={(sales: any) =>\n                                `${sales.first_name} ${sales.last_name}`\n                            }\n                        />\n                    </ReferenceInput>\n                </SimpleForm>\n            </Create>\n        </Dialog>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { Link } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    ul: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        display: 'inline-block',\n    },\n    li: {\n        display: 'inline',\n        '&:after': {\n            content: '\", \"',\n        },\n        '&:last-child:after': {\n            content: '\"\"',\n        },\n    },\n});\n\nexport const ContactList = () => {\n    const { ids, data, loaded } = useListContext();\n    const classes = useStyles();\n    if (!loaded) return <div style={{ height: '2em' }} />;\n    return (\n        <ul className={classes.ul}>\n            {ids.map(id => (\n                <li key={id} className={classes.li}>\n                    <Link\n                        component={RouterLink}\n                        to={`/contacts/${id}`}\n                        variant=\"subtitle1\"\n                    >\n                        {data[id].first_name} {data[id].last_name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n","import * as React from 'react';\nimport {\n    ShowBase,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    ReferenceArrayField,\n    useRecordContext,\n    useRedirect,\n    useRefresh,\n    useDataProvider,\n    Identifier,\n} from 'react-admin';\nimport {\n    Box,\n    Dialog,\n    DialogContent,\n    Typography,\n    Divider,\n    Button,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format } from 'date-fns';\n\nimport { CompanyAvatar } from '../companies/CompanyAvatar';\nimport { NotesIterator } from '../notes';\nimport { ContactList } from './ContactList';\nimport { stageNames } from './stages';\n\nconst useStyles = makeStyles({\n    dialog: {\n        position: 'absolute',\n        top: 50,\n    },\n});\n\nexport const DealShow = ({ open, id }: { open: boolean; id: Identifier }) => {\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            fullWidth\n            maxWidth=\"md\"\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogContent>\n                <ShowBase resource=\"deals\" basePath=\"/deals\" id={id}>\n                    <DealShowContent />\n                </ShowBase>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nconst DealShowContent = () => {\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    \n    if (!record) return null;\n\n    const onDelete = async() =>{\n        const { data: columnDeals } = await dataProvider.getList('deals', {\n            sort: { field: 'index', order: 'ASC' },\n            pagination: { page: 1, perPage: 100 },\n            filter: { stage: record.droppableId },\n        });\n        await Promise.all([\n            ...columnDeals\n                .filter(\n                    deal => deal.index < record.index\n                )\n                .map(deal =>\n                    dataProvider.update('deals', {\n                        id: deal.id,\n                        data: { index: deal.index - 1 },\n                        previousData: deal,\n                    })\n                ),\n            // for the deal that was moved, update its index\n            dataProvider.delete('deals', {\n                id: record.id,\n                previousData: record,\n            }),\n        ]);\n        redirect('/deals');\n        refresh();\n    };\n\n    return (\n        <>\n            <Box display=\"flex\">\n                <Box\n                    width={100}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                >\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <CompanyAvatar />\n                    </ReferenceField>\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <TextField\n                            source=\"name\"\n                            align=\"center\"\n                            component=\"div\"\n                        />\n                    </ReferenceField>\n                </Box>\n                <Box ml={2} flex=\"1\">\n                    <Box display=\"flex\" justifyContent=\"space-between\" >\n                        <Typography variant=\"h5\">{record.name}</Typography>\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<DeleteIcon />}            \n                            onClick={(e:any) =>{\n                                e.stopPropagation();\n                                onDelete();\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </Box>\n\n                    <Box display=\"flex\" mt={2}>\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Start\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {format(new Date(record.start_at), 'PP')}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Budget\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.amount.toLocaleString('en-US', {\n                                    notation: 'compact',\n                                    style: 'currency',\n                                    currency: 'USD',\n                                    currencyDisplay: 'narrowSymbol',\n                                    minimumSignificantDigits: 3,\n                                })}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Type\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.type}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Stage\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {/* @ts-ignore */}\n                                {stageNames[record.stage]}\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2}>\n                        <Box\n                            display=\"flex\"\n                            mr={5}\n                            flexDirection=\"column\"\n                            minHeight={48}\n                        >\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Contacts\n                            </Typography>\n                            <ReferenceArrayField\n                                source=\"contact_ids\"\n                                reference=\"contacts\"\n                            >\n                                <ContactList />\n                            </ReferenceArrayField>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2} style={{ whiteSpace: 'pre-line' }}>\n                        <Typography color=\"textSecondary\" variant=\"body2\">\n                            Description\n                        </Typography>\n                        <Typography>{record.description}</Typography>\n                    </Box>\n\n                    <Divider />\n\n                    <Box mt={2}>\n                        <ReferenceManyField\n                            target=\"deal_id\"\n                            reference=\"dealNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator reference=\"deals\" />\n                        </ReferenceManyField>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useListFilterContext, useGetIdentity } from 'react-admin';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const OnlyMineInput = ({ alwaysOn }: { alwaysOn: boolean }) => {\n    const {\n        filterValues,\n        displayedFilters,\n        setFilters,\n    } = useListFilterContext();\n    const { identity } = useGetIdentity();\n    const classes = useStyles();\n    const handleChange = () => {\n        const newFilterValues = { ...filterValues };\n        if (typeof filterValues.sales_id !== 'undefined') {\n            delete newFilterValues.sales_id;\n        } else {\n            newFilterValues.sales_id = identity && identity?.id;\n        }\n        setFilters(newFilterValues, displayedFilters);\n    };\n    return (\n        <div className={classes.root}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={typeof filterValues.sales_id !== 'undefined'}\n                        onChange={handleChange}\n                        color=\"primary\"\n                        name=\"checkedC\"\n                    />\n                }\n                label=\"Only companies I manage\"\n            />\n        </div>\n    );\n};\n\nOnlyMineInput.defaultProps = { source: 'sales_id' };\n","import * as React from 'react';\nimport {\n    CreateButton,\n    ExportButton,\n    FilterButton,\n    List,\n    ListProps,\n    SearchInput,\n    SelectInput,\n    TopToolbar,\n    useGetIdentity,\n} from 'react-admin';\nimport { Route } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DealListContent } from './DealListContent';\nimport { DealCreate } from './DealCreate';\nimport { DealShow } from './DealShow';\nimport { OnlyMineInput } from './OnlyMineInput';\nimport { typeChoices } from './types';\n\nexport const DealList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <>\n            <List\n                {...props}\n                perPage={100}\n                sort={{ field: 'index', order: 'ASC' }}\n                filters={dealFilters}\n                filterDefaultValues={{ sales_id: identity && identity?.id }}\n                actions={<DealActions />}\n                pagination={false}\n                component=\"div\"\n            >\n                <DealListContent />\n            </List>\n            <Route path=\"/deals/create\">\n                {({ match }) => <DealCreate open={!!match} />}\n            </Route>\n            <Route path=\"/deals/:id/show\">\n                {({ match }) =>\n                    !!match ? (\n                        <DealShow open={!!match} id={match?.params?.id} />\n                    ) : null\n                }\n            </Route>\n        </>\n    ) : null;\n};\n\nconst dealFilters = [\n    <SearchInput source=\"q\" alwaysOn />,\n    <OnlyMineInput alwaysOn />,\n    <SelectInput source=\"type\" choices={typeChoices} />,\n];\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst DealActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <FilterButton />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/deals\"\n                variant=\"contained\"\n                label=\"New Deal\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { DealList } from './DealList';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nexport default {\n    list: DealList,\n    icon: MonetizationOnIcon,\n};\n","export const categories = [\n    'Safety laser scanners', \n    '2D LiDAR sensors', \n    '3D LiDAR sensors', \n    'Cleaning Robot',\n].map(category => ({ id: category, name: category }));","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nimport { ProductFamily } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\nimport { categories } from '../productFamilies/categories';\n\nconst useStyles = makeStyles(theme => ({\n    familyList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    categoryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const ProductListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: familyData, ids: familyIds } = useGetList<ProductFamily>(\n        'productFamilies',\n        { page: 1, perPage: 1000 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Families\" icon={<CategoryIcon />}>\n                <div className={classes.familyList}>\n                    {familyIds &&\n                        familyData &&\n                        familyIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<Chip label={familyData[id].name} size=\"small\"/>}\n                                value={{ family_id: id }}\n                            />\n                        ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Categories\" icon={<CategoryIcon />}>\n                <div className={classes.categoryList}>\n                    {categories.map(category => (\n                            <FilterListItem\n                                key={category.id}\n                                label={category.name}\n                                value={{ 'family.category': category.id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ProductGridList } from './ProductGridList';\nimport { ProductListFilter } from './ProductListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\n\nexport const ProductList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<ProductListActions />}\n            aside={<ProductListFilter />}\n            filterDefaultValues={{ }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n            perPage={25}\n            sort={{ field: 'model', order: 'ASC' }}\n            component=\"div\"\n        >\n            <ProductGridList />\n        </List>\n    ) : null;\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ProductListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/products\"\n                variant=\"contained\"\n                label=\"New Product\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n    ReferenceInput,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    DialogTitle,\n } from '@material-ui/core';\n import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nexport const CreatePropertyType = () => {\n    const classes = useStyles();\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [unit, setUnit] = useState('');\n    const [synonyms, setSynonyms] = useState('');\n    const [create] = useCreate('propertyTypes');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        unit: unit,\n                        synonyms: synonyms,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: any;}) => {\n                    setName('');\n                    setUnit('');\n                    setSynonyms('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>Add new Product Property Type</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <div className={classes.root}>\n                        <TextField\n                            label=\"New type name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                            required\n                        />\n                        <TextField\n                            label=\"Unit\"\n                            value={unit}\n                            onChange={event => setUnit(event.target.value)}\n                        />\n                        <TextField\n                            label=\"Commma separated synonyms\"\n                            value={synonyms}\n                            onChange={event => setSynonyms(event.target.value)}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" disabled={!name}>Add</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import { \n    AutocompleteInput, \n    ReferenceInput, \n    SimpleFormIterator,\n    SimpleFormIteratorProps, \n    TextInput, \n} from \"react-admin\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nimport { CreatePropertyType } from \"./CreatePropertyType\";\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(1),\n        width: '32%',\n        minWidth: theme.spacing(10),\n        '&.first-child': {\n            marginLeft: 0,\n        },\n        [theme.breakpoints.down('xs')]: {\n            display: 'block',\n            marginLeft: 0,\n            width: '100%',\n            margin: 0,\n        }\n    },\n    \n}));\n\nexport const PropertyFormIterator = (props: SimpleFormIteratorProps) => {\n    const classes = useStyles();\n    return (\n        <SimpleFormIterator {...props} >\n            <ReferenceInput\n                source=\"type_id\"\n                reference=\"propertyTypes\"\n                label=\"Type\"\n                formClassName={classNames(classes.inline, 'first-child')}\n                fullWidth\n            >\n                <AutocompleteInput \n                    optionText=\"name\" \n                    create={<CreatePropertyType />}\n                />\n            </ReferenceInput>\n            <TextInput \n                source=\"property_value\" \n                label=\"Value\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n            <TextInput \n                source=\"condition\"  \n                label=\"Condition\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n        </SimpleFormIterator>\n    );\n};","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    Select,\n    MenuItem,\n    Box,\n    DialogTitle,\n } from '@material-ui/core';\n import { ProductFamily } from '../types';\n import { categories } from './categories';\n\nexport const CreateProductFamily = () => {\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [category, setCategory] = useState('');\n    const [website, setWebsite] = useState('');\n    const [image, setImage] = useState('');\n    const [create] = useCreate('productFamilies');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        image: image,\n                        website: website,\n                        category: category,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: ProductFamily;}) => {\n                    setName('');\n                    setImage('');\n                    setWebsite('');\n                    setCategory('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>New Product Category</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Select\n                            label=\"Category\"\n                            value={category}\n                            onChange={(event:any) => setCategory(event.target.value)}\n                        >\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\n                            {categories.map(category => (\n                                <MenuItem\n                                    key={category.id}\n                                    value={category.id}\n                                >\n                                    {category.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n\n                        <TextField\n                            label=\"New category name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            label=\"Website\"\n                            value={website}\n                            onChange={event => setWebsite(event.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            label=\"Image\"\n                            value={image}\n                            onChange={event => setImage(event.target.value)}\n                            autoFocus\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\">Save</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    TabbedForm,\n    TextInput,\n    FormTab,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    ArrayInput,\n    SimpleFormIterator,\n    ReferenceArrayInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { Box, CardContent, Divider, Avatar, useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\nimport { CreateProductFamily } from '../productFamilies/CreateProductFamily';\n\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n    propertyContainer: {\n        display: 'flex',\n        gap: theme.spacing(1),\n        minWidth: '500px',\n    },\n}));\n\nexport const ProductCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const theme = useTheme();\n\n    const defaultValue = () => ({ });\n\n    return (\n        <Create {...props} actions={false} >\n            <TabbedForm redirect=\"show\">\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput \n                            optionText=\"name\" \n                            create={<CreateProductFamily />}\n                        />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <ShoppingCartIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth=\"80%\">\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const ProductImageField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: Product;\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.image) return (\n        <Avatar>\n            <ShoppingCartIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            title={record.model}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n} from 'react-admin';\nimport { Box, Typography, Divider, Link } from '@material-ui/core';\n\nimport { Product, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ProductAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: Product;\n    link?: string;\n}) =>{\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/products\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Product;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Product info</Typography>\n            <Divider />\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Company: \n                <ReferenceField\n                    record={record}\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Family: \n                <ReferenceField\n                    record={record}\n                    source=\"family_id\"\n                    reference=\"productFamilies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1}>\n                Code: <TextField source=\"code\" record={record} />\n            </Box>\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n\n            <Box mt={3}>\n                <Typography variant=\"subtitle2\">Description</Typography>\n                <Divider />\n\n                <Box mt={1}>\n                    <TextField source=\"description\" />\n                </Box>\n\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    EditButton,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    Datagrid,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { NotesIterator } from '../notes';\n\n\nimport { ProductImageField } from './ProductImageField';\nimport { ProductAside } from './ProductAside';\nimport { Product, ProductPrperty } from '../types';\nimport { LogoField } from '../companies/LogoField';\nimport { CompanyGridList } from '../companies/CompanyGridList';\nimport { CompanyCard } from '../companies/CompanyCard';\n\nexport const ProductShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductShowContent />\n    </ShowBase>\n);\n\nconst ProductShowContent = () => {\n    const { record, loaded } = useShowContext<Product>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <ProductImageField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.model}</Typography>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes > 1\n                                        ? `${record.nb_notes} Notes`\n                                        : `${record.nb_notes} Note`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_properties > 1\n                                        ? `${record.nb_properties} Properties`\n                                        : `${record.nb_properties} Property`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_used_by > 1\n                                        ? `Used by ${record.nb_used_by} Companies`\n                                        : `Used by ${record.nb_used_by} Company`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"productNotes\"\n                                target=\"product_id\"\n                            >\n                                 <NotesIterator reference=\"products\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField reference=\"productProperties\" target=\"product_id\" addLabel={false}>\n                                <Datagrid>\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                    <TextField source=\"property_value\" />\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"unit\" />\n                                    </ReferenceField>\n                                    <TextField source=\"condition\" />\n    \n                                </Datagrid>\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Box mt={1}>\n                            <ReferenceArrayField\n                                reference=\"companies\"\n                                source=\"used_by_companies\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <CompanyGridList />\n                            </ReferenceArrayField>\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ProductPrpertiesIterator = () => {\n    const { data, ids, loaded } = useListContext<ProductPrperty>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const productProperty = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/productProperties/${id}/show`}\n                        >\n                            {/* <ListItemAvatar>\n                                <Avatar record={productProperty} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${productProperty.first_name} ${productProperty.last_name}`}\n                                secondary={\n                                    <>\n                                        {productProperty.title}{' '}\n                                        {productProperty.nb_notes &&\n                                        `- ${productProperty.nb_notes} notes `}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(productProperty.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={productProperty.status} />\n                                </Typography>\n                            </ListItemSecondaryAction> */}\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                {/* <CreateRelatedProductPrpertyButton record={record} /> */}\n            </Box>\n        </Box>\n    );\n};\n\n// const CreateRelatedProductPrpertyButton = ({ record }: any) => (\n//     <Button\n//         component={RouterLink}\n//         to={{\n//             pathname: '/productProperties/create',\n//             state: { record: { product_id: record.id } },\n//         }}\n//         color=\"primary\"\n//         variant=\"contained\"\n//         size=\"small\"\n//         startIcon={<PersonAddIcon />}\n//     >\n//         Add property\n//     </Button>\n// );\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    TabbedForm,\n    FormTab,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    required,\n    ArrayInput,\n    SimpleFormIterator,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductAside } from './ProductAside';\nimport { ProductImageField } from './ProductImageField';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const ProductEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit \n            {...props} \n            aside={<ProductAside link=\"show\" />} \n            actions={false}\n        >\n            <TabbedForm\n                redirect=\"show\"\n            >\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <ProductImageField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductList } from './ProductList';\nimport { ProductCreate } from './ProductCreate';\nimport { ProductShow } from './ProductShow';\nimport { ProductEdit } from './ProductEdit';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    show: ProductShow,\n    icon: FiberManualRecordIcon,\n};\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { ProductFamily } from '../types';\n\nexport const Avatar = ({ record }: { record: ProductFamily }) => (\n    <MuiAvatar src={record.image}>\n        {record.name}\n    </MuiAvatar>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const ProductFamilyListFilter = () => {\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    SelectField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ProductFamilyListFilter } from './ProductFamilyListFilter';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst ProductFamilyListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        ProductFamily\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const record = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/productFamilies/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={record} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${record.name}`}\n                            secondary={\n                                <>\n                                    {record.name} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst ProductFamilyListActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/productFamilies\"\n                variant=\"contained\"\n                label=\"Add New\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ProductFamilyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ProductFamilyListActions />}\n            aside={<ProductFamilyListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{  }}\n            // sort={{  }}\n        >\n            <ProductFamilyListContent />\n        </RaList>\n    ) : null;\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport { \n    Card, \n    CardContent, \n    Divider, \n    Box, \n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n } from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ProductFamilyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n\n    const contactDefaultValue = () => ({ });\n    const transform = (data: ProductFamily) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <SelectInput\n                    source=\"category\"\n                    choices={categories}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"name\" fullWidth />\n                <TextInput source=\"website\" fullWidth />\n                <TextInput source=\"image\" fullWidth />\n                <TextInput \n                    source=\"description\"\n                    multiline\n                    rows={3} \n                    fullWidth \n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <CategoryIcon />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    SelectField,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider,\n    Link,\n } from '@material-ui/core';\n\nimport { ProductFamily, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { categories } from './categories';\n\nexport const ProductFamilyAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: ProductFamily;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/productFamilies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: ProductFamily;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Family info</Typography>\n            <Divider />\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                <Typography>Category:</Typography>\n                <SelectField\n                    source=\"category\"\n                    choices={categories}\n                />\n            </Box>\n\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ProductFamilyEditContent = () => {\n    const { record, loaded, save } = useEditContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex={1}>\n                                            <SelectInput\n                                                source=\"category\"\n                                                choices={categories}\n                                            />\n                                            <TextInput source=\"name\" fullWidth />\n                                            <TextInput source=\"website\" fullWidth />\n                                            <TextInput source=\"image\" fullWidth />\n                                            <TextInput \n                                                source=\"description\"\n                                                multiline\n                                                rows={3} \n                                                fullWidth \n                                            />\n                                        </Box>\n                                        \n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ProductFamilyAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ProductFamilyEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ProductFamilyEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n    SelectField,\n    Pagination,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { ProductFamily } from '../types';\nimport { ProductGridList } from '../products/ProductGridList';\nimport { categories } from './categories';\n\nexport const ProductFamilyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductFamilyShowContent />\n    </ShowBase>\n);\n\nconst ProductFamilyShowContent = () => {\n    const { record, loaded } = useShowContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {record.title} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box mt={2} p={1}>\n                            <ReferenceManyField\n                                reference=\"products\"\n                                target=\"family_id\"\n                                label=\"Products\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <ProductGridList />\n                            </ReferenceManyField>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductFamilyAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductFamilyList } from './ProductFamilyList';\nimport { ProductFamilyCreate } from './ProductFamilyCreate';\nimport { ProductFamilyEdit } from './ProductFamilyEdit';\nimport { ProductFamilyShow } from './ProductFamilyShow';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nexport default {\n    list: ProductFamilyList,\n    create: ProductFamilyCreate,\n    edit: ProductFamilyEdit,\n    show: ProductFamilyShow,\n    icon: CategoryIcon,\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport {\n    useTranslate,\n    DashboardMenuItem,\n    MenuItemLink,\n    MenuProps,\n    ReduxState,\n} from 'react-admin';\n\n\nimport SubMenu from './SubMenu';\nimport { AppState } from '../types';\n\nimport companies from '../companies';\nimport contacts from '../contacts';\nimport tasks from '../tasks';\nimport deals from '../deals';\nimport products from '../products';\nimport productFamilies from '../productFamilies';\n\n\n\ntype MenuName = 'menuCrm' | 'menuProduct' | 'menuCustomers';\n\nconst Menu = ({ dense = false }: MenuProps) => {\n    const [state, setState] = useState({\n        menuCrm: true,\n        menuProduct: true,\n        menuCustomers: true,\n    });\n    const translate = useTranslate();\n    const open = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen);\n    useSelector((state: AppState) => state.theme); // force rerender on theme change\n    const classes = useStyles();\n\n    const handleToggle = (menu: MenuName) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div\n            className={classnames(classes.root, {\n                [classes.open]: open,\n                [classes.closed]: !open,\n            })}\n        >\n            {' '}\n            <DashboardMenuItem />\n            <SubMenu\n                handleToggle={() => handleToggle('menuCrm')}\n                isOpen={state.menuCrm}\n                name=\"CRM\"\n                icon={<companies.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/companies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Companies\"\n                    leftIcon={<companies.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/contacts',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Contacts\"\n                    leftIcon={<contacts.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/deals',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Deals\"\n                    leftIcon={<deals.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/tasks',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Taks\"\n                    leftIcon={<tasks.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuProduct')}\n                isOpen={state.menuProduct}\n                name=\"Products\"\n                icon={<products.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/products',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Products\"\n                    leftIcon={<products.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/productFamilies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Families\"\n                    leftIcon={<productFamilies.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    open: {\n        width: 200,\n    },\n    closed: {\n        width: 55,\n    },\n}));\n\nexport default Menu;\n","export const darkTheme = {\n    palette: {\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#FBBA72',\n        },\n        type: 'dark' as 'dark', // Switching the dark mode on is a single property value change.\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#ffffffb3',\n                backgroundColor: '#616161e6',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        primary: {\n            main: '#4f3cc9',\n        },\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n        background: {\n            default: '#fcfcfe',\n        },\n        type: 'light' as 'light',\n    },\n    shape: {\n        borderRadius: 10,\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        RaMenuItemLink: {\n            root: {\n                borderLeft: '3px solid #fff',\n            },\n            active: {\n                borderLeft: '3px solid #4f3cc9',\n            },\n        },\n        MuiPaper: {\n            elevation1: {\n                boxShadow: 'none',\n            },\n            root: {\n                border: '1px solid #e0e0e3',\n                backgroundClip: 'padding-box',\n            },\n        },\n        MuiButton: {\n            contained: {\n                backgroundColor: '#fff',\n                color: '#4f3cc9',\n                boxShadow: 'none',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#808080',\n                backgroundColor: '#fff',\n            },\n        },\n        MuiLinearProgress: {\n            colorPrimary: {\n                backgroundColor: '#f5f5f5',\n            },\n            barColorPrimary: {\n                backgroundColor: '#d7d7d7',\n            },\n        },\n        MuiFilledInput: {\n            root: {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                '&$disabled': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n            },\n        },\n        MuiSnackbarContent: {\n            root: {\n                border: 'none',\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n","import * as React from 'react';\n\n\nimport { \n    Notification, \n    NotificationProps,\n} from 'react-admin';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst NotificationContainer = (props: any) => {\n    const classes = useStyles();\n    return (\n        <Notification {...props} autoHideDuration={5000} />\n    )\n}\n\nexport default NotificationContainer;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Layout, LayoutProps } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme } from './themes';\nimport { AppState } from '../types';\nimport NotificationContainer from '../notifications/NotificationContainer';\n\nexport default (props: LayoutProps) => {\n    const theme = useSelector((state: AppState) =>\n        state.theme === 'dark' ? darkTheme : lightTheme\n    );\n\n    return (\n        <Layout \n            {...props} \n            appBar={AppBar} \n            menu={Menu} \n            theme={theme} \n            notification={NotificationContainer}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, withTypes } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Link,\n    Typography,\n} from '@material-ui/core';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Notification, useTranslate, useLogin, useNotify } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        // marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst renderInput = ({\n    meta: { touched, error } = { touched: false, error: undefined },\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    username?: string;\n    password?: string;\n}\n\nconst { Form } = withTypes<FormValues>();\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const translate = useTranslate();\n    const classes = useStyles();\n    const notify = useNotify();\n    const login = useLogin();\n    const location = useLocation<{ nextPathname: string } | null>();\n\n    const handleSubmit = async (auth: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await login(auth, location.state ? location.state.nextPathname : '/');\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    const validate = ({\n        username,\n        password,\n    }: FormValues) => {\n        const errors = { \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined,\n        };\n        return errors;\n    };\n\n    return (\n        <Form\n            onSubmit={handleSubmit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className={classes.main}>\n                        <Card className={classes.card}>\n                            <div className={classes.avatar}>\n                                <Avatar className={classes.icon}>\n                                    <LockIcon />\n                                </Avatar>\n                            </div>\n                            <div className={classes.hint}>\n                                Wecome to Assistor.\n                            </div>\n                            <div className={classes.form}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        name=\"username\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                    />\n                                </div>\n                                <div className={classes.input}>\n                                    <Field\n                                        name=\"password\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </div>\n                            <CardActions className={classes.actions}>\n                                <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    fullWidth\n                                >\n                                    {loading && (\n                                        <CircularProgress\n                                            size={25}\n                                            thickness={2}\n                                        />\n                                    )}\n                                    {translate('ra.auth.sign_in')}\n                                </Button>\n                                <Typography variant=\"body2\">Or</Typography>\n                                <Link\n                                    color=\"textSecondary\"\n                                    component={RouterLink}\n                                    to=\"/register\"\n                                    variant=\"body1\"\n                                >\n                                    Register\n                                </Link>\n                            </CardActions>\n                        </Card>\n                        <Notification />\n                    </div>\n                </form>\n            )}\n        />\n    );\n};\n\nLogin.propTypes = {\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n};\n\n// We need to put the ThemeProvider decoration in another component\n// Because otherwise the useStyles() hook used in Login won't get\n// the right theme\nconst LoginWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Login {...props} />\n    </ThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Card, Box, Link } from '@material-ui/core';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport { useGetList, SimpleList, useGetIdentity } from 'react-admin';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Contact } from '../types';\n\nexport const HotContacts = () => {\n    const { identity } = useGetIdentity();\n    const {\n        data: contactData,\n        ids: contactIds,\n        total: contactTotal,\n        loaded: contactsLoaded,\n    } = useGetList<Contact>(\n        'contacts',\n        { page: 1, perPage: 10 },\n        { field: 'last_seen', order: 'DESC' },\n        { status: 'hot', sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <ContactsIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Link\n                    underline=\"none\"\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                    component={RouterLink}\n                    to=\"/contacts\"\n                >\n                    Hot contacts\n                </Link>\n            </Box>\n            <Card>\n                <SimpleList<Contact>\n                    basePath=\"/contacts\"\n                    linkType=\"show\"\n                    ids={contactIds}\n                    data={contactData}\n                    total={contactTotal}\n                    loaded={contactsLoaded}\n                    primaryText={contact =>\n                        `${contact.first_name} ${contact.last_name}`\n                    }\n                    secondaryText={contact =>\n                        formatDistance(\n                            new Date(contact.last_seen),\n                            new Date(),\n                            {\n                                addSuffix: true,\n                            }\n                        )\n                    }\n                    leftAvatar={contact => <Avatar record={contact} />}\n                />\n            </Card>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Card, CardContent, Typography, Box } from '@material-ui/core';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useGetList,\n    useGetIdentity,\n    ReferenceField,\n    TextField,\n    FunctionField,\n} from 'react-admin';\nimport { formatDistance } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n\nimport { Contact as ContactType } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    note: {\n        marginBottom: theme.spacing(2),\n    },\n    noteText: {\n        backgroundColor: theme.palette.grey[200],\n        padding: theme.spacing(1),\n        borderRadius: 10,\n    },\n    noteTextText: {\n        display: '-webkit-box',\n        '-webkit-line-clamp': 3,\n        '-webkit-box-orient': 'vertical',\n        overflow: 'hidden',\n    },\n}));\n\nexport const LatestNotes = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const {\n        data: contactNotesData,\n        ids: contactNotesIds,\n        loaded: contactNotesLoaded,\n    } = useGetList(\n        'contactNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: dealNotesData,\n        ids: dealNotesIds,\n        loaded: dealNotesLoaded,\n    } = useGetList(\n        'dealNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: companyNotesData,\n        ids: companyNotesIds,\n        loaded: companyNotesLoaded,\n    } = useGetList(\n        'companyNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    if (!contactNotesLoaded || !dealNotesLoaded || !companyNotesLoaded) {\n        return null;\n    }\n    // TypeScript guards\n    if (\n        !contactNotesIds ||\n        !contactNotesData ||\n        !dealNotesIds ||\n        !dealNotesData ||\n        !companyNotesIds ||\n        !companyNotesData\n    ) {\n        return null;\n    }\n\n    const allNotes = ([] as any[])\n        .concat(\n            contactNotesIds.map(id => ({\n                ...contactNotesData[id],\n                type: 'contactNote',\n            })),\n            dealNotesIds.map(id => ({\n                ...dealNotesData[id], \n                type: 'dealNote' \n            })),\n            companyNotesIds.map(id => ({\n                ...companyNotesData[id], \n                type: 'companyNote' \n            })),\n        )\n        .sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf())\n        .slice(0, 5);\n\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <NoteIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    My Latest Notes\n                </Typography>\n            </Box>\n            <Card>\n                <CardContent>\n                    {allNotes.map(note => (\n                        <div\n                            id={`${note.type}_${note.id}`}\n                            key={`${note.type}_${note.id}`}\n                            className={classes.note}\n                        >\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                on{' '}\n                                <NoteSource note={note} />\n                                , added{' '}\n                                {formatDistance(\n                                    new Date(note.date),\n                                    new Date(),\n                                    {\n                                        addSuffix: true,\n                                    }\n                                )}\n                            </Typography>\n                            <div className={classes.noteText}>\n                                <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                            </div>\n                        </div>\n                    ))}\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nconst NoteSource = ({ note }: any) => {\n    if (note.type === 'dealNote'){\n        return <Deal note={note} />;\n    }\n    else if (note.type === 'contactNote') {\n        return <Contact note={note} />;\n    }\n    else if (note.type === 'companyNote') {\n        return <Company note={note} />;\n    }\n    return null;\n};\n\nconst Deal = ({ note }: any) => (\n    <>\n        Deal{' '}\n        <ReferenceField\n            record={note}\n            source=\"deal_id\"\n            reference=\"deals\"\n            basePath=\"/deals\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n\nconst Contact = ({ note }: any) => (\n    <>\n        Contact{' '}\n        <ReferenceField\n            record={note}\n            source=\"contact_id\"\n            reference=\"contacts\"\n            basePath=\"/contacts\"\n            link=\"show\"\n        >\n            <FunctionField<ContactType>\n                variant=\"body1\"\n                render={contact =>\n                    contact ? `${contact.first_name} ${contact.last_name}` : ''\n                }\n            />\n        </ReferenceField>\n    </>\n);\n\nconst Company = ({ note }: any) => (\n    <>\n        Company{' '}\n        <ReferenceField\n            record={note}\n            source=\"company_id\"\n            reference=\"companies\"\n            basePath=\"/companies\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n","import React, { useState, memo } from \"react\";\nimport { \n    ComposableMap, \n    Geographies, \n    Geography, \n    ZoomableGroup,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { geoCentroid } from \"d3-geo\";\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { Country } from '../types';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst Map = memo(({setTooltipContent}: any) => {\n    const { data, ids, loaded } = useGetList<Country>(\n        'countries',\n        { perPage: 1000, page: 1 }\n    );\n    if (!loaded) return null;\n\n    const colorScale = scaleQuantile<string>()\n        .domain([0, max(ids.map(id => data[id].nb_companies))])\n        .range([\n            \"#e1f5fe\",\n            \"#b3e5fc\",\n            \"#81d4fa\",\n            \"#4fc3f7\",\n            \"#29b6f6\",\n            \"#03a9f4\",\n            \"#039be5\",\n            \"#0288d1\",\n            \"#0277bd\"\n        ]);\n\n    return (\n        <ComposableMap\n            data-tip=\"\"\n            projection=\"geoAzimuthalEqualArea\"\n            projectionConfig={{\n                rotate: [-25.0, -50.0, 0],\n                scale: 750\n            }}\n        >\n            <ZoomableGroup\n                center={[0, 0]}\n                zoom={1}\n            >\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) => (\n                        <>\n                            {geographies\n                            .map(geo => {\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <Geography \n                                            key={geo.rsmKey} \n                                            geography={geo} \n                                            fill={cur ? colorScale(data[cur].nb_companies) : \"#D6D6DA\"}\n                                            stroke=\"#EAEAEC\"\n                                            onMouseEnter={() => {\n                                                const { NAME, POP_EST } = geo.properties;\n                                                const nb_companies = cur ? data[cur].nb_companies : 0;\n                                                setTooltipContent(`${NAME} - ${nb_companies}`);\n                                            }}\n                                            onMouseLeave={() => {\n                                                setTooltipContent(\"\");\n                                            }}\n                                        />\n                                );\n                            })}\n                            {/* {geographies.map(geo => {\n                                const centroid = geoCentroid(geo);\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <g key={geo.rsmKey + \"-name\"}>\n                                        {cur &&\n                                            <Marker coordinates={centroid}>\n                                                <text y=\"2\" fontSize={9} textAnchor=\"middle\">\n                                                {data[cur].nicename}\n                                                </text>\n                                            </Marker>\n                                        }\n                                    </g>\n                                );\n                            })} */}\n                        </>\n                    )}\n                </Geographies>\n            </ZoomableGroup>\n        </ComposableMap>\n    );\n});\n\nexport const CompaniesMap = () => {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <div>\n            <Map setTooltipContent={setContent} />\n            <ReactTooltip>{content}</ReactTooltip>\n        </div>\n    );\n}","import * as React from 'react';\nimport { Box, Grid } from '@material-ui/core';\n\nimport { Welcome } from './Welcome';\nimport { DealsChart } from './DealsChart';\nimport { HotContacts } from './HotContacts';\nimport { LatestNotes } from './LatestNotes';\nimport { DealsPipeline } from './DealsPipeline';\nimport { CompaniesMap } from './CompaniesMap';\n\nexport const Dashboard = () => {\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={8}>\n                    <CompaniesMap />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <HotContacts />\n                </Grid>\n                <Grid item xs={12}>\n                    <LatestNotes />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\nimport {\n    Button,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Grid,\n    CardContent,\n    Typography,\n    Link,\n    Container,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    useTranslate, \n    useNotify, \n    useLogin, \n    useSafeSetState, \n    useRedirect,\n    useAuthProvider,\n} from 'react-admin';\nimport axios from 'axios';\n\n\nconst baseURL = \"/auth\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    button: {\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst Input = ({\n    meta: { touched, error }, // eslint-disable-line react/prop-types\n    input: inputProps, // eslint-disable-line react/prop-types\n    ...props\n}: {\n    meta: any;\n    input: any;\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n    confirm: string;\n}\n\nconst RegisterForm = ({ redirectTo }:\n    {redirectTo?: string | undefined;}) => {\n    const authProvider = useAuthProvider();\n    const [loading, setLoading] = useSafeSetState(false);\n    const translate = useTranslate();\n    const login = useLogin();\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const validate = ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password, \n        confirm \n    }: FormValues) => {\n        const errors = { \n            first_name: !first_name ? translate('ra.validation.required') : undefined, \n            last_name: !last_name ? translate('ra.validation.required') : undefined, \n            email: !email ? translate('ra.validation.required') : undefined, \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined, \n            confirm: password !== confirm ? 'Confirmation should match password': undefined\n        };\n        return errors;\n    };\n\n    interface ResponseType {\n        message: string;\n    }\n\n    const submit = async ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password,\n    }: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await authProvider.register({ \n                    first_name,\n                    last_name,\n                    email,\n                    username, \n                    password\n                });\n        \n            setLoading(false)\n            login({ username, password }, redirectTo)\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    return (\n        <Form\n            onSubmit={submit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <CardContent>\n                        <Container maxWidth=\"xs\">\n                        <Grid container spacing={2} >\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"first_name\"\n                                        name=\"first_name\"\n                                        component={Input}\n                                        label=\"First Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"last_name\"\n                                        name=\"last_name\"\n                                        component={Input}\n                                        label=\"Last Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"email\"\n                                        name=\"email\"\n                                        component={Input}\n                                        label=\"Email Address\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"username\"\n                                        name=\"username\"\n                                        component={Input}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"password\"\n                                        name=\"password\"\n                                        component={Input}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"confirm\"\n                                        name=\"confirm\"\n                                        component={Input}\n                                        label=\"Confirm Password\"\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                    </CardContent>\n                    <CardActions className={classes.actions}>\n                        <Button\n                            variant=\"contained\"\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.button}\n                            fullWidth\n                        >\n                            {loading && (\n                                <CircularProgress\n                                    size={25}\n                                    thickness={2}\n                                />\n                            )}\n                            Register\n                        </Button>\n                        <Typography variant=\"body2\">Or</Typography>\n                        <Link\n                            color=\"textSecondary\"\n                            component={RouterLink}\n                            to=\"/login\"\n                            variant=\"body1\"\n                        >\n                            Login\n                        </Link>\n                    </CardActions>\n                </form>\n            )}\n        />\n    );\n};\n\nRegisterForm.propTypes = {\n    redirectTo: PropTypes.string,\n};\n\nexport default RegisterForm;","import React, { ReactNode, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n    Card, \n    CardContent, \n    Theme, \n    Avatar,\n    Grid,\n    Link,\n} from '@material-ui/core';\nimport {\n    Notification,\n} from 'react-admin';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { lightTheme } from '../layout/themes';\n\nimport RegisterForm from './RegisterForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n        main: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '100vh',\n            // height: '1px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundImage:\n                'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        },\n        card: {\n            minWidth: 300,\n            // marginTop: '6em',\n        },\n        avatar: {\n            margin: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n        },\n        icon: {\n            backgroundColor: theme.palette.secondary.main,\n        },\n        hint: {\n            marginTop: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n            color: theme.palette.grey[500],\n        },\n    }),\n    { name: 'Register' }\n);\n\nconst Register = () => {\n    const classes = useStyles();\n    return (\n            <div className={classes.main}>\n                <Card className={classes.card}>\n                    <div className={classes.avatar}>\n                        <Avatar className={classes.icon}>\n                            <ExitToAppIcon />\n                        </Avatar>\n                    </div>\n                    <div className={classes.hint}>\n                                Register to Assistor.\n                            </div>\n                    <RegisterForm />\n                </Card>\n                <Notification />\n            </div>\n    );\n}\n\nconst RegisterWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Register {...props} />\n    </ThemeProvider>\n);\n\nexport default RegisterWithTheme;","import { ThemeName } from '../types';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeTheme } from './actions';\nimport { AppState } from '../types';\n\nconst useStyles = makeStyles({\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n});\n\nconst Configuration = () => {\n    const translate = useTranslate();\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const theme = useSelector((state: AppState) => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <Card>\n            <Title title={translate('app.configuration')} />\n            <CardContent>\n                <div className={classes.label}>\n                    {translate('app.theme.name')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'light' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('light'))}\n                >\n                    {translate('app.theme.light')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'dark' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('dark'))}\n                >\n                    {translate('app.theme.dark')}\n                </Button>\n            </CardContent>\n            <CardContent>\n                <div className={classes.label}>{translate('pos.language')}</div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'en' ? 'primary' : 'default'}\n                    onClick={() => setLocale('en')}\n                >\n                    en\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'fr' ? 'primary' : 'default'}\n                    onClick={() => setLocale('fr')}\n                >\n                    fr\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'ja' ? 'primary' : 'default'}\n                    onClick={() => setLocale('ja')}\n                >\n                    ja\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Configuration;","import * as React from \"react\";\nimport { RouteWithoutLayout } from 'react-admin';\nimport { Route } from 'react-router-dom';\nimport Register from './auth/RegisterPage';\nimport Configuration from './configuration/Configuration';\n\nexport const customRoutes = [\n    <RouteWithoutLayout exact path=\"/register\" component={Register} />,\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n];","import { Reducer } from 'redux';\nimport { CHANGE_THEME, changeTheme } from './configuration/actions';\nimport { ThemeName } from './types';\n\ntype State = ThemeName;\ntype Action =\n    | ReturnType<typeof changeTheme>\n    | { type: 'OTHER_ACTION'; payload?: any };\n\nconst themeReducer: Reducer<State, Action> = (\n    previousState = 'light',\n    action\n) => {\n    if (action.type === CHANGE_THEME) {\n        return action.payload;\n    }\n    return previousState;\n};\n\nexport default themeReducer;","import { TranslationMessages } from 'react-admin';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n\n};\n\nexport default customEnglishMessages;","import * as React from 'react';\nimport { Admin, Resource, ListGuesser, EditGuesser, ShowGuesser, defaultTheme } from 'react-admin';\nimport {\n    unstable_createMuiStrictModeTheme,\n    createTheme,\n} from '@material-ui/core/styles';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\nimport { dataProvider } from './dataProvider';\nimport { authProvider } from './authProvider';\nimport { Login, Layout } from './layout';\nimport contacts from './contacts';\nimport companies from './companies';\nimport products from './products';\nimport tasks from './tasks';\nimport productfamiliess from './productFamilies';\nimport deals from './deals';\nimport { Dashboard } from './dashboard/Dashboard';\nimport { customRoutes } from './customRoutes';\nimport themeReducer from './themeReducer';\n// import Login from './Login'\nimport productFamilies from './productFamilies';\nimport englishMessages from './i18n/en';\n\n// FIXME MUI bug https://github.com/mui-org/material-ui/issues/13394\nconst theme =\n    process.env.NODE_ENV !== 'production'\n        ? unstable_createMuiStrictModeTheme(defaultTheme)\n        : createTheme(defaultTheme);\n\nconst i18nProvider = polyglotI18nProvider(locale => {\n    if (locale === 'fr') {\n        return import('./i18n/fr').then(messages => messages.default);\n    }\n    \n    if (locale === 'ja') {\n        return import('./i18n/ja').then(messages => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n}, 'en');\n\nconst App = () => (\n    <Admin\n        customRoutes={customRoutes}\n        dataProvider={dataProvider}\n        authProvider={authProvider}\n        loginPage={Login}\n        layout={Layout}\n        dashboard={Dashboard}\n        customReducers={{ theme: themeReducer }}\n        i18nProvider={i18nProvider}\n        disableTelemetry\n    >\n        <Resource name=\"deals\" {...deals} />\n        <Resource name=\"contacts\" {...contacts} />\n        <Resource name=\"companies\" {...companies} />\n        <Resource name=\"products\" {...products} />\n        <Resource name=\"productProperties\" />\n        <Resource name=\"propertyTypes\" />\n        <Resource name=\"contactNotes\" />\n        <Resource name=\"companyNotes\" />\n        <Resource name=\"productNotes\" />\n        <Resource name=\"dealNotes\" />\n        <Resource name=\"productFamilies\" {...productFamilies} />\n        <Resource name=\"tasks\" {...tasks} />\n        <Resource name=\"sales\" list={ListGuesser} />\n        <Resource name=\"tags\" list={ListGuesser} />\n        <Resource name=\"countries\" list={ListGuesser} />\n    </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}