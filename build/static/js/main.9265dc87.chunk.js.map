{"version":3,"sources":["auth.ts","authProvider.ts","dataProvider.ts","layout/Logo.tsx","notifications/NotificationButton.tsx","layout/AppBar.tsx","layout/SubMenu.tsx","companies/sectors.ts","companies/CompanyAvatar.tsx","companies/CountryField.tsx","companies/CompanyCard.tsx","companies/CompanyGridList.tsx","companies/relations.ts","tags/TagChip.tsx","components/CollapsibleListFilter.tsx","companies/CompanyListFilter.tsx","companies/SelectAllButton.tsx","companies/CompanyList.tsx","companies/sizes.ts","companies/DistributorInput.tsx","companies/CompanyCreate.tsx","contacts/Avatar.tsx","misc/Status.tsx","tags/TagsList.tsx","companies/LogoField.tsx","tags/colors.ts","components/RoundButton.tsx","tags/TagsListEdit.tsx","components/CollapsibleAside.tsx","products/ProductsListEdit.tsx","companies/CompanyAside.tsx","deals/stages.ts","notes/StatusSelector.tsx","notes/NewNote.tsx","notes/Note.tsx","notes/NotesIterator.tsx","products/ProductAvatar.tsx","products/ProductCard.tsx","products/ProductGridList.tsx","companies/CompanyShow.tsx","companies/CompanyEdit.tsx","companies/index.ts","contacts/ContactAside.tsx","contacts/ContactShow.tsx","contacts/ContactListFilter.tsx","contacts/ContactList.tsx","contacts/ContactEdit.tsx","contacts/ContactCreate.tsx","contacts/index.tsx","tasks/TaskAside.tsx","tasks/status.ts","tasks/TaskChip.tsx","tasks/TaskShow.tsx","tasks/TaskStatus.tsx","tasks/TaskListFilter.tsx","tasks/MarkDoneButton.tsx","tasks/TaskList.tsx","tasks/TaskEdit.tsx","tasks/TaskCreate.tsx","tasks/index.ts","deals/DealCard.tsx","deals/DealColumn.tsx","deals/DealListContent.tsx","deals/types.ts","deals/DealCreate.tsx","deals/ContactList.tsx","deals/DealShow.tsx","deals/OnlyMineInput.tsx","deals/DealList.tsx","deals/index.ts","productFamilies/categories.ts","products/ProductListFilter.tsx","products/ProductList.tsx","products/CreatePropertyType.tsx","products/PropertyFormIterator.tsx","productFamilies/CreateProductFamily.tsx","products/ProductCreate.tsx","products/ProductImageField.tsx","products/ProductAside.tsx","products/ProductShow.tsx","products/ProductEdit.tsx","products/index.ts","productFamilies/Avatar.tsx","productFamilies/ProductFamilyListFilter.tsx","productFamilies/ProductFamilyList.tsx","productFamilies/ProductFamilyCreate.tsx","productFamilies/ProductFamilyAside.tsx","productFamilies/ProductFamilyEdit.tsx","productFamilies/ProductFamilyShow.tsx","productFamilies/index.ts","layout/Menu.tsx","layout/themes.ts","notifications/NotificationContainer.tsx","layout/Layout.tsx","layout/Login.tsx","dashboard/HotContacts.tsx","dashboard/LatestNotes.tsx","dashboard/CompaniesMap.tsx","dashboard/Dashboard.tsx","auth/RegisterForm.tsx","auth/RegisterPage.tsx","configuration/actions.ts","configuration/Configuration.tsx","customRoutes.tsx","i18n/en.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["CREDENTIALS_LOCAL_STORAGE_ITEM","setCredentials","credentials","localStorage","setItem","JSON","stringify","getCredentials","raw","getItem","parse","isTokenValid","access_token","currentDate","Date","decodedToken","decodeJwt","exp","getTime","baseURL","refreshToken","a","token","refresh_token","config","headers","Authorization","axios","post","undefined","response","data","login","username","password","permissions","Promise","resolve","reject","message","msg","status","logout","get","removeItem","register","first_name","last_name","email","getIdentity","id","fullName","avatar","checkError","authProvider","checkAuth","getPermissions","refreshTokenIfInvalid","getList","resource","params","getOne","getMany","getManyReference","create","update","put","updateMany","deleteOne","delete","deleteMany","dataProvider","useStyles","makeStyles","theme","root","display","breakpoints","down","spacing","logoIcon","color","palette","secondary","light","logoText","primary","Logo","classes","className","Typography","variant","NotificationButton","props","redirect","useRedirect","identity","useGetIdentity","React","anchorEl","setAnchorEl","now","useGetList","page","perPage","field","order","status_dif","sales_id","ids","hasNotification","loaded","length","IconButton","onClick","event","currentTarget","Badge","badgeContent","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","task","taskOverdue","due_date","toISOString","MenuItem","handleNotificationClick","ListItemAvatar","style","backgroundColor","red","ListItemText","text","formatDistance","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","ref","useTranslate","MenuItemLink","to","primaryText","leftIcon","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","AppBar","elevation","userMenu","icon","minWidth","transition","paddingLeft","sidebarIsClosed","SubMenu","handleToggle","isOpen","name","children","dense","translate","useSelector","state","admin","ui","sidebarOpen","header","button","ListItemIcon","Tooltip","placement","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","sectors","sector","width","height","img","objectFit","small","large","CompanyAvatar","record","size","logo","src","process","alt","imgProps","clsx","image","sizeInPixel","medium","CountryField","source","ImageField","paper","flexDirection","justifyContent","padding","position","alignItems","textAlign","marginTop","stats","singleStat","statIcon","marginRight","checkbox","top","right","identifier","lrft","CompanyCard","useState","setElevation","useListContext","onToggleItem","selectedIds","Link","linkToRecord","underline","onMouseEnter","onMouseLeave","Paper","Checkbox","edge","checked","includes","tabIndex","disableRipple","e","stopPropagation","Box","ReferenceField","reference","link","relation","Chip","label","SelectField","choices","marginBottom","nb_contacts","nb_notes","gridList","flexWrap","gap","grey","LoadingGridList","nbChildren","fn","key","Array","from","_","LoadedGridList","CompanyGridList","relations","TagChip","border","cursor","sideBig","marginLeft","sideSmall","up","container","drawerContent","maxWidth","CollapsibleListFilter","setOpen","childrenWithProps","child","Drawer","anchor","countryList","maxHeight","tagList","CompanyListFilter","tags","tagIds","countries","countryIds","FilterLiveSearch","FilterList","FilterListItem","value","nicename","country_id","SelectAllButton","onSelect","Button","toolbar","createButton","importOptions","parseConfig","dynamicTyping","CompanyListActions","TopToolbar","SortButton","fields","ExportButton","CreateButton","basePath","sizes","DistributorInput","AutocompleteInput","optionText","country_iso","allowEmpty","resettable","inline","CustomLayout","CardContent","paddingTop","ml","CustomDivider","mb","Divider","Avatar","charAt","getColorFromStatus","Status","borderRadius","bgcolor","ColoredChipField","ChipField","TagsList","ReferenceArrayField","SingleFieldList","linkType","LogoField","colors","margin","RoundButton","handleClick","selected","type","TagsListEdit","newTagName","setNewTagName","newTagColor","setNewTagColor","version","setVersion","disabled","setDisabled","allTags","useGetMany","enabled","useUpdate","useCreate","unselectedTagIds","filter","handleAddTag","handleOpenCreateDialog","tag","mt","onDelete","tagId","handleDeleteTag","Dialog","onSubmit","preventDefault","onSuccess","v","DialogTitle","DialogContent","autoFocus","fullWidth","onChange","target","DialogActions","CollapsibleAside","EditButton","ShowButton","ProductsListEdit","refresh","useRefresh","use_products","products","handleClose","product","productId","handleDeleteProduct","model","Popover","toString","values","SimpleForm","ReferenceArrayInput","AutocompleteArrayInput","CompanyAside","AsideContent","href","website","rel","linkedIn","TextField","distributor_id","phone_number","DateField","options","year","month","day","FunctionField","render","stages","stageNames","opportunity","won","lost","delayed","stageChoices","StatusSelector","setStatus","select","buttonSwitcher","previewConatiner","previewRaw","previewMarkdown","paddingRight","borderColor","main","preview","NewNote","showStatus","setPreview","useRecordContext","useResourceContext","setText","getCurrentDate","date","setDate","loading","notify","useNotify","foreignKeyMapping","last_seen","multiline","remarkPlugins","remarkGfm","setMinutes","getMinutes","getTimezoneOffset","slice","contacts","deals","companies","metadata","textarea","paddingBottom","lineHeight","buttons","cancel","content","paragraph","fontFamily","typography","fontSize","body1","visibility","Note","note","isLast","isHover","setHover","isEditing","setEditing","noteText","setNoteText","useDelete","mutationMode","handleDelete","showTime","locales","dateStyle","timeStyle","FilledInput","NotesIterator","index","ProductAvatar","family","left","hidden","ProductCard","classNames","nb_properties","Skeleton","animation","ProductGridList","CompanyShowContent","useShowContext","setValue","Card","gridGap","Tabs","indicatorColor","textColor","newValue","scrollButtons","Tab","nb_deals","nb_products","ReferenceManyField","sort","pagination","Pagination","rowsPerPageOptions","TabPanel","other","role","ContactsIterator","contact","ListItem","RouterLink","ListItemSecondaryAction","CreateRelatedContactButton","pathname","company_id","startIcon","CreateRelatedProductButton","DealsIterator","deal","stage","amount","toLocaleString","notation","currency","currencyDisplay","minimumSignificantDigits","updated_at","list","actions","aside","filterDefaultValues","Create","initialValues","TextInput","validate","required","SelectInput","formClassName","FormDataConsumer","formData","ReferenceInput","helperText","sales","edit","show","ShowBase","BusinessIcon","ContactAside","TasksIterator","disableGutters","EmailField","gender","background","ContactShowContent","ContactListFilter","last_seen_gte","endOfYesterday","last_seen_lte","startOfWeek","startOfMonth","subMonths","ContactListContent","SimpleListLoading","hasLeftAvatarOrIcon","hasSecondaryText","ContactListActions","Spacer","ContactEditContent","useEditContext","save","FormWithRedirect","formProps","mr","BooleanInput","Toolbar","omit","EditBase","transform","ContactsIcon","TaskAside","statuses","getStatus","find","TaskChip","statusItem","statusName","statusColor","doneStatus","TaskShowContent","DoneButton","TaskStatus","TaskListFilter","due_date_gte","due_date_lte","endOfToday","endOfWeek","endOfMonth","doneState","MarkDoneButton","BulkUpdateButton","TaskListContent","useActionStyles","TaskListActions","TaskBulkActionButtons","BulkDeleteButton","TaskEditContent","DateInput","bulkActionButtons","FormatListBulletedIcon","cardContent","cardText","DealCard","draggableId","String","provided","snapshot","draggableProps","dragHandleProps","innerRef","opacity","isDragging","p","gutterBottom","borderTopLeftRadius","borderTopRightRadius","droppable","DealColumn","dealIds","align","droppableId","droppableProvided","droppableProps","isDraggingOver","placeholder","initialDeals","reduce","obj","getDealsByColumn","columns","acc","push","forEach","b","DealListContent","currentSort","filterValues","setDeals","useContext","DataProviderContext","useMutation","payload","useEffect","newDeals","isEqual","onDragEnd","result","destination","column","sourceDeal","destinationDeal","splice","Number","columnDeals","all","previousData","sourceColumn","destinationColumn","sourceDeals","destinationDeals","pop","typeChoices","DealCreate","useDataProvider","then","oldDeal","rows","defaultValue","NumberInput","ul","listStyle","li","ContactList","dialog","DealShow","DealShowContent","format","start_at","minHeight","description","OnlyMineInput","alwaysOn","useListFilterContext","displayedFilters","setFilters","FormControlLabel","control","Switch","newFilterValues","defaultProps","dealFilters","SearchInput","DealActions","FilterButton","filters","path","match","MonetizationOnIcon","categories","category","familyList","categoryList","ProductListFilter","familyData","familyIds","family_id","ProductListActions","CreatePropertyType","useCreateSuggestionContext","onCancel","onCreate","setName","unit","setUnit","synonyms","setSynonyms","PropertyFormIterator","SimpleFormIterator","CreateProductFamily","setCategory","setWebsite","setImage","Select","propertyContainer","ProductImageField","ProductAside","ProductShowContent","nb_used_by","addLabel","Datagrid","useTheme","TabbedForm","FormTab","ArrayInput","FiberManualRecordIcon","ProductFamilyListFilter","ProductFamilyListContent","ProductFamilyListActions","ProductFamilyAside","ProductFamilyEditContent","ProductFamilyShowContent","CategoryIcon","transitions","easing","sharp","duration","leavingScreen","closed","Menu","menuCrm","menuProduct","menuCustomers","setState","menu","classnames","DashboardMenuItem","_scrollToTop","tasks","productFamilies","darkTheme","sidebar","overrides","MuiAppBar","colorSecondary","MuiButtonBase","lightTheme","dark","contrastText","default","shape","RaMenuItemLink","borderLeft","active","MuiPaper","elevation1","boxShadow","backgroundClip","MuiButton","contained","MuiLinearProgress","colorPrimary","barColorPrimary","MuiFilledInput","MuiSnackbarContent","NotificationContainer","Notification","autoHideDuration","Layout","appBar","notification","backgroundImage","backgroundRepeat","backgroundSize","card","hint","form","input","renderInput","meta","touched","error","inputProps","Form","withTypes","Login","setLoading","useLogin","location","useLocation","handleSubmit","auth","nextPathname","noValidate","CardActions","CircularProgress","thickness","LoginWithTheme","ThemeProvider","createTheme","HotContacts","isInteger","contactData","contactIds","contactTotal","total","contactsLoaded","SimpleList","secondaryText","addSuffix","leftAvatar","noteTextText","LatestNotes","contactNotesData","contactNotesIds","contactNotesLoaded","dealNotesData","dealNotesIds","dealNotesLoaded","companyNotesData","companyNotesIds","companyNotesLoaded","allNotes","concat","valueOf","NoteSource","Deal","Contact","Company","Map","memo","setTooltipContent","colorScale","scaleQuantile","domain","max","nb_companies","range","projection","projectionConfig","rotate","scale","center","zoom","geography","geographies","geo","ISO_A3","properties","cur","iso3","fill","stroke","NAME","POP_EST","rsmKey","CompaniesMap","setContent","Dashboard","Grid","item","xs","sm","Input","RegisterForm","redirectTo","useAuthProvider","useSafeSetState","submit","confirm","Container","autoComplete","Register","RegisterWithTheme","changeTheme","Configuration","locale","useLocale","setLocale","useSetLocale","dispatch","useDispatch","Title","customRoutes","RouteWithoutLayout","exact","customEnglishMessages","englishMessages","defaultTheme","i18nProvider","polyglotI18nProvider","messages","App","Admin","loginPage","layout","dashboard","disableTelemetry","Resource","ListGuesser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9265dc87.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\n\nconst baseURL = \"/auth\";\n\nexport type Credentials = {\n  access_token: string;\n  refresh_token: string;\n  permissions: string;\n};\n\nconst CREDENTIALS_LOCAL_STORAGE_ITEM = \"credentials\";\n\nexport function isAuthenticated(): boolean {\n  return Boolean(getCredentials());\n}\n\nexport function setCredentials(credentials: Credentials) {\n  localStorage.setItem(\n    CREDENTIALS_LOCAL_STORAGE_ITEM,\n    JSON.stringify(credentials)\n  );\n}\n\nexport function getCredentials(): Credentials | null {\n  const raw = localStorage.getItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n  if (raw === null) {\n    return null;\n  }\n  return JSON.parse(raw);\n}\n\nexport function removeCredentials(): void {\n  localStorage.removeItem(CREDENTIALS_LOCAL_STORAGE_ITEM);\n}\n\n\nexport const isTokenValid = (access_token: string) => {\n  const currentDate = new Date();\n  const decodedToken: JwtPayload = decodeJwt<JwtPayload>(access_token);\n  return decodedToken && decodedToken.exp && (decodedToken.exp * 1000 > currentDate.getTime());\n}","import { AuthProvider } from 'react-admin';\nimport decodeJwt, { JwtPayload } from 'jwt-decode';\nimport axios, { AxiosError } from 'axios';\nimport {\n    isAuthenticated,\n    setCredentials,\n    getCredentials,\n    removeCredentials,\n    isTokenValid,\n} from \"./auth\"\nimport jwtDecode from 'jwt-decode';\n\ninterface RefreshToken {\n    access_token: string;\n  }\n\nconst baseURL = \"/auth\";\n\ninterface Permission {\n    permissions: string;\n}\n\ninterface LoginToken {\n    access_token: string;\n    refresh_token: string;\n}\n\ninterface UserIdentity {\n    id: number;\n    fullName: string;\n    avatar: string;\n}\n\n\nexport const refreshToken = async () => {\n    const credentials = getCredentials();\n    if(!credentials) return;\n  \n    const token = credentials?.refresh_token;\n  \n    const config = {\n        headers: { Authorization: `Bearer ${token}` }\n    };\n    let response = await axios.post<RefreshToken>(`${baseURL}/refresh`, undefined, config)\n    const { access_token } = response.data;\n    setCredentials({\n        ...credentials,\n        access_token: access_token,\n    });\n};\n\n\nconst login = async ({ username, password }: {username: string; password:string;}) => {\n    try{\n        const response = await axios.post<LoginToken>(`${baseURL}/login`, { username, password })\n        const { access_token, refresh_token } = response.data;\n        const decodedToken = decodeJwt<Permission>(access_token);\n        setCredentials({\n            access_token,\n            refresh_token,\n            permissions: decodedToken.permissions,\n        });\n        return Promise.resolve();\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.msg, status: response.status});\n    }\n};\n\nconst logout = async () => {\n    await axios.get(`${baseURL}/logout`)\n    removeCredentials();\n    return Promise.resolve('/login');\n}\n\nconst register = async ({ \n    first_name,\n    last_name,\n    email,\n    username, \n    password\n}: { \n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n}) => {\n    try{\n    const response = await axios.post<ResponseType>(`${baseURL}/register`, { \n            first_name,\n            last_name,\n            email,\n            username, \n            password\n        })\n\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data.msg, status: response.status});\n    }\n}\n\nconst getIdentity = async () => { \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` }\n        };\n        let response = await axios.get<UserIdentity>(`${baseURL}/user`, config)\n        const { id, fullName, avatar } = response.data;\n        \n        return Promise.resolve({ id, fullName, avatar });\n    } catch (error: any) {\n        // const response = error.response;\n        // removeCredentials();\n        // return Promise.reject({message: response.data, status: response.status});\n\n        return Promise.reject(error);\n    }\n };\n\n const checkError = async ({ status }: any) => {\n    if (status === 401 || status === 403 || status === 422) {\n        try{\n            refreshToken();\n        } catch (error: any) {\n            return Promise.reject();\n        }\n    }\n    return Promise.resolve();\n};\n\nconst checkAuth = () => {\n    const credentials = getCredentials();\n    const token = credentials?.access_token;\n    return token && isTokenValid(token)? Promise.resolve() : Promise.reject();\n}\n\nconst getPermissions = () => {\n    return Promise.resolve();\n}\n\nexport const authProvider: AuthProvider =  {\n    login: login,\n    checkError: checkError,\n    checkAuth: checkAuth,\n    logout: logout,\n    getIdentity: getIdentity,\n    getPermissions: getPermissions,\n    register: register,\n};","import axios, { AxiosError } from 'axios';\nimport { \n    GetListResult,\n    GetOneResult,\n    GetManyResult,\n    GetManyReferenceResult,\n    CreateResult,\n    UpdateResult,\n    UpdateManyResult,\n    DeleteResult,\n    DeleteManyResult,\n}  from 'react-admin'\n\nimport {\n    getCredentials, \n    isTokenValid,\n} from \"./auth\"\n\nimport { refreshToken } from './authProvider';\n\nconst refreshTokenIfInvalid = () => {\n    const credentials = getCredentials();\n    const token = credentials?.access_token;\n\n    if(token && !isTokenValid(token)){\n        refreshToken();\n    }\n}\n\n\nconst getList = async (resource: string, params: any): Promise<GetListResult<any>> => {\n    refreshTokenIfInvalid();\n\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetListResult<any>>(`/${resource}/list`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getOne = async (resource: string, params: any): Promise<GetOneResult<any>> => {\n    refreshTokenIfInvalid();\n\n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetOneResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getMany = async (resource: string, params: any): Promise<GetManyResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyResult<any>>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst getManyReference = async (resource: string, params: any): Promise<GetManyReferenceResult<any>>  => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.get<GetManyReferenceResult<any>>(`/${resource}/refs`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst create = async (resource: string, params: any): Promise<CreateResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.post<CreateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst update = async (resource: string, params: any): Promise<UpdateResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateResult<any>>(`/${resource}/item`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst updateMany = async (resource: string, params: any): Promise<UpdateManyResult> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.put<UpdateManyResult>(`/${resource}/items`, params, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteOne = async (resource: string, params: any): Promise<DeleteResult<any>> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteResult<any>>(`/${resource}/item`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nconst deleteMany = async (resource: string, params: any): Promise<DeleteManyResult> => {\n    refreshTokenIfInvalid();\n    \n    try{\n        const credentials = getCredentials();\n        const token = credentials?.access_token;\n        const config = {\n            headers: { Authorization: `Bearer ${token}` },\n            params,\n        };\n        const response = await axios.delete<DeleteManyResult>(`/${resource}/items`, config)\n        return Promise.resolve(response.data);\n    } catch (error: any) {\n        const response = error.response;\n        return Promise.reject({message: response.data, status: response.status});\n    }\n};\n\nexport const dataProvider = {\n    getList:    getList,\n    getOne:     getOne,\n    getMany:    getMany,\n    getManyReference: getManyReference,\n    create:     create,\n    update:     update,\n    updateMany: updateMany,\n    delete:     deleteOne,\n    deleteMany: deleteMany,\n}\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\",\n        },\n        alignItems:\"center\",\n        gap: theme.spacing(1)\n    },\n    logoIcon: {\n        color: theme.palette.secondary.light,\n    },\n    logoText: {\n        color: theme.palette.primary.light,\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AccountBalanceWalletIcon className={classes.logoIcon} />\n            <Typography variant=\"h6\" className={classes.logoText} >\n                Assistor\n            </Typography>\n        </div>\n    );\n};\n\nexport default Logo;\n","import * as React from 'react';\n\nimport {\n    Avatar,\n    Badge, \n    IconButton, \n    ListItem, \n    ListItemAvatar, \n    ListItemSecondaryAction, \n    ListItemText, \n    Menu,\n    MenuItem,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { \n    useGetList, \n    useRedirect, \n    ReferenceField,\n    FunctionField,\n    useGetIdentity,\n} from 'react-admin';\nimport { red } from '@material-ui/core/colors';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\n\nimport { Sale, Task } from '../types';\nimport { formatDistance } from 'date-fns';\nimport { TaskStatus } from '../tasks/TaskStatus';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst NotificationButton = (props: any) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const { identity } = useGetIdentity();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const now = Date.now();\n\n    const { data, ids, loaded } = useGetList<Task>(\n        'tasks',\n        { page: 1, perPage: 1000 },\n        { field: 'due_date', order: 'ASC' },\n        { status_dif: 'done', sales_id: identity && identity?.id,},\n    );\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleNotificationClick = (id: any) => {\n        setAnchorEl(null);\n\n        redirect(`/tasks/${id}/show`);\n    }\n\n    const hasNotification = ids.length > 0;\n      \n    return (\n        <div {...props}>\n            <IconButton \n                onClick={handleClick}\n            >\n                <Badge \n                    badgeContent={ids.length} \n                    color=\"primary\"\n                > \n                    { hasNotification\n                        ? <NotificationsIcon />\n                        : <NotificationsNoneIcon />\n                    }\n                </Badge>\n            </IconButton>\n            { hasNotification &&\n                <Menu \n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                >\n                    {ids.map(id => {\n                        const task = data[id];\n                        const taskOverdue = task.due_date < (new Date()).toISOString();\n                        return (\n                            <MenuItem onClick={() => handleNotificationClick(id)}>\n                                <ListItemAvatar>\n                                <Avatar\n                                    style={taskOverdue ? { backgroundColor: red[400] } : undefined}\n                                >\n                                    {taskOverdue\n                                    ? <NotificationsActiveIcon />\n                                    : <AssignmentTurnedInIcon />\n                                    }\n                                </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={\n                                        <>\n                                        {task.text}\n                                        </>\n                                    }\n                                    secondary={\n                                        <>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                due in{' '}\n                                                {formatDistance(\n                                                    new Date(task.due_date),\n                                                    now\n                                                    )}\n                                            </Typography>\n                                        </>\n                                    }\n                                    />\n                            </MenuItem>\n                        );\n                    })}\n                </Menu>\n             }\n        </div>\n    )\n}\n\nexport default NotificationButton;","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\nimport NotificationButton from '../notifications/NotificationButton';\n\nconst useStyles = makeStyles({\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n});\n\nconst ConfigurationMenu = forwardRef<any, any>((props, ref) => {\n    const translate = useTranslate();\n    return (\n        <MenuItemLink\n            ref={ref}\n            to=\"/configuration\"\n            primaryText=\"Configuration\"\n            leftIcon={<SettingsIcon />}\n            onClick={props.onClick}\n            sidebarIsOpen\n        />\n    );\n});\n\nconst CustomUserMenu = (props: any) => (\n    <UserMenu {...props}>\n        <ConfigurationMenu />\n    </UserMenu>\n);\n\nconst CustomAppBar = (props: any) => {\n    const classes = useStyles();\n    return (\n        <AppBar \n            {...props} \n            elevation={1} \n            userMenu={<CustomUserMenu />\n        }>\n            <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                className={classes.title}\n                id=\"react-admin-title\"\n            />\n            <Logo />\n            <span className={classes.spacer} />\n            <NotificationButton />\n        </AppBar>\n    );\n};\n\nexport default CustomAppBar;\n","import * as React from 'react';\nimport { Fragment, ReactElement, ReactNode } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    List,\n    MenuItem,\n    ListItemIcon,\n    Typography,\n    Collapse,\n    Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useTranslate, ReduxState } from 'react-admin';\n\nconst useStyles = makeStyles(theme => ({\n    icon: { minWidth: theme.spacing(5) },\n    sidebarIsOpen: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(4),\n        },\n    },\n    sidebarIsClosed: {\n        '& a': {\n            transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n            paddingLeft: theme.spacing(2),\n        },\n    },\n}));\n\ninterface Props {\n    dense: boolean;\n    handleToggle: () => void;\n    icon: ReactElement;\n    isOpen: boolean;\n    name: string;\n    children: ReactNode;\n}\n\nconst SubMenu = (props: Props) => {\n    const { handleToggle, isOpen, name, icon, children, dense } = props;\n    const translate = useTranslate();\n    const classes = useStyles();\n    const sidebarIsOpen = useSelector<ReduxState, boolean>(\n        state => state.admin.ui.sidebarOpen\n    );\n\n    const header = (\n        <MenuItem dense={dense} button onClick={handleToggle}>\n            <ListItemIcon className={classes.icon}>\n                {isOpen ? <ExpandMore /> : icon}\n            </ListItemIcon>\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n                {translate(name)}\n            </Typography>\n        </MenuItem>\n    );\n\n    return (\n        <Fragment>\n            {sidebarIsOpen || isOpen ? (\n                header\n            ) : (\n                <Tooltip title={translate(name)} placement=\"right\">\n                    {header}\n                </Tooltip>\n            )}\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                <List\n                    dense={dense}\n                    component=\"div\"\n                    disablePadding\n                    className={\n                        sidebarIsOpen\n                            ? classes.sidebarIsOpen\n                            : classes.sidebarIsClosed\n                    }\n                >\n                    {children}\n                </List>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nexport default SubMenu;\n","export const sectors = [\n    'Factory Automation',\n    'Logistics Automation',\n    'Warehouse Automation',\n    'Consulting & Development',\n].map(sector => ({ id: sector, name: sector }));\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { Company } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const CompanyAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Company;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar\n            alt={record.name}\n            className={classes.avatar}\n        >\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <Avatar\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n    );\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ImageField } from 'react-admin';\n\nexport interface StyleProps {\n    width: number;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(theme => ({\n    image: {\n        width: props => props.width\n    },\n}));\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const CountryField = ({\n    record,\n    source=\"url\",\n    title=\"nicename\",\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    title?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles({width: sizeInPixel[size]});\n    if (!record) return null;\n\n    return (\n        <ImageField \n            record={record as any}\n            source={source} \n            title={title}\n            classes={classes}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { linkToRecord, SelectField, ReferenceField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { sectors } from './sectors';\nimport { CompanyAvatar } from './CompanyAvatar';\nimport { Company } from '../types';\nimport { CountryField } from './CountryField';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n    },\n    identifier: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        lrft: 0,\n    }\n}));\n\nexport const CompanyCard = ({ record }: { record: Company }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Company>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/companies', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classes.checkbox}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Typography \n                    variant=\"body2\" \n                    color=\"textSecondary\"\n                    className={classes.identifier}\n                >\n                    {`#${record.id}`}\n                </Typography>\n                <div className={classes.identity}>\n                    <CompanyAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.name}\n                        </Typography>\n                        <ReferenceField\n                            record={record}\n                            source=\"country_id\"\n                            reference=\"countries\"\n                            link={false}\n                        >\n                            <CountryField size='small' />\n                        </ReferenceField>\n                        </Box>\n                        {record.relation && (\n                            <Chip \n                                label={record.relation} \n                                variant=\"outlined\" \n                                size=\"small\"\n                            />\n                        )}\n                        <SelectField\n                            color=\"textSecondary\"\n                            source=\"sector\"\n                            choices={sectors}\n                            record={record}\n                        />\n                    </div>\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_contacts}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_contacts > 1\n                                    ? 'contacts'\n                                    : 'contact'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <NoteIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\n\nimport { CompanyCard } from './CompanyCard';\nimport { Company } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} />\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Company>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <CompanyCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const CompanyGridList = () => {\n    const { loaded } = useListContext();\n    return loaded ? <LoadedGridList /> : <LoadingGridList />;\n};\n","export const relations = [\n    'Distributor',\n    'End-customer',\n    'Prospect',\n    'Competitor',\n].map(relations => ({ id: relations, name: relations }));","import { Box, Chip } from '@material-ui/core';\nimport { Tag } from '../types'\n\nexport const TagChip = ({ record }: { record: Tag; }) => (\n    <>\n        { record && (\n                <Chip\n                label={record.name}\n                size=\"small\"\n                style={{\n                    backgroundColor: record.color,\n                    border: 0,\n                    cursor: 'pointer',\n                }}\n            />\n        )}\n    </>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Drawer, IconButton } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        order: -1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleListFilter = ({ children }: {children: any;}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, {})\n        : child\n    );\n    return (\n        <div className={classes.root}>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"left\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { useState } from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip, Drawer, IconButton, ListItem } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport PublicIcon from '@material-ui/icons/Public';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { sectors } from './sectors';\nimport { relations } from './relations';\nimport { TagChip } from '../tags/TagChip';\nimport { Country, Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        minWidth: '13em',\n    },\n    countryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    tagList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const CompanyListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: tags, ids: tagIds } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    const { data: countries, ids: countryIds } = useGetList<Country>(\n        'countries',\n        { page: 1, perPage: 500 },\n        { field: 'name', order: 'ASC' }\n    );\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Relation\" icon={<BusinessIcon />}>\n                {relations.map(relation => (\n                    <FilterListItem\n                        key={relation.id}\n                        label={relation.name}\n                        value={{ relation: relation.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                <div className={classes.tagList}>\n                    {tagIds &&\n                        tags &&\n                        tagIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<TagChip record={tags[id]}/>}\n                                value={{ tags: [id] }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Sector\" icon={<LocalShippingIcon />}>\n                {sectors.map(sector => (\n                    <FilterListItem\n                        key={sector.id}\n                        label={sector.name}\n                        value={{ sector: sector.id }}\n                    />\n                ))}\n            </FilterList>\n\n            <FilterList label=\"Countries\" icon={<PublicIcon />}>\n                <div className={classes.countryList}>\n                    {countryIds &&\n                        countries &&\n                        countryIds.map(id => (\n                            <FilterListItem\n                            key={id}\n                            label={countries[id].nicename}\n                            value={{ country_id: id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { Button, useListContext } from 'react-admin';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { Company } from '../types';\n\nconst doneState = { status: 'Done' };\n\nconst SelectAllButton = () => {\n    const { ids, data, onSelect } = useListContext<Company>();\n    return (\n        <Button\n            onClick={(e:any) =>{\n                e.stopPropagation();\n                onSelect(ids);\n            }}\n            label=\"Select All\"\n        >\n            <DoneAllIcon />\n        </Button>\n    );\n};\n\nexport default SelectAllButton;","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    SortButton,\n    FilterLiveSearch,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { CompanyGridList } from './CompanyGridList';\nimport { CompanyListFilter } from './CompanyListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\nimport SelectAllButton from './SelectAllButton';\nimport { Box } from '@material-ui/core';\n\nexport const CompanyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<CompanyListActions />}\n            aside={<CompanyListFilter />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100, 1000]} />}\n            perPage={25}\n            sort={{ field: 'name', order: 'ASC' }}\n            component=\"div\"\n        >\n            <CompanyGridList />\n        </List>\n    ) : null;\n};\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        \n    },\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst importOptions = {\n    parseConfig: {\n        // For all options see: https://www.papaparse.com/docs#config\n        dynamicTyping: true\n    }\n}\n\n\nconst CompanyListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar className={classes.toolbar} >\n            <SortButton fields={['id', 'name']} />\n            <SelectAllButton />\n            <ExportButton />\n            <ImportButton {...props} {...importOptions}/>\n            <CreateButton\n                basePath=\"/companies\"\n                variant=\"contained\"\n                label=\"New Company\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","export const sizes = [\n    { id: 1, name: '1 employee' },\n    { id: 10, name: '2-9 employees' },\n    { id: 50, name: '10-49 employees' },\n    { id: 250, name: '50-249 employees' },\n    { id: 500, name: '250 or more employees' },\n];\n","import { AutocompleteInput, AutocompleteInputProps } from 'react-admin';\n\nconst DistributorInput = (props: AutocompleteInputProps) => (\n    <AutocompleteInput \n        {...props}\n        optionText={record => record ? record.country_iso ? `${record.name} (${record.country_iso})` : `${record.name}` : ''} \n        allowEmpty\n        resettable\n    />\n);\n\nexport default DistributorInput;","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    FormDataConsumer,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n} from 'react-admin';\nimport { Box, CardContent, Divider, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport clsx from 'clsx';\n\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nexport const CompanyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n\n    if (!identity) return null;\n\n    const defaultValue = () => ({ sales_id: identity && identity?.id });\n\n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                initialValues={defaultValue}\n                redirect=\"show\"\n            >\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <BusinessIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { Contact } from '../types';\n\nexport const Avatar = ({ record }: { record: Contact }) => (\n    <MuiAvatar src={record.avatar}>\n        {record.first_name.charAt(0)}\n        {record.last_name.charAt(0)}\n    </MuiAvatar>\n);\n","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst getColorFromStatus = (status: string) =>\n    status === 'cold'\n        ? '#7dbde8'\n        : status === 'warm'\n        ? '#e8cb7d'\n        : status === 'hot'\n        ? '#e88b7d'\n        : status === 'in-contract'\n        ? '#a4e87d'\n        : '#000';\n\nexport const Status = ({ status }: { status: string }) => (\n    <Box\n        width={10}\n        height={10}\n        display=\"inline-block\"\n        borderRadius={5}\n        bgcolor={getColorFromStatus(status)}\n        component=\"span\"\n    />\n);\n","import * as React from 'react';\nimport { ReferenceArrayField, SingleFieldList, ChipField } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Contact } from '../types';\n\nconst ColoredChipField = ({ record, ...props }: any) =>\n    record ? (\n        <ChipField\n            record={record}\n            {...props}\n            style={{ backgroundColor: record.color, border: 0 }}\n            component=\"span\"\n        />\n    ) : null;\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'inline-block',\n    },\n});\n\nexport const TagsList = ({ record }: { record: Contact }) => {\n    const classes = useStyles();\n    if (!record) return null;\n    return (\n        <ReferenceArrayField\n            record={record}\n            basePath=\"/contacts\"\n            resource=\"contacts\"\n            source=\"tags\"\n            reference=\"tags\"\n            className={classes.root}\n        >\n            <SingleFieldList linkType={false} component=\"span\">\n                <ColoredChipField\n                    source=\"name\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                />\n            </SingleFieldList>\n        </ReferenceArrayField>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const LogoField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: { logo: string; name: string };\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.logo) return (\n        <Avatar>\n            <BusinessIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.logo}\n            alt={record.name}\n            title={record.name}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","export const colors = [\n    '#eddcd2',\n    '#fff1e6',\n    '#fde2e4',\n    '#fad2e1',\n    '#c5dedd',\n    '#dbe7e4',\n    '#f0efeb',\n    '#d6e2e9',\n    '#bcd4e6',\n    '#99c1de',\n];\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        display: 'inline-block',\n        margin: 8,\n    },\n});\n\nexport const RoundButton = ({ color, handleClick, selected }: any) => {\n    const classes = useStyles();\n    return (\n        <button\n            type=\"button\"\n            className={classes.root}\n            style={{\n                backgroundColor: color,\n                border: selected ? '2px solid grey' : 'none',\n            }}\n            onClick={handleClick}\n        />\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useGetMany,\n    useCreate,\n    useUpdate,\n    useGetList,\n    Identifier,\n} from 'react-admin';\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { colors } from './colors';\nimport { Contact, Company, Product } from '../types';\nimport { Tag } from '../types';\nimport { RoundButton } from '../components/RoundButton';\n\nexport const TagsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Contact | Company | Product;\n    reference: 'companies' | 'contacts' | 'products';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [newTagName, setNewTagName] = useState('');\n    const [newTagColor, setNewTagColor] = useState(colors[0]);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [disabled, setDisabled] = useState(false);\n\n    const { data: allTags, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' },\n        {},\n        { version } as any // FIXME UseDataProviderOptions don't allow [key: string]: any\n    );\n    const { data: tags, loaded } = useGetMany('tags', record.tags, {\n        enabled: record.tags && record.tags.length > 0,\n    });\n    const [update] = useUpdate();\n    const [create] = useCreate();\n\n    const unselectedTagIds = ids && ids.filter(id => !record.tags.includes(id));\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleDeleteTag = (id: Identifier) => {\n        const tags: Identifier[] = record.tags.filter(\n            (tagId: Identifier) => tagId !== id\n        );\n        update(reference, record.id, { tags }, record);\n    };\n\n    const handleAddTag = (id: Identifier) => {\n        const tags: Identifier[] = [...record.tags, id];\n        update(reference, record.id, { tags }, record);\n        setAnchorEl(null);\n    };\n\n    const handleOpenCreateDialog = () => {\n        setOpen(true);\n        setAnchorEl(null);\n        setDisabled(false);\n    };\n\n    const handleNewTagNameChange = (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setNewTagName(event.target.value);\n    };\n\n    const handleCreateTag = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setDisabled(true);\n        create(\n            'tags',\n            { name: newTagName, color: newTagColor },\n            {\n                onSuccess: ({ data }) => {\n                    update(\n                        reference,\n                        record.id,\n                        { tags: [...record.tags, data.id] },\n                        record,\n                        {\n                            onSuccess: () => {\n                                setNewTagName('');\n                                setNewTagColor(colors[0]);\n                                setOpen(false);\n\n                                setVersion(v => v + 1);\n                            },\n                        }\n                    );\n                },\n            }\n        );\n    };\n\n    // if (!loaded || !tags) return null;\n    return (\n        <>\n            {tags.map(tag => (\n                <Box mt={1} mb={1} key={tag.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteTag(tag.id)}\n                        label={tag.name}\n                        style={{ backgroundColor: tag.color, border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add tag\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Menu\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n                anchorEl={anchorEl}\n            >\n                {unselectedTagIds?.map(id => (\n                    <MenuItem key={id} onClick={() => handleAddTag(id)}>\n                        <Chip\n                            size=\"small\"\n                            variant=\"outlined\"\n                            label={allTags && allTags[id].name}\n                            style={{\n                                backgroundColor: allTags && allTags[id].color,\n                                border: 0,\n                            }}\n                            onClick={() => handleAddTag(id)}\n                        />\n                    </MenuItem>\n                ))}\n                <MenuItem onClick={handleOpenCreateDialog}>\n                    <Chip\n                        icon={<EditIcon />}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={handleOpenCreateDialog}\n                        color=\"primary\"\n                        label=\"Create new tag\"\n                    />\n                </MenuItem>\n            </Menu>\n            <Dialog\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <form onSubmit={handleCreateTag}>\n                    <DialogTitle id=\"form-dialog-title\">\n                        Create a new tag\n                    </DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            label=\"Tag name\"\n                            fullWidth\n                            value={newTagName}\n                            onChange={handleNewTagNameChange}\n                        />\n                        <Box display=\"flex\" flexWrap=\"wrap\" width={230} mt={2}>\n                            {colors.map(color => (\n                                <RoundButton\n                                    key={color}\n                                    color={color}\n                                    selected={color === newTagColor}\n                                    handleClick={() => {\n                                        setNewTagColor(color);\n                                    }}\n                                />\n                            ))}\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setOpen(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={disabled}\n                        >\n                            Add tag\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport {\n    EditButton,\n    ShowButton,\n} from 'react-admin';\nimport { Box, Drawer, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    sideBig: {\n        width: 250,\n        minWidth: 250,\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.down('xs')]:{\n            display: 'none',\n        }\n    },\n    sideSmall: {\n        [theme.breakpoints.up('sm')]:{\n            display: 'none',\n        }\n    },\n    drawerContent: {\n         marginTop: theme.spacing(2),\n         marginLeft: theme.spacing(1),\n         marginRight: theme.spacing(1),\n         maxWidth: theme.spacing(32),\n    }\n}));\n\nexport const CollapsibleAside = ({\n    basePath,\n    record,\n    link = 'edit',\n    children,\n}: {\n    basePath: string,\n    record?: any;\n    children: any,\n    link?: string;\n}) => {\n    const classes = useStyles();\n    const [isOpen, setOpen] = useState(false);\n    if (!record) return null;\n\n    const childrenWithProps = React.Children.map(children, child => \n        React.isValidElement(child)\n        ? React.cloneElement(child as React.ReactElement<any>, { record })\n        : child\n    );\n\n    return (\n        <div className={classes.root}>\n            <Box textAlign=\"center\" mb={2}>\n                {link === 'edit' ? (\n                    <EditButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Edit\"\n                    />\n                ) : (\n                    <ShowButton\n                        basePath={basePath}\n                        record={record}\n                        label=\"Show\"\n                    />\n                )}\n            </Box>\n            <div className={classes.sideBig}>\n                {childrenWithProps}\n            </div>\n            <div className={classes.sideSmall}>\n                <IconButton \n                    onClick={() => setOpen(true)}\n                    color=\"secondary\"\n                >\n                    <ChevronLeftIcon />\n                </IconButton>\n            </div>\n            <Drawer \n                anchor=\"right\" \n                open={isOpen} onClose={() => setOpen(false)}\n            >\n                <div className={classes.drawerContent}>\n                    {childrenWithProps}\n                </div>\n            </Drawer>\n        </div>\n    )\n};\n    \n","import * as React from 'react';\nimport { cloneElement, useState } from 'react';\nimport { \n    AutocompleteArrayInput,\n    Edit,\n    EditContextProvider,\n    Identifier, \n    ReferenceArrayField, \n    ReferenceArrayInput, \n    SimpleForm, \n    SingleFieldList, \n    useEditController, \n    useGetList, \n    useGetMany, \n    useUpdate, \n    useRefresh\n} from 'react-admin';\n\nimport {\n    Chip,\n    Box,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    TextField,\n    MenuItem,\n    Popover,\n    Menu,\n} from '@material-ui/core';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { Company, Product } from '../types';\nimport { string } from 'prop-types';\n\nexport const ProductsListEdit = ({ \n    record,\n    reference, \n}: { \n    record: Company;\n    reference: 'companies';\n}) => {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [version, setVersion] = useState(0); // used to force the refresh of useGetList without refreshing the whole page\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n\n\n\n    const { data: products, loaded } = useGetMany('products', record.use_products, {\n        enabled: record.use_products && record.use_products.length > 0,\n    });\n\n    const handleDeleteProduct = (id: Identifier) => {\n        const products: Identifier[] = record.use_products.filter(\n            (productId: Identifier) => productId !== id\n        );\n        update(reference, record.id, { use_products: products }, record);\n    };\n\n    const handleOpen = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleSucess = (values: any) =>{\n        refresh();\n        handleClose();\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    if (!record) return null;\n\n     return (\n        <>\n            {loaded && products.map(product => (\n                <Box mt={1} key={product.id}>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onDelete={() => handleDeleteProduct(product.id)}\n                        label={product.model}\n                        style={{ backgroundColor: \"#d4d4d4\", border: 0 }}\n                    />\n                </Box>\n            ))}\n            <Box mt={1}>\n                <Chip\n                    icon={<ControlPointIcon />}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={handleOpen}\n                    label=\"Add product\"\n                    color=\"primary\"\n                />\n            </Box>\n            <Popover\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n            >\n                <Edit\n                    basePath=\"/companies\"\n                    resource={reference}\n                    id={record.id.toString()}\n                    onSuccess={handleSucess}\n                >\n                    <SimpleForm>\n                        <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                            <AutocompleteArrayInput optionText=\"model\" />\n                        </ReferenceArrayInput>\n                    </SimpleForm>\n                </Edit>\n            </Popover>\n        </>\n    );\n}","import * as React from 'react';\nimport {\n    TextField,\n    DateField,\n    FunctionField,\n    ReferenceField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    ShowButton,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider, \n    Link,\n} from '@material-ui/core';\nimport { Company, Sale } from '../types';\nimport { TagsListEdit } from '../tags/TagsListEdit';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { ProductsListEdit } from '../products/ProductsListEdit';\nimport { any } from 'prop-types';\n\nexport const CompanyAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Company;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/companies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n    \n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Company;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Company info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">{record.website}</Link>\n                <br />\n                LinkedIn: <Link href={record.linkedIn} target=\"_blank\" rel=\"noreferrer\">LinkedIn</Link>\n            </Box>\n            <Box mt={1}>\n                Relation: <TextField source=\"relation\" record={record} />\n            </Box>\n            {record.distributor_id && (\n                <Box mt={1}>\n                    Distributor: <ReferenceField\n                            record={record}\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                        >\n                            <TextField source=\"name\" record={record} />\n                        </ReferenceField>\n                </Box>\n            )}\n\n            {record.phone_number && (\n                <Box mt={1}>\n                    <TextField source=\"phone_number\" record={record} />{' '}\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">Main</Typography>\n                </Box>\n            )}\n\n            <Box mt={1} mb={3}>\n                <TextField source=\"address\" />\n                <br />\n                <TextField source=\"city\" /> <TextField source=\"zipcode\" />{' '}\n                <TextField source=\"stateAbbr\" />\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={3}>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"span\"\n                >\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"created_at\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"companies\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record\n                                ? `${record.first_name} ${record.last_name}`\n                                : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"companies\" />\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Use Products</Typography>\n                <Divider />\n\n                <ProductsListEdit record={record} reference=\"companies\" />\n            </Box>\n        </>\n    ) : null;","export const stages = [\n    'opportunity',\n    'proposal-sent',\n    'in-negociation',\n    'won',\n    'lost',\n    'delayed',\n];\n\nexport const stageNames = {\n    opportunity: 'Opportunity',\n    'proposal-sent': 'Proposal Sent',\n    'in-negociation': 'In Negociation',\n    won: 'Won',\n    lost: 'Lost',\n    delayed: 'Delayed',\n};\n\nexport const stageChoices = stages.map(type => ({\n    id: type,\n    /* @ts-ignore */\n    name: stageNames[type],\n}));\n","import * as React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 150,\n    },\n});\n\nexport const StatusSelector = ({ status, setStatus, className = '' }: any) => {\n    const classes = useStyles();\n    return (\n        <TextField\n            select\n            value={status}\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                setStatus(event.target.value);\n            }}\n            variant=\"filled\"\n            label={false}\n            margin=\"none\"\n            size=\"small\"\n            className={clsx(className, classes.root)}\n        >\n            <MenuItem value=\"cold\">\n                Cold <Status status=\"cold\" />\n            </MenuItem>\n            <MenuItem value=\"warm\">\n                Warm <Status status=\"warm\" />\n            </MenuItem>\n            <MenuItem value=\"hot\">\n                Hot <Status status=\"hot\" />\n            </MenuItem>\n            <MenuItem value=\"in-contract\">\n                In Contract <Status status=\"in-contract\" />\n            </MenuItem>\n        </TextField>\n    );\n};\n","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    useRecordContext,\n    useCreate,\n    useUpdate,\n    useRefresh,\n    useNotify,\n    useGetIdentity,\n    Identifier,\n    useResourceContext,\n} from 'react-admin';\nimport { TextField as TextInput, Button, Paper } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nimport { StatusSelector } from './StatusSelector';\n\ntype Props = {\n    preview: Boolean;\n}\n\nconst useStyles = makeStyles<Theme, Props>(theme => ({\n    root: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: theme.spacing(1),\n    },\n    small: {\n        marginRight: '1em',\n        '& .MuiFilledInput-input': {\n            paddingTop: 10,\n        },\n    },\n    buttonSwitcher: {\n        marginBottom: theme.spacing(1),\n    },\n    previewConatiner: {\n        display: 'flex',\n    },\n    previewRaw: {\n        flex: 1,\n    },\n    previewMarkdown: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        borderColor: theme.palette.primary.main,\n        display: ({preview}) => (preview ? 'block' : 'none'),\n    },\n}));\n\nexport const NewNote = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const [preview, setPreview] = useState(false);\n    const classes = useStyles({preview});\n    const record = useRecordContext();\n    const resource = useResourceContext();\n    const [text, setText] = useState('');\n    const [status, setStatus] = useState(record && record.status);\n    const [date, setDate] = useState(getCurrentDate());\n    const [create, { loading }] = useCreate();\n    const [update] = useUpdate();\n    // FIXME: use refetch instead when ReferenceManyField exposes it in the ListContext\n    const refresh = useRefresh();\n    const notify = useNotify();\n    const { identity } = useGetIdentity();\n    if (!record || !identity) return null;\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const data: any = {\n            [foreignKeyMapping[reference]]: record.id,\n            sales_id: identity.id,\n            date,\n            text,\n        };\n        if (showStatus) {\n            data.status = status;\n        }\n        update(\n            reference,\n            ((record && record.id) as unknown) as Identifier,\n            {\n                last_seen: date,\n                status,\n            },\n            record\n        );\n        create(resource, data, {\n            onSuccess: () => {\n                setText('');\n                notify('Note added successfully', 'info');\n                refresh();\n            },\n        });\n        return false;\n    };\n    return (\n        <div className={classes.root}>\n            <form onSubmit={handleSubmit}>\n                <div className={classes.buttonSwitcher}>\n                    <Button \n                        variant={preview ? \"contained\": \"outlined\"} \n                        color=\"primary\"\n                        onClick={()=> setPreview(!preview)}\n                    >Markdown</Button>\n                </div>\n                <div className={classes.previewConatiner}>\n                    <div className={classes.previewRaw}>\n                        <TextInput\n                            label=\"Add a note\"\n                            variant=\"filled\"\n                            size=\"small\"\n                            fullWidth\n                            multiline\n                            value={text}\n                            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                                setText(event.target.value)\n                            }\n                        />\n                    </div>\n                    <Paper className={classes.previewMarkdown}>\n                        <ReactMarkdown children={text} remarkPlugins={[remarkGfm]} />\n                    </Paper>\n                </div>\n                <div className={classes.toolbar}>\n                    <span>\n                        {text ? (\n                            <>\n                                {showStatus && (\n                                    <StatusSelector\n                                        status={status}\n                                        setStatus={setStatus}\n                                        className={classes.small}\n                                    />\n                                )}\n                                <TextInput\n                                    type=\"datetime-local\"\n                                    variant=\"filled\"\n                                    size=\"small\"\n                                    value={date}\n                                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                                        setDate(event.target.value);\n                                    }}\n                                    className={classes.small}\n                                />\n                            </>\n                        ) : null}\n                    </span>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!text || loading}\n                    >\n                        Add this note\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst getCurrentDate = () => {\n    const now = new Date();\n    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n    return now.toISOString().slice(0, -8);\n};\n\nconst foreignKeyMapping = {\n    contacts: 'contact_id',\n    deals: 'deal_id',\n    companies: 'company_id',\n    products: 'product_id',\n};\n","import * as React from 'react';\nimport { useState, FormEvent, ChangeEvent } from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    DateField,\n    useResourceContext,\n    useDelete,\n    useUpdate,\n    useNotify,\n    useRecordContext,\n} from 'react-admin';\nimport {\n    Typography,\n    Tooltip,\n    IconButton,\n    FilledInput,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nimport { Status } from '../misc/Status';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(2),\n    },\n    metadata: {\n        marginBottom: theme.spacing(1),\n        color: theme.palette.text.secondary,\n    },\n    textarea: {\n        paddingTop: 16,\n        paddingLeft: 14,\n        paddingRight: 60,\n        paddingBottom: 14,\n        lineHeight: 1.3,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginTop: theme.spacing(1),\n    },\n    cancel: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        backgroundColor: theme.palette.grey[200],\n        padding: '0 1em',\n        borderRadius: 10,\n        display: 'flex',\n        alignItems: 'stretch',\n        marginBottom: theme.spacing(1),\n    },\n    text: {\n        flex: 1,\n    },\n    paragraph: {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: theme.typography.body1.fontSize,\n        lineHeight: 1,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    toolbar: {\n        marginLeft: theme.spacing(2),\n        visibility: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n    },\n}));\n\nexport const Note = ({\n    showStatus,\n    note,\n    isLast,\n    reference,\n}: {\n    showStatus?: boolean;\n    note: any;\n    isLast: boolean;\n    reference: string;\n}) => {\n    const [isHover, setHover] = useState(false);\n    const [isEditing, setEditing] = useState(false);\n    const [noteText, setNoteText] = useState(note.text);\n    const resource = useResourceContext();\n    const record = useRecordContext();\n    const notify = useNotify();\n    const classes = useStyles();\n    const [update, { loading }] = useUpdate();\n\n    const [handleDelete] = useDelete(resource, note.id, note, {\n        mutationMode: 'undoable',\n        onSuccess: () => {\n            notify('Note deleted', 'info', undefined, true);\n            update(\n                reference,\n                record.id,\n                { nb_notes: record.nb_notes - 1 },\n                record\n            );\n        },\n    });\n\n    const handleEnterEditMode = () => {\n        setEditing(true);\n    };\n\n    const handleCancelEdit = () => {\n        setEditing(false);\n        setNoteText(note.text);\n        setHover(false);\n    };\n\n    const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setNoteText(event.target.value);\n    };\n\n    const handleNoteUpdate = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        update(resource, note.id, { text: noteText }, note, {\n            onSuccess: () => {\n                setEditing(false);\n                setNoteText(note.text);\n                setHover(false);\n            },\n        });\n    };\n\n    return (\n        <div\n            className={classes.root}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n        >\n            <div className={classes.metadata}>\n                <ReferenceField\n                    record={note}\n                    resource=\"contactNotes\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    basePath=\"/contactNotes\"\n                >\n                    <TextField source=\"first_name\" variant=\"body1\" />\n                </ReferenceField>{' '}\n                <Typography component=\"span\" variant=\"body1\">\n                    added a note on{' '}\n                </Typography>\n                <DateField\n                    source=\"date\"\n                    record={note}\n                    variant=\"body1\"\n                    showTime\n                    locales=\"en\"\n                    options={{\n                        dateStyle: 'full',\n                        timeStyle: 'short',\n                    }}\n                />{' '}\n                {showStatus && <Status status={note.status} />}\n            </div>\n            {isEditing ? (\n                <form onSubmit={handleNoteUpdate}>\n                    <FilledInput\n                        value={noteText}\n                        onChange={handleTextChange}\n                        fullWidth\n                        multiline\n                        className={classes.textarea}\n                        autoFocus\n                    />\n                    <div className={classes.buttons}>\n                        <Button\n                            className={classes.cancel}\n                            onClick={handleCancelEdit}\n                            color=\"primary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            disabled={loading}\n                        >\n                            Update Note\n                        </Button>\n                    </div>\n                </form>\n            ) : (\n                <div \n                    className={classes.content}\n                    onClick={() => setHover(true)}\n                >\n                    <div className={classes.text}>\n                        <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                    </div>\n                    <div\n                        className={classes.toolbar}\n                        style={{ visibility: isHover ? 'visible' : 'hidden' }}\n                    >\n                        <Tooltip title=\"Edit note\">\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleEnterEditMode}\n                            >\n                                <EditIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete note\">\n                            <IconButton size=\"small\" onClick={handleDelete}>\n                                <TrashIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Note } from './Note';\nimport { NewNote } from './NewNote';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '0.5em',\n    },\n});\n\nexport const NotesIterator = ({\n    showStatus,\n    reference,\n}: {\n    showStatus?: boolean;\n    reference: 'companies' | 'contacts' | 'deals' | 'products';\n}) => {\n    const classes = useStyles();\n    const { data, ids, loaded } = useListContext();\n    if (!loaded) return null;\n    return (\n        <>\n            <NewNote showStatus={showStatus} reference={reference} />\n            <div className={classes.root}>\n                {ids.map((id, index) => (\n                    <Note\n                        note={data[id]}\n                        isLast={index === ids.length - 1}\n                        showStatus={showStatus}\n                        reference={reference}\n                        key={index}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\n\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 60,\n        height: 60,\n        // backgroundColor: 'aliceblue',\n    },\n    img: {\n        objectFit: 'contain',\n    },\n    small: {\n        width: 20,\n        height: 20,\n    },\n    large: {\n        width: 40,\n        height: 40,\n    },\n});\n\nexport const ProductAvatar = ({\n    record,\n    size = 'large',\n}: {\n    record?: Product;\n    size?: 'small' | 'large';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n\n\n    return (record.image\n        ? <Avatar\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            className={classes.avatar}\n            imgProps={{ className: clsx(classes.img, classes[size]) }}\n        />\n        : <Avatar\n            alt={record.model}\n            className={classes.avatar}\n        >\n            <ShoppingCartIcon />\n        </Avatar>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Paper, Typography, Link as MuiLink, Box, Chip, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactsIcon from '@material-ui/icons/AccountCircle';\nimport DealIcon from '@material-ui/icons/MonetizationOn';\nimport { linkToRecord, TextField, ReferenceField, ImageField, useListContext } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\nimport { ProductAvatar } from './ProductAvatar';\nimport { Product } from '../types';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        padding: '1em',\n        position: 'relative',\n    },\n    identity: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    name: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    family: {\n        textAlign: 'center',\n        marginTop: theme.spacing(1),\n    },\n    stats: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    singleStat: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    statIcon: {\n        marginRight: theme.spacing(1),\n    },\n    image: {\n        width: 28,\n        height: 28,\n    },\n    checkbox: {\n        position: 'absolute',\n        top: 0,\n        left: theme.spacing(1),\n    },\n    hidden:{\n        display: 'none',\n    }\n}));\n\nexport const ProductCard = ({ record }: { record: Product }) => {\n    const classes = useStyles();\n    const [elevation, setElevation] = useState(1);\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<Product>();\n    return (\n        <MuiLink\n            component={Link}\n            to={linkToRecord('/products', record.id, 'show')}\n            underline=\"none\"\n            onMouseEnter={() => setElevation(3)}\n            onMouseLeave={() => setElevation(1)}\n        >\n            <Paper className={classes.paper} elevation={elevation}>\n                <Checkbox\n                    edge=\"start\"\n                    checked={selectedIds.includes(record.id)}\n                    tabIndex={-1}\n                    disableRipple\n                    className={classNames(classes.checkbox, {[classes.hidden]: !loaded})}\n                    onClick={(e: any )=> {\n                        e.stopPropagation();\n                        onToggleItem(record.id);\n                    }}\n                />\n                <Box position=\"absolute\" top={10} right={10}>\n                    <ReferenceField\n                        record={record}\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <ImageField \n                            source=\"logo\" \n                            title=\"name\"\n                            classes={classes}\n                        />\n                    </ReferenceField>\n                </Box>\n                <div className={classes.identity}>\n                    <ProductAvatar record={record} />\n                    <div className={classes.name}>\n                        <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"subtitle2\">\n                            {record.model}\n                        </Typography>\n                        </Box>\n                    </div>\n\n                    <div className={classes.family}>\n                        <Typography variant=\"body2\">\n                            in family{' '}\n                            <ReferenceField\n                                record={record}\n                                source=\"family_id\"\n                                reference=\"productFamilies\"\n                                link=\"show\"\n                            >\n                                <TextField source=\"name\" />\n                            </ReferenceField>\n                        </Typography>\n                    </div>\n\n                </div>\n                <div className={classes.stats}>\n                    <div className={classes.singleStat}>\n                        <ContactsIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_notes}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_notes > 1 ? 'notes' : 'note'}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className={classes.singleStat}>\n                        <DealIcon\n                            color=\"disabled\"\n                            className={classes.statIcon}\n                        />\n                        <div>\n                            <Typography\n                                variant=\"subtitle2\"\n                                style={{ marginBottom: -8 }}\n                            >\n                                {record.nb_properties}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                                {record.nb_properties > 1 ? 'properties' : 'property'}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Paper>\n        </MuiLink>\n    );\n};\n","import * as React from 'react';\nimport { Box, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useListContext, Identifier } from 'react-admin';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport { ProductCard } from './ProductCard';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    gridList: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width:  '100%',\n        gap: '5px',\n    },\n    paper: {\n        height: 200,\n        width: 194,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: \"center\",\n        padding: '1em',\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n\nconst times = (nbChildren: number, fn: (key: number) => any) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = () => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.gridList}>\n            {times(15, key => (\n                <Paper className={classes.paper} key={key} >\n                <Skeleton variant=\"circle\" width={60} height={60}  animation=\"wave\"/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={110}/>\n                <Skeleton variant=\"text\" animation=\"wave\" width={150}/>\n                <Skeleton variant=\"rect\" width={180} height={40} />\n                </Paper>\n            ))}\n        </Box>\n    );\n};\n\nconst LoadedGridList = () => {\n    const { ids, data } = useListContext<Product>();\n    const classes = useStyles();\n\n    if (!ids || !data) return null;\n\n    return (\n        <Box className={classes.gridList}>\n            {ids.map((id: Identifier) => (\n                <ProductCard key={id} record={data[id]} />\n            ))}\n        </Box>\n    );\n};\n\nexport const ProductGridList = () => {\n    const { loaded, loading } = useListContext();\n    return loading ? <LoadingGridList /> : <LoadedGridList /> ;\n};\n","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { sizes } from './sizes';\nimport { LogoField } from './LogoField';\nimport { CompanyAside } from './CompanyAside';\nimport { Company, Deal, Contact } from '../types';\nimport { stageNames } from '../deals/stages';\nimport { NotesIterator } from '../notes';\nimport { CountryField } from './CountryField';\nimport { ProductGridList } from '../products/ProductGridList';\n\nexport const CompanyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <CompanyShowContent />\n    </ShowBase>\n);\n\nconst CompanyShowContent = () => {\n    const { record, loaded } = useShowContext<Company>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <LogoField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.name}</Typography>\n                                    {record.relation && (\n                                        <Chip \n                                            label={record.relation} \n                                            variant=\"outlined\" \n                                            size=\"small\"\n                                        />\n                                    )}\n                                </Box>\n                                <Typography \n                                    variant=\"body2\" \n                                    color=\"textSecondary\"\n                                >\n                                    {`#${record.id} - `}\n                                </Typography>\n                                {record.sector && (\n                                        <Typography variant=\"body2\">\n                                            <TextField source=\"sector\" />,{' '}\n                                            <SelectField\n                                                source=\"size\"\n                                                choices={sizes}\n                                            />\n                                        </Typography>\n                                )}\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"country_id\"\n                                    reference=\"countries\"\n                                    link={false}\n                                >\n                                    <CountryField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes === 1\n                                        ? '1 Note'\n                                        : `${record.nb_notes} Notes`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_contacts === 1\n                                        ? '1 Contact'\n                                        : `${record.nb_contacts} Contacts`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_deals === 1\n                                        ? '1 Deal'\n                                        : `${record.nb_deals} Deals`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_products === 1\n                                        ? '1 Product'\n                                        : `${record.nb_products} Products`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"companyNotes\"\n                                target=\"company_id\"\n                                sort={{ field: 'date', order: 'DESC' }}\n                            >\n                                 <NotesIterator reference=\"companies\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField\n                                reference=\"contacts\"\n                                target=\"company_id\"\n                                sort={{ field: 'last_name', order: 'ASC' }}\n                            >\n                                <ContactsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <ReferenceManyField\n                                reference=\"deals\"\n                                target=\"company_id\"\n                                sort={{ field: 'name', order: 'ASC' }}\n                            >\n                                <DealsIterator />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Box mt={1}>\n                                <ReferenceManyField\n                                    reference=\"products\"\n                                    target=\"company_id\"\n                                    label=\"Products\"\n                                    pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                    perPage={25}\n                                >\n                                    <ProductGridList />\n                                </ReferenceManyField>\n                            </Box>\n                            <Box textAlign=\"center\" mt={1}>\n                                <CreateRelatedProductButton record={record} />\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <CompanyAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ContactsIterator = () => {\n    const { data, ids, loaded } = useListContext<Contact>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const contact = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/contacts/${id}/show`}\n                        >\n                            <ListItemAvatar>\n                                <Avatar record={contact} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${contact.first_name} ${contact.last_name}`}\n                                secondary={\n                                    <>\n                                        {contact.title}{' '}\n                                        {`- ${contact.nb_notes} notes `}\n                                        <TagsList record={contact} />\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(contact.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={contact.status} />\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                <CreateRelatedContactButton record={record} />\n            </Box>\n        </Box>\n    );\n};\n\nconst CreateRelatedContactButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/contacts/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<PersonAddIcon />}\n    >\n        Add contact\n    </Button>\n);\n\nconst CreateRelatedProductButton = ({ record }: any) => (\n    <Button\n        component={RouterLink}\n        to={{\n            pathname: '/products/create',\n            state: { record: { company_id: record.id } },\n        }}\n        color=\"primary\"\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<AddIcon />}\n    >\n        Add product\n    </Button>\n);\n\nconst DealsIterator = () => {\n    const { data, ids, loaded } = useListContext<Deal>();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const deal = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/deals/${id}/show`}\n                        >\n                            <ListItemText\n                                primary={deal.name}\n                                secondary={\n                                    <>\n                                        {/* @ts-ignore */}\n                                        {stageNames[deal.stage]},{' '}\n                                        {deal.amount.toLocaleString('en-US', {\n                                            notation: 'compact',\n                                            style: 'currency',\n                                            currency: 'USD',\n                                            currencyDisplay: 'narrowSymbol',\n                                            minimumSignificantDigits: 3,\n                                        })}\n                                        , {deal.type}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"span\"\n                                >\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(deal.updated_at),\n                                        now\n                                    )}{' '}\n                                    ago{' '}\n                                </Typography>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    AutocompleteArrayInput,\n    FormDataConsumer,\n    required,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { CompanyAside } from './CompanyAside';\nimport { LogoField } from './LogoField';\nimport { sectors } from './sectors';\nimport { sizes } from './sizes';\nimport { relations } from './relations';\nimport DistributorInput from './DistributorInput';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const CompanyEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit {...props} aside={<CompanyAside link=\"show\" />} actions={false}>\n            <SimpleForm component={CustomLayout} redirect=\"show\">\n                <TextInput source=\"name\" validate={required()} fullWidth />\n                <SelectInput\n                    source=\"sector\"\n                    choices={sectors}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"size\"\n                    choices={sizes}\n                    formClassName={classes.inline}\n                />\n                <SelectInput\n                    source=\"relation\"\n                    choices={relations}\n                    formClassName={classes.inline}\n                />\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.relation != 'Distributor' &&\n                        <ReferenceInput\n                            source=\"distributor_id\"\n                            reference=\"companies\"\n                            filter={{ relation: 'Distributor' }}\n                        >\n                            <DistributorInput />\n                        </ReferenceInput>\n                    }\n                </FormDataConsumer>\n\n                <ReferenceArrayInput source=\"use_products\" reference=\"products\">\n                    <AutocompleteArrayInput optionText=\"model\" />\n                </ReferenceArrayInput>\n\n                <CustomDivider />\n                <TextInput source=\"address\" fullWidth helperText={false} />\n                <TextInput\n                    source=\"city\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.inline} />\n                <TextInput source=\"stateAbbr\" formClassName={classes.inline} />\n                <ReferenceInput\n                    source=\"country_id\"\n                    reference=\"countries\"\n                >\n                    <AutocompleteInput optionText=\"nicename\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput source=\"website\" fullWidth helperText={false} />\n                <TextInput source=\"linkedIn\" fullWidth helperText={false} />\n                <TextInput source=\"logo\" fullWidth />\n                <CustomDivider />\n                <TextInput\n                    source=\"phone_number\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                    helperText={false}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    formClassName={classes.inline}\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <LogoField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { CompanyList } from './CompanyList';\nimport { CompanyCreate } from './CompanyCreate';\nimport { CompanyShow } from './CompanyShow';\nimport { CompanyEdit } from './CompanyEdit';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nexport default {\n    list: CompanyList,\n    create: CompanyCreate,\n    edit: CompanyEdit,\n    show: CompanyShow,\n    icon: BusinessIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Contact, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ContactAside = ({ \n    record, \n    link = 'edit',\n}: {\n    record?: Contact;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/contacts\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst TasksIterator = () => {\n    const { data, ids, loading } = useListContext();\n    if (loading || ids.length === 0) return null;\n    return (\n            <List>\n                {ids.map(id => {\n                    const task = data[id];\n                    return (\n                        <ListItem key={id} disableGutters>\n                            <Box>\n                                <Typography variant=\"body2\">\n                                    {task.text}\n                                </Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                >\n                                    due{' '}\n                                    <DateField\n                                        source=\"due_date\"\n                                        record={task}\n                                    />\n                                </Typography>\n                            </Box>\n                        </ListItem>\n                    );\n                })}\n            </List>\n    );\n};\n\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Contact;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Personal info</Typography>\n            <Divider />\n\n            <Box mt={2}>\n                <EmailField source=\"email\" />\n            </Box>\n\n            <Box mt={1}>\n                <TextField source=\"phone_number1\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Work\n                </Typography>\n            </Box>\n\n            <Box mb={1}>\n                <TextField source=\"phone_number2\" />{' '}\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                    Home\n                </Typography>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"body2\">\n                    {record.gender === 'male' ? 'He/Him' : 'She/Her'}\n                </Typography>\n            </Box>\n\n            <Typography variant=\"subtitle2\">Background</Typography>\n            <Divider />\n\n            <Box mt={2}>{record && record.background}</Box>\n            <Box mt={1} mb={3}>\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Added on\n                </Typography>{' '}\n                <DateField\n                    source=\"first_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Last seen on\n                </Typography>{' '}\n                <DateField\n                    source=\"last_seen\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                    color=\"textSecondary\"\n                />\n                <br />\n                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                    Followed by\n                </Typography>{' '}\n                <ReferenceField\n                    resource=\"contacts\"\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                >\n                    <FunctionField<Sale>\n                        source=\"last_name\"\n                        render={record =>\n                            record ? `${record.first_name} ${record.last_name}` : ''\n                        }\n                    />\n                </ReferenceField>\n            </Box>\n\n            <Box mb={3}>\n                <Typography variant=\"subtitle2\">Tags</Typography>\n                <Divider />\n                <TagsListEdit record={record} reference=\"contacts\" />\n            </Box>\n\n            <Box>\n                <Typography variant=\"subtitle2\">Tasks</Typography>\n                <Divider />\n                <ReferenceManyField\n                    resource=\"contacts\"\n                    target=\"contact_id\"\n                    reference=\"tasks\"\n                >\n                    <TasksIterator />\n                </ReferenceManyField>\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Contact } from '../types';\n\nexport const ContactShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ContactShowContent />\n    </ShowBase>\n);\n\nconst ContactShowContent = () => {\n    const { record, loaded } = useShowContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.first_name} {record.last_name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {`#${record.id} - `}\n                                    {record.title} at{' '}\n                                    <ReferenceField\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        link=\"show\"\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <ReferenceManyField\n                            target=\"contact_id\"\n                            reference=\"contactNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator showStatus reference=\"contacts\" />\n                        </ReferenceManyField>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ContactAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { endOfYesterday, startOfWeek, startOfMonth, subMonths } from 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Status } from '../misc/Status';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        order: -1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: '13em',\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n        }\n    },\n}));\n\nexport const ContactListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data, ids } = useGetList<Tag>(\n        'tags',\n        { page: 1, perPage: 10 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Last seen\" icon={<AccessTimeIcon />}>\n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        last_seen_gte: endOfYesterday().toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        last_seen_gte: startOfWeek(new Date()).toISOString(),\n                        last_seen_lte: undefined,\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this week\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before this month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: startOfMonth(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"Before last month\"\n                    value={{\n                        last_seen_gte: undefined,\n                        last_seen_lte: subMonths(\n                            startOfMonth(new Date()),\n                            1\n                        ).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                <FilterListItem\n                    label={\n                        <>\n                            Cold <Status status=\"cold\" />\n                        </>\n                    }\n                    value={{\n                        status: 'cold',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Warm <Status status=\"warm\" />\n                        </>\n                    }\n                    value={{\n                        status: 'warm',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            Hot <Status status=\"hot\" />\n                        </>\n                    }\n                    value={{\n                        status: 'hot',\n                    }}\n                />\n                <FilterListItem\n                    label={\n                        <>\n                            In contract <Status status=\"in-contract\" />\n                        </>\n                    }\n                    value={{\n                        status: 'in-contract',\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Tags\" icon={<LocalOfferIcon />}>\n                {ids &&\n                    data &&\n                    ids.map(id => (\n                        <FilterListItem\n                            key={id}\n                            label={<TagChip record={data[id]}/>}\n                            value={{ tags: [id] }}\n                        />\n                    ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n    FilterLiveSearch,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ContactListFilter } from './ContactListFilter';\nimport { Contact } from '../types';\nimport { ImportButton } from 'react-admin-import-csv';\n\nconst ContactListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Contact\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const contact = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/contacts/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={contact} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${contact.first_name} ${contact.last_name}`}\n                            secondary={\n                                <>\n                                    {`#${contact.id} - `}\n                                    {contact.title} at{' '}\n                                    <ReferenceField\n                                        record={contact}\n                                        source=\"company_id\"\n                                        reference=\"companies\"\n                                        basePath=\"/companies\"\n                                        link={false}\n                                    >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>{' '}\n                                    {!!contact.nb_notes &&\n                                        `- ${contact.nb_notes} notes `}\n                                    <TagsList record={contact} />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                last activity{' '}\n                                {formatDistance(\n                                    new Date(contact.last_seen),\n                                    now\n                                )}{' '}\n                                ago <Status status={contact.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ContactListActions = (props: ListActionsProps) => {\n    const classes = useStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['id', 'last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/contacts\"\n                variant=\"contained\"\n                label=\"New Contact\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ContactList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ContactListActions />}\n            aside={<ContactListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id }}\n            sort={{ field: 'last_seen', order: 'DESC' }}\n        >\n            <ContactListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ContactAside } from './ContactAside';\nimport { Contact } from '../types';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ContactEditContent = () => {\n    const { record, loaded, save } = useEditContext<Contact>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"first_name\" />\n                                                <Spacer />\n                                                <TextInput source=\"last_name\" />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"title\" />\n                                                <Spacer />\n                                                <ReferenceInput\n                                                    source=\"company_id\"\n                                                    reference=\"companies\"\n                                                >\n                                                    <AutocompleteInput optionText=\"name\" />\n                                                </ReferenceInput>\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"email\"\n                                                    fullWidth\n                                                />\n                                            </Box>\n                                            <Box display=\"flex\">\n                                                <TextInput source=\"phone_number1\" />\n                                                <Spacer />\n                                                <TextInput source=\"phone_number2\" />\n                                            </Box>\n                                            <Divider />\n                                            <Box mt={2} width={430}>\n                                                <TextInput\n                                                    source=\"background\"\n                                                    multiline\n                                                    fullWidth\n                                                />\n                                                <TextInput\n                                                    source=\"avatar\"\n                                                    fullWidth\n                                                />\n                                                <BooleanInput source=\"has_newsletter\" />\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ContactAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ContactEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ContactEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { Contact } from '../types';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ContactCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const contactDefaultValue = () => ({ sales_id: identity && identity?.id });\n    const transform = (data: Contact) => ({\n        ...data,\n        last_seen: new Date(),\n        tags: [],\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"first_name\" \n                    validate={[required()]} \n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    validate={[required()]}\n                    formClassName={classes.inline}\n                />\n                <CustomDivider />\n                <TextInput \n                    source=\"title\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <ReferenceInput\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    formClassName={classes.inline}\n                >\n                    <AutocompleteInput optionText=\"name\" />\n                </ReferenceInput>\n                <CustomDivider />\n                <TextInput\n                    source=\"email\"\n                    fullWidth\n                />\n                <TextInput source=\"phone_number1\"\n                    formClassName={clsx(classes.inline, 'first-child')} />\n                <TextInput source=\"phone_number2\"\n                    formClassName={classes.inline} />\n                <CustomDivider />\n                <TextInput\n                    source=\"background\"\n                    multiline\n                    fullWidth\n                />\n                <TextInput\n                    source=\"avatar\"\n                    fullWidth\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Account manager\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n                <BooleanInput source=\"has_newsletter\" />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { ContactShow } from './ContactShow';\nimport { ContactList } from './ContactList';\nimport { ContactEdit } from './ContactEdit';\nimport { ContactCreate } from './ContactCreate';\nimport ContactsIcon from '@material-ui/icons/Contacts';\n\nexport default {\n    list: ContactList,\n    show: ContactShow,\n    edit: ContactEdit,\n    create: ContactCreate,\n    icon: ContactsIcon,\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    EmailField,\n    DateField,\n    ReferenceManyField,\n    EditButton,\n    ShowButton,\n    useListContext,\n    ReferenceField,\n    FunctionField,\n} from 'react-admin';\nimport { Box, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { TagsListEdit } from '../tags/TagsListEdit';\n\nimport { Task } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const TaskAside = ({\n    record,\n    link = 'edit',\n    ...props\n}: {\n    record?: Task;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/tasks\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Task;\n}) => \n    record ? (\n        <>\n        </>\n    ) : null;","export const statuses = [\n    {id: 'pending', name: 'Pending', color: '#FFA000'},\n    {id: 'done', name: 'Done', color: '#CDDC39'},\n    {id: 'postponed', name: 'Postponed', color: '#2196F3'},\n]\n\nexport const getStatus = (id: string) => statuses.find(status => status.id == id);","import { Box, Chip } from '@material-ui/core';\nimport { Task } from '../types'\nimport { getStatus } from './status';\n\nexport const TaskChip = ({ record }: { record: Task; }) => {\n    const statusItem = getStatus(record.status);\n    const statusName = statusItem ? statusItem.name: '';\n    const statusColor = statusItem ? statusItem.color: '#000'\n    \n    return (\n         <>\n            { record && (\n                    <Chip\n                    label={statusName}\n                    size=\"small\"\n                    style={{\n                        backgroundColor: statusColor,\n                        border: 0,\n                        cursor: 'pointer',\n                    }}\n                />\n            )}\n        </>\n    );\n};","import * as React from 'react';\nimport { useState, FormEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    Identifier,\n    useShowContext,\n    FunctionField, \n    Button, \n    useUpdate,\n    useRefresh,\n    useNotify\n} from 'react-admin';\nimport { \n    Avatar, \n    Box, \n    Card, \n    CardContent, \n    Chip, \n    Typography,\n} from '@material-ui/core';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport DoneIcon from '@material-ui/icons/Done';\n\nimport { TaskAside } from './TaskAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { Sale, Task } from '../types';\nimport { TaskChip } from './TaskChip';\n\nconst doneStatus = 'done';\n\nexport const TaskShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <TaskShowContent />\n    </ShowBase>\n);\n\nconst TaskShowContent = () => {\n    const { record, loaded } = useShowContext<Task>();\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n    const notify = useNotify();\n\n    if (!loaded || !record) return null;\n\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" alignItems=\"flex-start\">\n                            <Avatar >\n                                <AssignmentTurnedInIcon />\n                            </Avatar>\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.text} {' '}\n                                    <TaskChip record={record} />\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={record}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </Typography>\n                            </Box>\n                            {\n                                record.status != doneStatus && \n                                <DoneButton record={record} />\n                            }\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <TaskAside record={record} />\n        </Box>\n    );\n};\n\n\nconst DoneButton = ({\n    record,\n}: {\n    record: Task;\n}) =>{\n    const [update] = useUpdate();\n    const refresh = useRefresh();\n    const notify = useNotify();\n\n    const handleDone = (event: any) => {\n        event.preventDefault();\n        update(\n            'tasks',\n            ((record && record.id) as unknown) as Identifier,\n            {\n                status: doneStatus,\n            },\n            record, {\n                onSuccess: () => {\n                    notify('Task is marked done', 'info');\n                    refresh();\n                },\n            },\n        );\n        return false;\n    };\n    return (\n        <Button\n            label=\"Done\"\n            variant=\"outlined\"\n            onClick={handleDone}\n        >\n            <DoneIcon />\n        </Button>\n    );\n}","import * as React from 'react';\nimport { Box } from '@material-ui/core';\n\nimport { getStatus } from './status';\n\nexport const TaskStatus = ({ status }: { status: string }) => {\n    const statusItem = getStatus(status);\n    const statusColor = statusItem ? statusItem.color : \"#000\";\n    return (\n        <Box\n            width={10}\n            height={10}\n            display=\"inline-block\"\n            borderRadius={5}\n            bgcolor={statusColor}\n            component=\"span\"\n        />\n    );\n};","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport { \n    endOfYesterday, \n    startOfWeek, \n    startOfMonth, \n    subMonths, \n    endOfToday,\n    endOfWeek,\n    addWeeks,\n    endOfMonth,\n } from 'date-fns';\n\nimport { TaskStatus } from './TaskStatus';\nimport { TagChip } from '../tags/TagChip';\nimport { Tag } from '../types';\nimport { statuses } from './status';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const TaskListFilter = () => {\n    const { identity } = useGetIdentity();\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n            <FilterList label=\"Due date\" icon={<AccessTimeIcon />}>                \n                <FilterListItem\n                    label=\"Today\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfToday().toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"This week\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfWeek(new Date()).toISOString(),\n                    }}\n                />\n                <FilterListItem\n                    label=\"This month\"\n                    value={{\n                        due_date_gte: undefined,\n                        due_date_lte: endOfMonth(new Date()).toISOString(),\n                    }}\n                />\n            </FilterList>\n            <FilterList label=\"Status\" icon={<TrendingUpIcon />}>\n                {statuses.map(status =>(\n                    <FilterListItem\n                    label={\n                        <>\n                            {status.name} <TaskStatus status={status.id} />\n                        </>\n                    }\n                    value={{\n                        status: status.id,\n                    }}\n                />\n                ))}\n            </FilterList>\n            <FilterList\n                label=\"Account manager\"\n                icon={<SupervisorAccountIcon />}\n            >\n                <FilterListItem\n                    label=\"Me\"\n                    value={{\n                        sales_id: identity && identity.id,\n                    }}\n                />\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","// in ./MarkDoneButton.js\nimport * as React from 'react';\nimport { BulkUpdateButton, BulkActionProps } from 'react-admin';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst doneState = { status: 'done' };\n\nconst MarkDoneButton = (props: BulkActionProps) => (\n    <BulkUpdateButton\n        {...props}\n        label=\"Mark checked\"\n        data={doneState}\n        icon={<DoneIcon/>}\n        mutationMode=\"pessimistic\"\n    />\n);\n\nexport default MarkDoneButton;","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport { Fragment } from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    BulkDeleteButton,\n    useGetIdentity,\n    BulkActionProps,\n    ListActionsProps,\n    FunctionField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n    Avatar,\n    Chip,\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { ImportButton } from \"react-admin-import-csv\";\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\n\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { TaskListFilter } from './TaskListFilter';\nimport { Sale, Task } from '../types';\nimport MarkDoneButton from './MarkDoneButton';\nimport { TaskStatus } from './TaskStatus';\n\nconst TaskListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        Task\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const task = data[id];\n                const taskOverdue = (task.status !== 'done') &&  (task.due_date < (new Date()).toISOString());\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/Tasks/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar\n                                style={taskOverdue ? { backgroundColor: red[400] } : undefined}\n                            >\n                                {taskOverdue\n                                ? <NotificationsActiveIcon />\n                                : <AssignmentTurnedInIcon />\n                                }\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <>\n                                {task.text} {' '}\n                                {(task.status !== 'done') && \n                                    (task.due_date < (new Date()).toISOString()) &&\n                                    <NotificationsActiveIcon\n                                        fontSize=\"small\"\n                                        style={{ color: red[500] }}\n                                    />\n                                }\n                                </>\n                            }\n                            secondary={\n                                <>\n                                    <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                        Assigned to\n                                    </Typography>{' '}\n                                    <ReferenceField\n                                        record={task}\n                                        source=\"sales_id\"\n                                        reference=\"sales\"\n                                    >\n                                        <FunctionField<Sale>\n                                            source=\"last_name\"\n                                            render={record =>\n                                                record ? `${record.first_name} ${record.last_name}` : ''\n                                            }\n                                        />\n                                    </ReferenceField>\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                due in{' '}\n                                {formatDistance(\n                                    new Date(task.due_date),\n                                    now\n                                )}\n                                {' '}<TaskStatus status={task.status} />\n                            </Typography>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst TaskListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['due_date', 'status']} />\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/Tasks\"\n                variant=\"contained\"\n                label=\"New Task\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nconst TaskBulkActionButtons = (props: BulkActionProps) => (\n    <Fragment>\n        <MarkDoneButton {...props} />\n        {/* default bulk delete action */}\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nexport const TaskList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<TaskListActions />}\n            aside={<TaskListFilter />}\n            bulkActionButtons={<TaskBulkActionButtons />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{ sales_id: identity?.id, status: 'pending' }}\n            sort={{ field: 'due_date', order: 'ASC' }}\n        >\n            <TaskListContent />\n        </RaList>\n    ) : null;\n};\n","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    required,\n    Toolbar,\n    useEditContext,\n    DateInput,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport omit from 'lodash/omit';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { TaskAside } from './TaskAside';\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst TaskEditContent = () => {\n    const classes = useStyles();\n    const { record, loaded, save } = useEditContext<Task>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                        <Avatar >\n                                            <AssignmentTurnedInIcon />\n                                        </Avatar>\n                                        </Box>\n                                        <Box flex=\"1\" mt={-1}>\n                                            <TextInput \n                                                source=\"text\"\n                                                label=\"Task\"\n                                                validate={[required()]}\n                                                fullWidth\n                                            />\n                                            <DateInput\n                                                source=\"due_date\"\n                                                className={clsx(classes.inline, 'first-child')}\n                                            />\n                                            <SelectInput\n                                                source=\"status\"\n                                                choices={statuses}\n                                                className={classes.inline}\n                                            />\n                                            \n                                            <ReferenceInput\n                                                source=\"sales_id\"\n                                                reference=\"sales\"\n                                                label=\"Assigned to\"\n                                                helperText={false}\n                                            >\n                                                <SelectInput\n                                                    optionText={(sales: any) =>\n                                                        `${sales.first_name} ${sales.last_name}`\n                                                    }\n                                                />\n                                            </ReferenceInput>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <TaskAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const TaskEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <TaskEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    DateInput,\n    useCreateContext,\n    SelectField,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\n\nimport { Task } from '../types';\nimport { statuses } from './status';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const TaskCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    \n    if (!identity) return null;\n\n    const defaultValue = () => ({\n        due_date: new Date(), \n        status: 'pending',\n        sales_id: identity && identity?.id,\n    });\n    const transform = (data: Task) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={defaultValue}\n                transform={transform}\n            >\n                <TextInput \n                    source=\"text\"\n                    label=\"Task\"\n                    validate={[required()]}\n                    fullWidth\n                />\n                <DateInput\n                    source=\"due_date\"\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <SelectInput\n                    source=\"status\"\n                    choices={statuses}\n                    formClassName={classes.inline}\n                />\n                <ReferenceInput\n                    source=\"sales_id\"\n                    reference=\"sales\"\n                    label=\"Assigned to\"\n                    helperText={false}\n                >\n                    <SelectInput\n                        optionText={(sales: any) =>\n                            `${sales.first_name} ${sales.last_name}`\n                        }\n                    />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar >\n                    <AssignmentTurnedInIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);","/* eslint-disable import/no-anonymous-default-export */\nimport { TaskShow } from './TaskShow';\nimport { TaskList } from './TaskList';\nimport { TaskEdit } from './TaskEdit';\nimport { TaskCreate } from './TaskCreate';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\n\nexport default {\n    list: TaskList,\n    show: TaskShow,\n    edit: TaskEdit,\n    create: TaskCreate,\n    icon: FormatListBulletedIcon,\n};\n","import * as React from 'react';\nimport { ReferenceField, useRedirect } from 'react-admin';\nimport { Card, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { LogoField } from '../companies/LogoField';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    cardContent: {\n        padding: theme.spacing(1),\n        display: 'flex',\n    },\n    cardText: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const DealCard = ({ deal, index }: { deal: Deal; index: number }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    if (!deal) return null;\n\n    const handleClick = () => {\n        redirect(`/deals/${deal.id}/show`);\n    };\n    return (\n        <Draggable draggableId={String(deal.id)} index={index}>\n            {(provided, snapshot) => (\n                <div\n                    className={classes.root}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    onClick={handleClick}\n                >\n                    <Card\n                        style={{\n                            opacity: snapshot.isDragging ? 0.9 : 1,\n                            transform: snapshot.isDragging\n                                ? 'rotate(-2deg)'\n                                : '',\n                        }}\n                        elevation={snapshot.isDragging ? 3 : 1}\n                    >\n                        <Box p={1} display=\"flex\">\n                            <ReferenceField\n                                source=\"company_id\"\n                                record={deal}\n                                reference=\"companies\"\n                                resource=\"deals\"\n                                basePath=\"/deals\"\n                            >\n                                <LogoField size=\"small\" />\n                            </ReferenceField>\n                            <Box ml={1}>\n                                <Typography variant=\"body2\" gutterBottom>\n                                    {deal.name}\n                                </Typography>\n                                <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                >\n                                    {deal.amount.toLocaleString('en-US', {\n                                        notation: 'compact',\n                                        style: 'currency',\n                                        currency: 'USD',\n                                        currencyDisplay: 'narrowSymbol',\n                                        minimumSignificantDigits: 3,\n                                    })}\n                                    , {deal.type}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Card>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n","import * as React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Identifier, RecordMap } from 'react-admin';\n\nimport { DealCard } from './DealCard';\nimport { stageNames } from './stages';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        flex: 1,\n        paddingTop: 8,\n        paddingBottom: 16,\n        backgroundColor: '#eaeaee',\n        '&:first-child': {\n            paddingLeft: 5,\n            borderTopLeftRadius: 5,\n        },\n        '&:last-child': {\n            paddingRight: 5,\n            borderTopRightRadius: 5,\n        },\n    },\n    droppable: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 5,\n        padding: 5,\n        '&.isDraggingOver': {\n            backgroundColor: '#dadadf',\n        },\n    },\n});\n\nexport const DealColumn = ({\n    stage,\n    dealIds,\n    data,\n}: {\n    stage: string;\n    dealIds: Identifier[];\n    data: RecordMap<Deal>;\n}) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography align=\"center\" variant=\"subtitle1\">\n                {/* @ts-ignore */}\n                {stageNames[stage]}\n            </Typography>\n            <Droppable droppableId={stage}>\n                {(droppableProvided, snapshot) => (\n                    <div\n                        ref={droppableProvided.innerRef}\n                        {...droppableProvided.droppableProps}\n                        className={\n                            classes.droppable +\n                            (snapshot.isDraggingOver ? ' isDraggingOver' : '')\n                        }\n                    >\n                        {dealIds.map((id, index) => (\n                            <DealCard key={id} index={index} deal={data[id]} />\n                        ))}\n                        {droppableProvided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport {\n    useMutation,\n    Identifier,\n    useListContext,\n    RecordMap,\n    DataProviderContext,\n} from 'react-admin';\nimport { Box } from '@material-ui/core';\nimport { DragDropContext, OnDragEndResponder } from 'react-beautiful-dnd';\nimport isEqual from 'lodash/isEqual';\n\nimport { DealColumn } from './DealColumn';\nimport { stages } from './stages';\nimport { Deal } from '../types';\n\ninterface DealsByColumn {\n    [stage: string]: Identifier[];\n}\n\nconst initialDeals: DealsByColumn = stages.reduce(\n    (obj, stage) => ({ ...obj, [stage]: [] }),\n    {}\n);\n\nconst getDealsByColumn = (\n    ids: Identifier[],\n    data: RecordMap<Deal>\n): DealsByColumn => {\n    // group deals by column\n    const columns = ids.reduce(\n        (acc, id) => {\n            acc[data[id].stage].push(id);\n            return acc;\n        },\n        stages.reduce((obj, stage) => ({ ...obj, [stage]: [] }), {} as any)\n    );\n    // order each column by index\n    stages.forEach(stage => {\n        columns[stage] = columns[stage].sort(\n            (a: Identifier, b: Identifier) => data[a].index - data[b].index\n        );\n    });\n    return columns;\n};\n\nexport const DealListContent = () => {\n    const {\n        data,\n        ids,\n        loaded,\n        page,\n        perPage,\n        currentSort,\n        filterValues,\n    } = useListContext<Deal>();\n\n    const [deals, setDeals] = useState<DealsByColumn>(\n        loaded ? getDealsByColumn(ids, data) : initialDeals\n    );\n    // we use the raw dataProvider to avoid too many updates to the Redux store after updates (which would create junk)\n    const dataProvider = useContext(DataProviderContext);\n\n    // FIXME: use refetch when available\n    const [refresh] = useMutation({\n        resource: 'deals',\n        type: 'getList',\n        payload: {\n            pagination: { page, perPage },\n            sort: currentSort,\n            filter: filterValues,\n        },\n    });\n\n    // update deals by columns when the dataProvider response updates\n    useEffect(() => {\n        if (!loaded) return;\n        const newDeals = getDealsByColumn(ids, data);\n        if (isEqual(deals, newDeals)) {\n            return;\n        }\n        setDeals(newDeals);\n    }, [data, ids, loaded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!loaded) return null;\n\n    const onDragEnd: OnDragEndResponder = async result => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // moving deal inside the same column\n\n            const column = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const sourceDeal = data[column[source.index]];\n            const destinationDeal = data[column[destination.index]];\n\n            // update local state\n            // remove source deal from column\n            column.splice(source.index, 1);\n            // read source deal at destination\n            column.splice(destination.index, 0, Number(draggableId));\n            setDeals({\n                ...deals,\n                [source.droppableId]: column,\n            });\n\n            // update backend\n            // Fetch all the deals in this stage (because the list may be filtered, but we need to update even non-filtered deals)\n            const { data: columnDeals } = await dataProvider.getList('deals', {\n                sort: { field: 'index', order: 'ASC' },\n                pagination: { page: 1, perPage: 100 },\n                filter: { stage: source.droppableId },\n            });\n\n            if (source.index > destination.index) {\n                // deal moved up, eg\n                // dest   src\n                //  <------\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between destination.index and source.index, increase the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index >= destinationDeal.index &&\n                                deal.index < sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index + 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            } else {\n                // deal moved down, e.g\n                // src   dest\n                //  ------>\n                // [4, 7, 23, 5]\n\n                await Promise.all([\n                    // for all deals between source.index and destination.index, decrease the index\n                    ...columnDeals\n                        .filter(\n                            deal =>\n                                deal.index <= destinationDeal.index &&\n                                deal.index > sourceDeal.index\n                        )\n                        .map(deal =>\n                            dataProvider.update('deals', {\n                                id: deal.id,\n                                data: { index: deal.index - 1 },\n                                previousData: deal,\n                            })\n                        ),\n                    // for the deal that was moved, update its index\n                    dataProvider.update('deals', {\n                        id: sourceDeal.id,\n                        data: { index: destinationDeal.index },\n                        previousData: sourceDeal,\n                    }),\n                ]);\n\n                refresh();\n            }\n        } else {\n            // moving deal across columns\n\n            const sourceColumn = Array.from(deals[source.droppableId]); // [4, 7, 23, 5] array of ids\n            const destinationColumn = Array.from(\n                deals[destination.droppableId]\n            ); // [4, 7, 23, 5] arrays of ids\n            const sourceDeal = data[sourceColumn[source.index]];\n            const destinationDeal = data[destinationColumn[destination.index]]; // may be undefined if dropping at the end of a column\n\n            // update local state\n            sourceColumn.splice(source.index, 1);\n            destinationColumn.splice(destination.index, 0, draggableId);\n            setDeals({\n                ...deals,\n                [source.droppableId]: sourceColumn,\n                [destination.droppableId]: destinationColumn,\n            });\n\n            // update backend\n            // Fetch all the deals in both stages (because the list may be filtered, but we need to update even non-filtered deals)\n            const [\n                { data: sourceDeals },\n                { data: destinationDeals },\n            ] = await Promise.all([\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: source.droppableId },\n                }),\n                dataProvider.getList('deals', {\n                    sort: { field: 'index', order: 'ASC' },\n                    pagination: { page: 1, perPage: 100 },\n                    filter: { stage: destination.droppableId },\n                }),\n            ]);\n\n            await Promise.all([\n                // decrease index on the deals after the source index in the source columns\n                ...sourceDeals\n                    .filter(deal => deal.index > sourceDeal.index)\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index - 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // increase index on the deals after the destination index in the destination columns\n                ...destinationDeals\n                    .filter(deal =>\n                        destinationDeal\n                            ? deal.index >= destinationDeal.index\n                            : false\n                    )\n                    .map(deal =>\n                        dataProvider.update('deals', {\n                            id: deal.id,\n                            data: { index: deal.index + 1 },\n                            previousData: deal,\n                        })\n                    ),\n                // change the dragged deal to take the destination index and column\n                dataProvider.update('deals', {\n                    id: sourceDeal.id,\n                    data: {\n                        index: destinationDeal\n                            ? destinationDeal.index\n                            : (destinationDeals.length > 0)\n                            ? destinationDeals.pop()!.index + 1 \n                            : 0,\n                        stage: destination.droppableId,\n                    },\n                    previousData: sourceDeal,\n                }),\n            ]);\n\n            refresh();\n        }\n    };\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Box display=\"flex\">\n                {stages.map(stage => (\n                    <DealColumn\n                        stage={stage}\n                        dealIds={deals[stage]}\n                        data={data}\n                        key={stage}\n                    />\n                ))}\n            </Box>\n        </DragDropContext>\n    );\n};\n","export const types = [\n    'Other',\n    'Copywriting',\n    'Print project',\n    'UI Design',\n    'Website design',\n];\n\nexport const typeChoices = types.map(type => ({ id: type, name: type }));\n","import * as React from 'react';\nimport {\n    Create,\n    SimpleForm,\n    TextInput,\n    SelectInput,\n    NumberInput,\n    ReferenceInput,\n    AutocompleteInput,\n    required,\n    useRedirect,\n    useDataProvider,\n    useGetIdentity,\n} from 'react-admin';\nimport { Dialog } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { stageChoices } from './stages';\nimport { typeChoices } from './types';\nimport { Deal } from '../types';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n});\n\nexport const DealCreate = ({ open }: { open: boolean }) => {\n    const classes = useStyles();\n    const redirect = useRedirect();\n    const dataProvider = useDataProvider();\n    const { identity } = useGetIdentity();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    const onSuccess = ({ data: deal }: { data: Deal }) => {\n        redirect('/deals');\n        // increase the index of all deals in the same stage as the new deal\n        dataProvider\n            .getList('deals', {\n                pagination: { page: 1, perPage: 50 },\n                sort: { field: 'id', order: 'ASC' },\n                filter: { stage: deal.stage },\n            })\n            .then(({ data: deals }) =>\n                Promise.all(\n                    deals\n                        .filter(oldDeal => oldDeal.id !== deal.id)\n                        .map(oldDeal =>\n                            dataProvider.update('deals', {\n                                id: oldDeal.id,\n                                data: { index: oldDeal.index + 1 },\n                                previousData: oldDeal,\n                            })\n                        )\n                )\n            );\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Create\n                resource=\"deals\"\n                basePath=\"/deals\"\n                className={classes.root}\n                onSuccess={onSuccess}\n            >\n                <SimpleForm initialValues={{ index: 0, sales_id: identity && identity?.id }}>\n                    <TextInput\n                        source=\"name\"\n                        label=\"Deal name\"\n                        fullWidth\n                        validate={[required()]}\n                    />\n                    <TextInput\n                        source=\"description\"\n                        multiline\n                        rows={3}\n                        fullWidth\n                    />\n                    <ReferenceInput\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        fullWidth\n                        validate={[required()]}\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <SelectInput\n                        source=\"stage\"\n                        choices={stageChoices}\n                        fullWidth\n                        validate={[required()]}\n                        defaultValue=\"opportunity\"\n                    />\n                    <SelectInput\n                        source=\"type\"\n                        choices={typeChoices}\n                        fullWidth\n                    />\n                    <NumberInput source=\"amount\" fullWidth defaultValue={0} />\n                    <ReferenceInput\n                        source=\"sales_id\"\n                        reference=\"sales\"\n                        label=\"Account manager\"\n                        helperText={false}\n                        fullWidth\n                    >\n                        <SelectInput\n                            optionText={(sales: any) =>\n                                `${sales.first_name} ${sales.last_name}`\n                            }\n                        />\n                    </ReferenceInput>\n                </SimpleForm>\n            </Create>\n        </Dialog>\n    );\n};\n","import * as React from 'react';\nimport { useListContext } from 'react-admin';\nimport { Link } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    ul: {\n        listStyle: 'none',\n        padding: 0,\n        margin: 0,\n        display: 'inline-block',\n    },\n    li: {\n        display: 'inline',\n        '&:after': {\n            content: '\", \"',\n        },\n        '&:last-child:after': {\n            content: '\"\"',\n        },\n    },\n});\n\nexport const ContactList = () => {\n    const { ids, data, loaded } = useListContext();\n    const classes = useStyles();\n    if (!loaded) return <div style={{ height: '2em' }} />;\n    return (\n        <ul className={classes.ul}>\n            {ids.map(id => (\n                <li key={id} className={classes.li}>\n                    <Link\n                        component={RouterLink}\n                        to={`/contacts/${id}`}\n                        variant=\"subtitle1\"\n                    >\n                        {data[id].first_name} {data[id].last_name}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n","import * as React from 'react';\nimport {\n    ShowBase,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    ReferenceArrayField,\n    useRecordContext,\n    useRedirect,\n    useRefresh,\n    useDataProvider,\n    Identifier,\n} from 'react-admin';\nimport {\n    Box,\n    Dialog,\n    DialogContent,\n    Typography,\n    Divider,\n    Button,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format } from 'date-fns';\n\nimport { CompanyAvatar } from '../companies/CompanyAvatar';\nimport { NotesIterator } from '../notes';\nimport { ContactList } from './ContactList';\nimport { stageNames } from './stages';\n\nconst useStyles = makeStyles({\n    dialog: {\n        position: 'absolute',\n        top: 50,\n    },\n});\n\nexport const DealShow = ({ open, id }: { open: boolean; id: Identifier }) => {\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const handleClose = () => {\n        redirect('/deals');\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            fullWidth\n            maxWidth=\"md\"\n            classes={{ paper: classes.dialog }}\n        >\n            <DialogContent>\n                <ShowBase resource=\"deals\" basePath=\"/deals\" id={id}>\n                    <DealShowContent />\n                </ShowBase>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nconst DealShowContent = () => {\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    \n    if (!record) return null;\n\n    const onDelete = async() =>{\n        const { data: columnDeals } = await dataProvider.getList('deals', {\n            sort: { field: 'index', order: 'ASC' },\n            pagination: { page: 1, perPage: 100 },\n            filter: { stage: record.droppableId },\n        });\n        await Promise.all([\n            ...columnDeals\n                .filter(\n                    deal => deal.index < record.index\n                )\n                .map(deal =>\n                    dataProvider.update('deals', {\n                        id: deal.id,\n                        data: { index: deal.index - 1 },\n                        previousData: deal,\n                    })\n                ),\n            // for the deal that was moved, update its index\n            dataProvider.delete('deals', {\n                id: record.id,\n                previousData: record,\n            }),\n        ]);\n        redirect('/deals');\n        refresh();\n    };\n\n    return (\n        <>\n            <Box display=\"flex\">\n                <Box\n                    width={100}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                >\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <CompanyAvatar />\n                    </ReferenceField>\n                    <ReferenceField\n                        source=\"company_id\"\n                        reference=\"companies\"\n                        link=\"show\"\n                    >\n                        <TextField\n                            source=\"name\"\n                            align=\"center\"\n                            component=\"div\"\n                        />\n                    </ReferenceField>\n                </Box>\n                <Box ml={2} flex=\"1\">\n                    <Box display=\"flex\" justifyContent=\"space-between\" >\n                        <Typography variant=\"h5\">{record.name}</Typography>\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<DeleteIcon />}            \n                            onClick={(e:any) =>{\n                                e.stopPropagation();\n                                onDelete();\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </Box>\n\n                    <Box display=\"flex\" mt={2}>\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Start\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {format(new Date(record.start_at), 'PP')}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Budget\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.amount.toLocaleString('en-US', {\n                                    notation: 'compact',\n                                    style: 'currency',\n                                    currency: 'USD',\n                                    currencyDisplay: 'narrowSymbol',\n                                    minimumSignificantDigits: 3,\n                                })}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Type\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {record.type}\n                            </Typography>\n                        </Box>\n\n                        <Box display=\"flex\" mr={5} flexDirection=\"column\">\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Stage\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                {/* @ts-ignore */}\n                                {stageNames[record.stage]}\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2}>\n                        <Box\n                            display=\"flex\"\n                            mr={5}\n                            flexDirection=\"column\"\n                            minHeight={48}\n                        >\n                            <Typography color=\"textSecondary\" variant=\"body2\">\n                                Contacts\n                            </Typography>\n                            <ReferenceArrayField\n                                source=\"contact_ids\"\n                                reference=\"contacts\"\n                            >\n                                <ContactList />\n                            </ReferenceArrayField>\n                        </Box>\n                    </Box>\n\n                    <Box mt={2} mb={2} style={{ whiteSpace: 'pre-line' }}>\n                        <Typography color=\"textSecondary\" variant=\"body2\">\n                            Description\n                        </Typography>\n                        <Typography>{record.description}</Typography>\n                    </Box>\n\n                    <Divider />\n\n                    <Box mt={2}>\n                        <ReferenceManyField\n                            target=\"deal_id\"\n                            reference=\"dealNotes\"\n                            sort={{ field: 'date', order: 'DESC' }}\n                        >\n                            <NotesIterator reference=\"deals\" />\n                        </ReferenceManyField>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { useListFilterContext, useGetIdentity } from 'react-admin';\nimport { Switch, FormControlLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport const OnlyMineInput = ({ alwaysOn }: { alwaysOn: boolean }) => {\n    const {\n        filterValues,\n        displayedFilters,\n        setFilters,\n    } = useListFilterContext();\n    const { identity } = useGetIdentity();\n    const classes = useStyles();\n    const handleChange = () => {\n        const newFilterValues = { ...filterValues };\n        if (typeof filterValues.sales_id !== 'undefined') {\n            delete newFilterValues.sales_id;\n        } else {\n            newFilterValues.sales_id = identity && identity?.id;\n        }\n        setFilters(newFilterValues, displayedFilters);\n    };\n    return (\n        <div className={classes.root}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={typeof filterValues.sales_id !== 'undefined'}\n                        onChange={handleChange}\n                        color=\"primary\"\n                        name=\"checkedC\"\n                    />\n                }\n                label=\"Only companies I manage\"\n            />\n        </div>\n    );\n};\n\nOnlyMineInput.defaultProps = { source: 'sales_id' };\n","import * as React from 'react';\nimport {\n    CreateButton,\n    ExportButton,\n    FilterButton,\n    List,\n    ListProps,\n    SearchInput,\n    SelectInput,\n    TopToolbar,\n    useGetIdentity,\n} from 'react-admin';\nimport { Route } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DealListContent } from './DealListContent';\nimport { DealCreate } from './DealCreate';\nimport { DealShow } from './DealShow';\nimport { OnlyMineInput } from './OnlyMineInput';\nimport { typeChoices } from './types';\n\nexport const DealList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <>\n            <List\n                {...props}\n                perPage={100}\n                sort={{ field: 'index', order: 'ASC' }}\n                filters={dealFilters}\n                filterDefaultValues={{ sales_id: identity && identity?.id }}\n                actions={<DealActions />}\n                pagination={false}\n                component=\"div\"\n            >\n                <DealListContent />\n            </List>\n            <Route path=\"/deals/create\">\n                {({ match }) => <DealCreate open={!!match} />}\n            </Route>\n            <Route path=\"/deals/:id/show\">\n                {({ match }) =>\n                    !!match ? (\n                        <DealShow open={!!match} id={match?.params?.id} />\n                    ) : null\n                }\n            </Route>\n        </>\n    ) : null;\n};\n\nconst dealFilters = [\n    <SearchInput source=\"q\" alwaysOn />,\n    <OnlyMineInput alwaysOn />,\n    <SelectInput source=\"type\" choices={typeChoices} />,\n];\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst DealActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <FilterButton />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/deals\"\n                variant=\"contained\"\n                label=\"New Deal\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { DealList } from './DealList';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\nexport default {\n    list: DealList,\n    icon: MonetizationOnIcon,\n};\n","export const categories = [\n    'Safety laser scanners', \n    '2D LiDAR sensors', \n    '3D LiDAR sensors', \n    'Cleaning Robot',\n].map(category => ({ id: category, name: category }));","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nimport { ProductFamily } from '../types';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\nimport { categories } from '../productFamilies/categories';\n\nconst useStyles = makeStyles(theme => ({\n    familyList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    },\n    categoryList: {\n        maxHeight: theme.spacing(20), \n        overflow: 'auto',\n    }\n}));\n\nexport const ProductListFilter = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const { data: familyData, ids: familyIds } = useGetList<ProductFamily>(\n        'productFamilies',\n        { page: 1, perPage: 1000 },\n        { field: 'name', order: 'ASC' }\n    );\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n\n            <FilterList label=\"Families\" icon={<CategoryIcon />}>\n                <div className={classes.familyList}>\n                    {familyIds &&\n                        familyData &&\n                        familyIds.map(id => (\n                            <FilterListItem\n                                key={id}\n                                label={<Chip label={familyData[id].name} size=\"small\"/>}\n                                value={{ family_id: id }}\n                            />\n                        ))}\n                </div>\n            </FilterList>\n\n            <FilterList label=\"Categories\" icon={<CategoryIcon />}>\n                <div className={classes.categoryList}>\n                    {categories.map(category => (\n                            <FilterListItem\n                                key={category.id}\n                                label={category.name}\n                                value={{ 'family.category': category.id }}\n                            />\n                    ))}\n                </div>\n            </FilterList>\n        </CollapsibleListFilter>\n    );\n};\n","import * as React from 'react';\nimport {\n    List,\n    ListProps,\n    TopToolbar,\n    ExportButton,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    ListActionsProps,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ProductGridList } from './ProductGridList';\nimport { ProductListFilter } from './ProductListFilter';\nimport { ImportButton } from 'react-admin-import-csv';\n\nexport const ProductList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <List\n            {...props}\n            actions={<ProductListActions />}\n            aside={<ProductListFilter />}\n            filterDefaultValues={{ }}\n            pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n            perPage={25}\n            sort={{ field: 'model', order: 'ASC' }}\n            component=\"div\"\n        >\n            <ProductGridList />\n        </List>\n    ) : null;\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\n\nconst ProductListActions = (props: ListActionsProps) => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <ExportButton />\n            <ImportButton {...props} />\n            <CreateButton\n                basePath=\"/products\"\n                variant=\"contained\"\n                label=\"New Product\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n    ReferenceInput,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    DialogTitle,\n } from '@material-ui/core';\n import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nexport const CreatePropertyType = () => {\n    const classes = useStyles();\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [unit, setUnit] = useState('');\n    const [synonyms, setSynonyms] = useState('');\n    const [create] = useCreate('propertyTypes');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        unit: unit,\n                        synonyms: synonyms,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: any;}) => {\n                    setName('');\n                    setUnit('');\n                    setSynonyms('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>Add new Product Property Type</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <div className={classes.root}>\n                        <TextField\n                            label=\"New type name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                            required\n                        />\n                        <TextField\n                            label=\"Unit\"\n                            value={unit}\n                            onChange={event => setUnit(event.target.value)}\n                        />\n                        <TextField\n                            label=\"Commma separated synonyms\"\n                            value={synonyms}\n                            onChange={event => setSynonyms(event.target.value)}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\" disabled={!name}>Add</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import { \n    AutocompleteInput, \n    ReferenceInput, \n    SimpleFormIterator,\n    SimpleFormIteratorProps, \n    TextInput, \n} from \"react-admin\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nimport { CreatePropertyType } from \"./CreatePropertyType\";\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: theme.spacing(1),\n        width: '32%',\n        minWidth: theme.spacing(10),\n        '&.first-child': {\n            marginLeft: 0,\n        },\n        [theme.breakpoints.down('xs')]: {\n            display: 'block',\n            marginLeft: 0,\n            width: '100%',\n            margin: 0,\n        }\n    },\n    \n}));\n\nexport const PropertyFormIterator = (props: SimpleFormIteratorProps) => {\n    const classes = useStyles();\n    return (\n        <SimpleFormIterator {...props} >\n            <ReferenceInput\n                source=\"type_id\"\n                reference=\"propertyTypes\"\n                label=\"Type\"\n                formClassName={classNames(classes.inline, 'first-child')}\n                fullWidth\n            >\n                <AutocompleteInput \n                    optionText=\"name\" \n                    create={<CreatePropertyType />}\n                />\n            </ReferenceInput>\n            <TextInput \n                source=\"property_value\" \n                label=\"Value\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n            <TextInput \n                source=\"condition\"  \n                label=\"Condition\"\n                formClassName={classes.inline}\n                fullWidth\n            />\n        </SimpleFormIterator>\n    );\n};","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport {\n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n    Select,\n    MenuItem,\n    Box,\n    DialogTitle,\n } from '@material-ui/core';\n import { ProductFamily } from '../types';\n import { categories } from './categories';\n\nexport const CreateProductFamily = () => {\n    const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n    const [name, setName] = useState(filter || '');\n    const [category, setCategory] = useState('');\n    const [website, setWebsite] = useState('');\n    const [image, setImage] = useState('');\n    const [create] = useCreate('productFamilies');\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        create(\n            {\n                payload: {\n                    data: {\n                        name: name,\n                        image: image,\n                        website: website,\n                        category: category,\n                    },\n                },\n            },\n            {\n                onSuccess: ({ data }: {data: ProductFamily;}) => {\n                    setName('');\n                    setImage('');\n                    setWebsite('');\n                    setCategory('');\n                    onCreate(data);\n                },\n            }\n        );\n    };\n\n    return (\n        <Dialog open onClose={onCancel}>\n            <DialogTitle>New Product Category</DialogTitle>\n            <form onSubmit={handleSubmit}>\n                <DialogContent>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <Select\n                            label=\"Category\"\n                            value={category}\n                            onChange={(event:any) => setCategory(event.target.value)}\n                        >\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\n                            {categories.map(category => (\n                                <MenuItem\n                                    key={category.id}\n                                    value={category.id}\n                                >\n                                    {category.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n\n                        <TextField\n                            label=\"New category name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            label=\"Website\"\n                            value={website}\n                            onChange={event => setWebsite(event.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            label=\"Image\"\n                            value={image}\n                            onChange={event => setImage(event.target.value)}\n                            autoFocus\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button type=\"submit\">Save</Button>\n                    <Button onClick={onCancel}>Cancel</Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};","import * as React from 'react';\nimport {\n    Create,\n    CreateProps,\n    ReferenceInput,\n    TabbedForm,\n    TextInput,\n    FormTab,\n    required,\n    AutocompleteInput,\n    useGetIdentity,\n    ArrayInput,\n    SimpleFormIterator,\n    ReferenceArrayInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { Box, CardContent, Divider, Avatar, useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport clsx from 'clsx';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\nimport { CreateProductFamily } from '../productFamilies/CreateProductFamily';\n\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n    propertyContainer: {\n        display: 'flex',\n        gap: theme.spacing(1),\n        minWidth: '500px',\n    },\n}));\n\nexport const ProductCreate = (props: CreateProps) => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const theme = useTheme();\n\n    const defaultValue = () => ({ });\n\n    return (\n        <Create {...props} actions={false} >\n            <TabbedForm redirect=\"show\">\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput \n                            optionText=\"name\" \n                            create={<CreateProductFamily />}\n                        />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Create>\n    );\n};\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <Avatar>\n                    <ShoppingCartIcon />\n                </Avatar>\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth=\"80%\">\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","import * as React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { Product } from '../types';\n\nconst useStyles = makeStyles({\n    image: {\n        objectFit: 'contain',\n    },\n});\n\nconst sizeInPixel = {\n    medium: 42,\n    small: 20,\n};\n\nexport const ProductImageField = ({\n    record,\n    source,\n    size = 'medium',\n}: {\n    record?: Product;\n    source?: string;\n    size?: 'small' | 'medium';\n}) => {\n    const classes = useStyles();\n    if (!record) return null;\n    if(!record.image) return (\n        <Avatar>\n            <ShoppingCartIcon />\n        </Avatar>\n    )\n    return (\n        <img\n            src={process.env.PUBLIC_URL + record.image}\n            alt={record.model}\n            title={record.model}\n            width={sizeInPixel[size]}\n            height={sizeInPixel[size]}\n            className={classes.image}\n        />\n    );\n};\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n} from 'react-admin';\nimport { Box, Typography, Divider, Link } from '@material-ui/core';\n\nimport { Product, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\n\nexport const ProductAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: Product;\n    link?: string;\n}) =>{\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/products\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: Product;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Product info</Typography>\n            <Divider />\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Company: \n                <ReferenceField\n                    record={record}\n                    source=\"company_id\"\n                    reference=\"companies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                Family: \n                <ReferenceField\n                    record={record}\n                    source=\"family_id\"\n                    reference=\"productFamilies\"\n                    link=\"show\"\n                >\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            </Box>\n\n            <Box mt={1}>\n                Code: <TextField source=\"code\" record={record} />\n            </Box>\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n\n            <Box mt={3}>\n                <Typography variant=\"subtitle2\">Description</Typography>\n                <Divider />\n\n                <Box mt={1}>\n                    <TextField source=\"description\" />\n                </Box>\n\n            </Box>\n        </>\n    ) : null;","import * as React from 'react';\nimport { useState, ChangeEvent } from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    EditButton,\n    TextField,\n    ReferenceManyField,\n    SelectField,\n    ReferenceField,\n    ImageField,\n    Datagrid,\n    useShowContext,\n    useRecordContext,\n    useListContext,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    Pagination,\n} from 'react-admin';\nimport {\n    Avatar as MuiAvatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListItemSecondaryAction,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n} from '@material-ui/core';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { NotesIterator } from '../notes';\n\n\nimport { ProductImageField } from './ProductImageField';\nimport { ProductAside } from './ProductAside';\nimport { Product, ProductPrperty } from '../types';\nimport { LogoField } from '../companies/LogoField';\nimport { CompanyGridList } from '../companies/CompanyGridList';\nimport { CompanyCard } from '../companies/CompanyCard';\n\nexport const ProductShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductShowContent />\n    </ShowBase>\n);\n\nconst ProductShowContent = () => {\n    const { record, loaded } = useShowContext<Product>();\n    const [value, setValue] = useState(0);\n    const handleChange = (event: ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" mb={1}>\n                            <ProductImageField record={record as any} />\n                            <Box ml={2} flex=\"1\">\n                                <Box display=\"flex\" gridGap={4}>\n                                    <Typography variant=\"h5\">{record.model}</Typography>\n                                </Box>\n                            </Box>\n                            <Box>\n                                <ReferenceField\n                                    source=\"company_id\"\n                                    reference=\"companies\"\n                                    link=\"show\"\n                                >\n                                    <LogoField />\n                                </ReferenceField>\n                            </Box>\n                        </Box>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={handleChange}\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                        >\n                            <Tab\n                                label={\n                                    record.nb_notes > 1\n                                        ? `${record.nb_notes} Notes`\n                                        : `${record.nb_notes} Note`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_properties > 1\n                                        ? `${record.nb_properties} Properties`\n                                        : `${record.nb_properties} Property`\n                                }\n                            />\n                            <Tab\n                                label={\n                                    record.nb_used_by > 1\n                                        ? `Used by ${record.nb_used_by} Companies`\n                                        : `Used by ${record.nb_used_by} Company`\n                                }\n                            />\n                        </Tabs>\n                        <Divider />\n                        <TabPanel value={value} index={0}>\n                            <ReferenceManyField\n                                reference=\"productNotes\"\n                                target=\"product_id\"\n                            >\n                                 <NotesIterator reference=\"products\" />\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <ReferenceManyField reference=\"productProperties\" target=\"product_id\" addLabel={false}>\n                                <Datagrid>\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"name\" />\n                                    </ReferenceField>\n                                    <TextField source=\"property_value\" />\n                                    <ReferenceField\n                                            source=\"type_id\"\n                                            reference=\"propertyTypes\"\n                                            link={false}\n                                        >\n                                        <TextField source=\"unit\" />\n                                    </ReferenceField>\n                                    <TextField source=\"condition\" />\n    \n                                </Datagrid>\n                            </ReferenceManyField>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Box mt={1}>\n                            <ReferenceArrayField\n                                reference=\"companies\"\n                                source=\"used_by_companies\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <CompanyGridList />\n                            </ReferenceArrayField>\n                            </Box>\n                        </TabPanel>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductAside record={record} />\n        </Box>\n    );\n};\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`wrapped-tabpanel-${index}`}\n            aria-labelledby={`wrapped-tab-${index}`}\n            {...other}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst ProductPrpertiesIterator = () => {\n    const { data, ids, loaded } = useListContext<ProductPrperty>();\n    const record = useRecordContext();\n\n    const now = Date.now();\n    if (!loaded) return null;\n    return (\n        <Box>\n            <List>\n                {ids.map(id => {\n                    const productProperty = data[id];\n                    return (\n                        <ListItem\n                            button\n                            key={id}\n                            component={RouterLink}\n                            to={`/productProperties/${id}/show`}\n                        >\n                            {/* <ListItemAvatar>\n                                <Avatar record={productProperty} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${productProperty.first_name} ${productProperty.last_name}`}\n                                secondary={\n                                    <>\n                                        {productProperty.title}{' '}\n                                        {productProperty.nb_notes &&\n                                        `- ${productProperty.nb_notes} notes `}\n                                    </>\n                                }\n                            />\n                            <ListItemSecondaryAction>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    last activity{' '}\n                                    {formatDistance(\n                                        new Date(productProperty.last_seen),\n                                        now\n                                    )}{' '}\n                                    ago <Status status={productProperty.status} />\n                                </Typography>\n                            </ListItemSecondaryAction> */}\n                        </ListItem>\n                    );\n                })}\n            </List>\n            <Box textAlign=\"center\" mt={1}>\n                {/* <CreateRelatedProductPrpertyButton record={record} /> */}\n            </Box>\n        </Box>\n    );\n};\n\n// const CreateRelatedProductPrpertyButton = ({ record }: any) => (\n//     <Button\n//         component={RouterLink}\n//         to={{\n//             pathname: '/productProperties/create',\n//             state: { record: { product_id: record.id } },\n//         }}\n//         color=\"primary\"\n//         variant=\"contained\"\n//         size=\"small\"\n//         startIcon={<PersonAddIcon />}\n//     >\n//         Add property\n//     </Button>\n// );\n","import * as React from 'react';\nimport {\n    Edit,\n    EditProps,\n    ReferenceInput,\n    TabbedForm,\n    FormTab,\n    TextInput,\n    SelectInput,\n    useRecordContext,\n    AutocompleteInput,\n    required,\n    ArrayInput,\n    SimpleFormIterator,\n} from 'react-admin';\nimport { Box, CardContent, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductAside } from './ProductAside';\nimport { ProductImageField } from './ProductImageField';\nimport { CreatePropertyType } from './CreatePropertyType';\nimport { PropertyFormIterator } from './PropertyFormIterator';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\nconst renderDistributor = (choice: any) => {\n\n}\n\nexport const ProductEdit = (props: EditProps) => {\n    const classes = useStyles();\n    return (\n        <Edit \n            {...props} \n            aside={<ProductAside link=\"show\" />} \n            actions={false}\n        >\n            <TabbedForm\n                redirect=\"show\"\n            >\n                <FormTab label=\"General\">\n                    <ReferenceInput \n                        label=\"Comapny\" \n                        source=\"company_id\" \n                        reference=\"companies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <ReferenceInput \n                        label=\"Product Family\" \n                        source=\"family_id\" \n                        reference=\"productFamilies\"\n                        fullWidth\n                    >\n                        <AutocompleteInput optionText=\"name\" />\n                    </ReferenceInput>\n                    <TextInput source=\"model\" validate={required()} fullWidth />\n                    <TextInput source=\"code\" fullWidth />\n                    <TextInput source=\"website\" fullWidth />\n                    <TextInput source=\"image\" fullWidth />\n                    <TextInput \n                        source=\"description\"\n                        multiline\n                        rows={3} \n                        fullWidth \n                    />\n                </FormTab>\n                <FormTab label=\"Properties\">\n                    <ArrayInput\n                        source=\"properties\"\n                    >\n                        <PropertyFormIterator />\n                    </ArrayInput>\n                </FormTab>\n            </TabbedForm>\n        </Edit>\n    );\n};\n\nconst CustomLayout = (props: any) => {\n    const record = useRecordContext(props);\n    return (\n        <CardContent>\n            <Box display=\"flex\">\n                <ProductImageField record={record as any} />\n                <Box ml={2} flex=\"1\" maxWidth={796}>\n                    {props.children}\n                </Box>\n            </Box>\n        </CardContent>\n    );\n};\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductList } from './ProductList';\nimport { ProductCreate } from './ProductCreate';\nimport { ProductShow } from './ProductShow';\nimport { ProductEdit } from './ProductEdit';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    show: ProductShow,\n    icon: FiberManualRecordIcon,\n};\n","import * as React from 'react';\nimport { Avatar as MuiAvatar } from '@material-ui/core';\n\nimport { ProductFamily } from '../types';\n\nexport const Avatar = ({ record }: { record: ProductFamily }) => (\n    <MuiAvatar src={record.image}>\n        {record.name}\n    </MuiAvatar>\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport { Box, Chip } from '@material-ui/core';\nimport { CollapsibleListFilter } from '../components/CollapsibleListFilter';\n\nexport const ProductFamilyListFilter = () => {\n\n    return (\n        <CollapsibleListFilter>\n            <FilterLiveSearch />\n        </CollapsibleListFilter>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport * as React from 'react';\nimport {\n    List as RaList,\n    ListProps,\n    SimpleListLoading,\n    ReferenceField,\n    TextField,\n    useListContext,\n    ExportButton,\n    SortButton,\n    TopToolbar,\n    CreateButton,\n    Pagination,\n    useGetIdentity,\n    SelectField,\n} from 'react-admin';\nimport {\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from './Avatar';\nimport { Status } from '../misc/Status';\nimport { TagsList } from '../tags/TagsList';\nimport { ProductFamilyListFilter } from './ProductFamilyListFilter';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst ProductFamilyListContent = () => {\n    const { data, ids, loaded, onToggleItem, selectedIds } = useListContext<\n        ProductFamily\n    >();\n    const now = Date.now();\n    if (loaded === false) {\n        return <SimpleListLoading hasLeftAvatarOrIcon hasSecondaryText />;\n    }\n\n    return (\n        <List>\n            {ids.map(id => {\n                const record = data[id];\n                return (\n                    <ListItem\n                        button\n                        key={id}\n                        component={Link}\n                        to={`/productFamilies/${id}/show`}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={selectedIds.includes(id)}\n                                tabIndex={-1}\n                                disableRipple\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onToggleItem(id);\n                                }}\n                            />\n                        </ListItemIcon>\n                        <ListItemAvatar>\n                            <Avatar record={record} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${record.name}`}\n                            secondary={\n                                <>\n                                    {record.name} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </>\n                            }\n                        />\n                        <ListItemSecondaryAction>\n\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nconst useActionStyles = makeStyles(theme => ({\n    createButton: {\n        marginLeft: theme.spacing(2),\n    },\n}));\nconst ProductFamilyListActions = () => {\n    const classes = useActionStyles();\n    return (\n        <TopToolbar>\n            <SortButton fields={['last_name', 'first_name', 'last_seen']} />\n            <ExportButton />\n            <CreateButton\n                basePath=\"/productFamilies\"\n                variant=\"contained\"\n                label=\"Add New\"\n                className={classes.createButton}\n            />\n        </TopToolbar>\n    );\n};\n\nexport const ProductFamilyList = (props: ListProps) => {\n    const { identity } = useGetIdentity();\n    return identity ? (\n        <RaList\n            {...props}\n            actions={<ProductFamilyListActions />}\n            aside={<ProductFamilyListFilter />}\n            perPage={25}\n            pagination={<Pagination rowsPerPageOptions={[10, 25, 50, 100]} />}\n            filterDefaultValues={{  }}\n            // sort={{  }}\n        >\n            <ProductFamilyListContent />\n        </RaList>\n    ) : null;\n};\n","import Reacct, { useState, FormEvent } from 'react';\nimport {\n    Create,\n    CreateProps,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    AutocompleteInput,\n    BooleanInput,\n    SimpleForm,\n    Toolbar,\n    required,\n    useGetIdentity,\n    useCreateContext,\n    useCreateSuggestionContext,\n    useCreate,\n} from 'react-admin';\nimport { \n    Card, \n    CardContent, \n    Divider, \n    Box, \n    Dialog, \n    DialogContent,\n    DialogActions,\n    TextField,\n    Button,\n } from '@material-ui/core';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: 'inline-block',\n        marginLeft: '1em',\n        '&.first-child': {\n            marginLeft: 0,\n        },\n    },\n});\n\n\nexport const ProductFamilyCreate = (props: CreateProps) => {\n    const classes = useStyles();\n\n    const contactDefaultValue = () => ({ });\n    const transform = (data: ProductFamily) => ({\n        ...data,\n    });\n    \n    return (\n        <Create {...props} actions={false}>\n            <SimpleForm \n                component={CustomLayout} \n                redirect=\"show\"\n                initialValues={contactDefaultValue}\n                transform={transform}\n            >\n                <SelectInput\n                    source=\"category\"\n                    choices={categories}\n                    formClassName={clsx(classes.inline, 'first-child')}\n                />\n                <TextInput source=\"name\" fullWidth />\n                <TextInput source=\"website\" fullWidth />\n                <TextInput source=\"image\" fullWidth />\n                <TextInput \n                    source=\"description\"\n                    multiline\n                    rows={3} \n                    fullWidth \n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\n\nconst CustomLayout = ({ children }: \n    {children: any;}) => (\n    <CardContent>\n        <Box display=\"flex\">\n            <Box paddingTop={1}>\n                <CategoryIcon />\n            </Box>\n            <Box ml={2} flex=\"1\" maxWidth={796}>\n                {children}\n            </Box>\n        </Box>\n    </CardContent>\n);\n\nconst CustomDivider = () => (\n    <Box mb={2}>\n        <Divider />\n    </Box>\n);\n\n","import * as React from 'react';\nimport {\n    TextField,\n    ReferenceField,\n    SelectField,\n} from 'react-admin';\nimport { \n    Box, \n    Typography, \n    Divider,\n    Link,\n } from '@material-ui/core';\n\nimport { ProductFamily, Sale } from '../types';\nimport { CollapsibleAside } from '../components/CollapsibleAside';\nimport { categories } from './categories';\n\nexport const ProductFamilyAside = ({\n    record,\n    link = 'edit',\n}: {\n    record?: ProductFamily;\n    link?: string;\n}) => {\n    if (!record) return null;\n\n    return (\n        <CollapsibleAside record={record} link={link} basePath=\"/productFamilies\">\n            <AsideContent />\n        </CollapsibleAside>\n    );\n};\n\nconst AsideContent = ({ \n    record \n}: { \n    record?: ProductFamily;\n}) => \n    record ? (\n        <>\n            <Typography variant=\"subtitle2\">Family info</Typography>\n            <Divider />\n            <Box mt={1} display=\"flex\" gridGap={2}>\n                <Typography>Category:</Typography>\n                <SelectField\n                    source=\"category\"\n                    choices={categories}\n                />\n            </Box>\n\n            {record.website && (\n                <Box mt={1}>\n                    Website: <Link href={record.website} target=\"_blank\" rel=\"noreferrer\">Link</Link>\n                </Box>\n            )}\n        </>\n    ) : null;","import * as React from 'react';\nimport {\n    EditBase,\n    EditProps,\n    TextInput,\n    ReferenceInput,\n    AutocompleteInput,\n    BooleanInput,\n    FormWithRedirect,\n    Toolbar,\n    useEditContext,\n    SelectInput,\n} from 'react-admin';\nimport { Card, CardContent, Divider, Box } from '@material-ui/core';\nimport omit from 'lodash/omit';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { ProductFamily } from '../types';\nimport { categories } from './categories';\n\nconst Spacer = () => <Box width={20} component=\"span\" />;\n\nconst ProductFamilyEditContent = () => {\n    const { record, loaded, save } = useEditContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <FormWithRedirect\n                    record={record}\n                    redirect=\"show\"\n                    save={save}\n                    render={formProps => (\n                        <Card>\n                            <CardContent>\n                                <Box>\n                                    <Box display=\"flex\">\n                                        <Box mr={2}>\n                                            <Avatar record={record} />\n                                        </Box>\n                                        <Box flex={1}>\n                                            <SelectInput\n                                                source=\"category\"\n                                                choices={categories}\n                                            />\n                                            <TextInput source=\"name\" fullWidth />\n                                            <TextInput source=\"website\" fullWidth />\n                                            <TextInput source=\"image\" fullWidth />\n                                            <TextInput \n                                                source=\"description\"\n                                                multiline\n                                                rows={3} \n                                                fullWidth \n                                            />\n                                        </Box>\n                                        \n                                    </Box>\n                                </Box>\n                            </CardContent>\n                            <Toolbar\n                                {...omit(formProps, [\n                                    // FIXME Not super user friendly way to remove warnings\n                                    'dirtyFields',\n                                    'dirtyFieldsSinceLastSubmit',\n                                    'dirtySinceLastSubmit',\n                                    'hasSubmitErrors',\n                                    'hasValidationErrors',\n                                    'initialValues',\n                                    'modifiedSinceLastSubmit',\n                                    'submitError',\n                                    'submitErrors',\n                                    'submitFailed',\n                                    'submitSucceeded',\n                                    'submitting',\n                                    'valid',\n                                ])}\n                            />\n                        </Card>\n                    )}\n                />\n            </Box>\n            <ProductFamilyAside record={record} link=\"show\" />\n        </Box>\n    );\n};\n\nexport const ProductFamilyEdit = (props: EditProps) => (\n    <EditBase {...props}>\n        <ProductFamilyEditContent />\n    </EditBase>\n);\n","import * as React from 'react';\nimport {\n    ShowBase,\n    ShowProps,\n    TextField,\n    ReferenceField,\n    ReferenceManyField,\n    useShowContext,\n    SelectField,\n    Pagination,\n} from 'react-admin';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\n\nimport { Avatar } from './Avatar';\nimport { ProductFamilyAside } from './ProductFamilyAside';\nimport { LogoField } from '../companies/LogoField';\nimport { NotesIterator } from '../notes';\nimport { ProductFamily } from '../types';\nimport { ProductGridList } from '../products/ProductGridList';\nimport { categories } from './categories';\n\nexport const ProductFamilyShow = (props: ShowProps) => (\n    <ShowBase {...props}>\n        <ProductFamilyShowContent />\n    </ShowBase>\n);\n\nconst ProductFamilyShowContent = () => {\n    const { record, loaded } = useShowContext<ProductFamily>();\n    if (!loaded || !record) return null;\n    return (\n        <Box mt={2} display=\"flex\">\n            <Box flex=\"1\">\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\">\n                            <Avatar record={record} />\n                            <Box ml={2} flex=\"1\">\n                                <Typography variant=\"h5\">\n                                    {record.name}\n                                </Typography>\n                                <Typography variant=\"body2\">\n                                    {record.title} in{' '}\n                                    <SelectField\n                                        record={record}\n                                        source=\"category\"\n                                        choices={categories}\n                                    />\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box mt={2} p={1}>\n                            <ReferenceManyField\n                                reference=\"products\"\n                                target=\"family_id\"\n                                label=\"Products\"\n                                pagination={<Pagination rowsPerPageOptions={[15, 25, 50, 100]} />}\n                                perPage={25}\n                            >\n                                <ProductGridList />\n                            </ReferenceManyField>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ProductFamilyAside record={record} />\n        </Box>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { ProductFamilyList } from './ProductFamilyList';\nimport { ProductFamilyCreate } from './ProductFamilyCreate';\nimport { ProductFamilyEdit } from './ProductFamilyEdit';\nimport { ProductFamilyShow } from './ProductFamilyShow';\nimport CategoryIcon from '@material-ui/icons/Category';\n\nexport default {\n    list: ProductFamilyList,\n    create: ProductFamilyCreate,\n    edit: ProductFamilyEdit,\n    show: ProductFamilyShow,\n    icon: CategoryIcon,\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport {\n    useTranslate,\n    DashboardMenuItem,\n    MenuItemLink,\n    MenuProps,\n    ReduxState,\n} from 'react-admin';\n\n\nimport SubMenu from './SubMenu';\nimport { AppState } from '../types';\n\nimport companies from '../companies';\nimport contacts from '../contacts';\nimport tasks from '../tasks';\nimport deals from '../deals';\nimport products from '../products';\nimport productFamilies from '../productFamilies';\n\n\n\ntype MenuName = 'menuCrm' | 'menuProduct' | 'menuCustomers';\n\nconst Menu = ({ dense = false }: MenuProps) => {\n    const [state, setState] = useState({\n        menuCrm: true,\n        menuProduct: true,\n        menuCustomers: true,\n    });\n    const translate = useTranslate();\n    const open = useSelector((state: ReduxState) => state.admin.ui.sidebarOpen);\n    useSelector((state: AppState) => state.theme); // force rerender on theme change\n    const classes = useStyles();\n\n    const handleToggle = (menu: MenuName) => {\n        setState(state => ({ ...state, [menu]: !state[menu] }));\n    };\n\n    return (\n        <div\n            className={classnames(classes.root, {\n                [classes.open]: open,\n                [classes.closed]: !open,\n            })}\n        >\n            {' '}\n            <DashboardMenuItem />\n            <SubMenu\n                handleToggle={() => handleToggle('menuCrm')}\n                isOpen={state.menuCrm}\n                name=\"CRM\"\n                icon={<companies.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/companies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Companies\"\n                    leftIcon={<companies.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/contacts',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Contacts\"\n                    leftIcon={<contacts.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/deals',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Deals\"\n                    leftIcon={<deals.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/tasks',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Taks\"\n                    leftIcon={<tasks.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n            <SubMenu\n                handleToggle={() => handleToggle('menuProduct')}\n                isOpen={state.menuProduct}\n                name=\"Products\"\n                icon={<products.icon />}\n                dense={dense}\n            >\n                <MenuItemLink\n                    to={{\n                        pathname: '/products',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Products\"\n                    leftIcon={<products.icon />}\n                    dense={dense}\n                />\n                <MenuItemLink\n                    to={{\n                        pathname: '/productFamilies',\n                        state: { _scrollToTop: true },\n                    }}\n                    primaryText=\"Families\"\n                    leftIcon={<productFamilies.icon />}\n                    dense={dense}\n                />\n            </SubMenu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    open: {\n        width: 200,\n    },\n    closed: {\n        width: 55,\n    },\n}));\n\nexport default Menu;\n","export const darkTheme = {\n    palette: {\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#FBBA72',\n        },\n        type: 'dark' as 'dark', // Switching the dark mode on is a single property value change.\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#ffffffb3',\n                backgroundColor: '#616161e6',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        primary: {\n            main: '#4f3cc9',\n        },\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n        background: {\n            default: '#fcfcfe',\n        },\n        type: 'light' as 'light',\n    },\n    shape: {\n        borderRadius: 10,\n    },\n    sidebar: {\n        width: 200,\n    },\n    overrides: {\n        RaMenuItemLink: {\n            root: {\n                borderLeft: '3px solid #fff',\n            },\n            active: {\n                borderLeft: '3px solid #4f3cc9',\n            },\n        },\n        MuiPaper: {\n            elevation1: {\n                boxShadow: 'none',\n            },\n            root: {\n                border: '1px solid #e0e0e3',\n                backgroundClip: 'padding-box',\n            },\n        },\n        MuiButton: {\n            contained: {\n                backgroundColor: '#fff',\n                color: '#4f3cc9',\n                boxShadow: 'none',\n            },\n        },\n        MuiButtonBase: {\n            root: {\n                '&:hover:active::after': {\n                    // recreate a static ripple color\n                    // use the currentColor to make it work both for outlined and contained buttons\n                    // but to dim the background without dimming the text,\n                    // put another element on top with a limited opacity\n                    content: '\"\"',\n                    display: 'block',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'currentColor',\n                    opacity: 0.3,\n                    borderRadius: 'inherit',\n                },\n            },\n        },\n        MuiAppBar: {\n            colorSecondary: {\n                color: '#808080',\n                backgroundColor: '#fff',\n            },\n        },\n        MuiLinearProgress: {\n            colorPrimary: {\n                backgroundColor: '#f5f5f5',\n            },\n            barColorPrimary: {\n                backgroundColor: '#d7d7d7',\n            },\n        },\n        MuiFilledInput: {\n            root: {\n                backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                '&$disabled': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                },\n            },\n        },\n        MuiSnackbarContent: {\n            root: {\n                border: 'none',\n            },\n        },\n    },\n    props: {\n        MuiButtonBase: {\n            // disable ripple for perf reasons\n            disableRipple: true,\n        },\n    },\n};\n","import * as React from 'react';\n\n\nimport { \n    Notification, \n    NotificationProps,\n} from 'react-admin';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nconst NotificationContainer = (props: any) => {\n    const classes = useStyles();\n    return (\n        <Notification {...props} autoHideDuration={5000} />\n    )\n}\n\nexport default NotificationContainer;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Layout, LayoutProps } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme } from './themes';\nimport { AppState } from '../types';\nimport NotificationContainer from '../notifications/NotificationContainer';\n\nexport default (props: LayoutProps) => {\n    const theme = useSelector((state: AppState) =>\n        state.theme === 'dark' ? darkTheme : lightTheme\n    );\n\n    return (\n        <Layout \n            {...props} \n            appBar={AppBar} \n            menu={Menu} \n            theme={theme} \n            notification={NotificationContainer}\n        />\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, withTypes } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\n\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Link,\n    Typography,\n} from '@material-ui/core';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Notification, useTranslate, useLogin, useNotify } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: 'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        // marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst renderInput = ({\n    meta: { touched, error } = { touched: false, error: undefined },\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    username?: string;\n    password?: string;\n}\n\nconst { Form } = withTypes<FormValues>();\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false);\n    const translate = useTranslate();\n    const classes = useStyles();\n    const notify = useNotify();\n    const login = useLogin();\n    const location = useLocation<{ nextPathname: string } | null>();\n\n    const handleSubmit = async (auth: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await login(auth, location.state ? location.state.nextPathname : '/');\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    const validate = ({\n        username,\n        password,\n    }: FormValues) => {\n        const errors = { \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined,\n        };\n        return errors;\n    };\n\n    return (\n        <Form\n            onSubmit={handleSubmit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className={classes.main}>\n                        <Card className={classes.card}>\n                            <div className={classes.avatar}>\n                                <Avatar className={classes.icon}>\n                                    <LockIcon />\n                                </Avatar>\n                            </div>\n                            <div className={classes.hint}>\n                                Wecome to Assistor.\n                            </div>\n                            <div className={classes.form}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        name=\"username\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                    />\n                                </div>\n                                <div className={classes.input}>\n                                    <Field\n                                        name=\"password\"\n                                        // @ts-ignore\n                                        component={renderInput}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </div>\n                            <CardActions className={classes.actions}>\n                                <Button\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    fullWidth\n                                >\n                                    {loading && (\n                                        <CircularProgress\n                                            size={25}\n                                            thickness={2}\n                                        />\n                                    )}\n                                    {translate('ra.auth.sign_in')}\n                                </Button>\n                                <Typography variant=\"body2\">Or</Typography>\n                                <Link\n                                    color=\"textSecondary\"\n                                    component={RouterLink}\n                                    to=\"/register\"\n                                    variant=\"body1\"\n                                >\n                                    Register\n                                </Link>\n                            </CardActions>\n                        </Card>\n                        <Notification />\n                    </div>\n                </form>\n            )}\n        />\n    );\n};\n\nLogin.propTypes = {\n    authProvider: PropTypes.func,\n    previousRoute: PropTypes.string,\n};\n\n// We need to put the ThemeProvider decoration in another component\n// Because otherwise the useStyles() hook used in Login won't get\n// the right theme\nconst LoginWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Login {...props} />\n    </ThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Card, Box, Link } from '@material-ui/core';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport { useGetList, SimpleList, useGetIdentity } from 'react-admin';\nimport { formatDistance } from 'date-fns';\n\nimport { Avatar } from '../contacts/Avatar';\nimport { Contact } from '../types';\n\nexport const HotContacts = () => {\n    const { identity } = useGetIdentity();\n    const {\n        data: contactData,\n        ids: contactIds,\n        total: contactTotal,\n        loaded: contactsLoaded,\n    } = useGetList<Contact>(\n        'contacts',\n        { page: 1, perPage: 10 },\n        { field: 'last_seen', order: 'DESC' },\n        { status: 'hot', sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <ContactsIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Link\n                    underline=\"none\"\n                    variant=\"h5\"\n                    color=\"textSecondary\"\n                    component={RouterLink}\n                    to=\"/contacts\"\n                >\n                    Hot contacts\n                </Link>\n            </Box>\n            <Card>\n                <SimpleList<Contact>\n                    basePath=\"/contacts\"\n                    linkType=\"show\"\n                    ids={contactIds}\n                    data={contactData}\n                    total={contactTotal}\n                    loaded={contactsLoaded}\n                    primaryText={contact =>\n                        `${contact.first_name} ${contact.last_name}`\n                    }\n                    secondaryText={contact =>\n                        formatDistance(\n                            new Date(contact.last_seen),\n                            new Date(),\n                            {\n                                addSuffix: true,\n                            }\n                        )\n                    }\n                    leftAvatar={contact => <Avatar record={contact} />}\n                />\n            </Card>\n        </>\n    );\n};\n","import * as React from 'react';\nimport { Card, CardContent, Typography, Box } from '@material-ui/core';\nimport NoteIcon from '@material-ui/icons/Note';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useGetList,\n    useGetIdentity,\n    ReferenceField,\n    TextField,\n    FunctionField,\n} from 'react-admin';\nimport { formatDistance } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n\nimport { Contact as ContactType } from '../types';\n\nconst useStyles = makeStyles(theme => ({\n    note: {\n        marginBottom: theme.spacing(2),\n    },\n    noteText: {\n        backgroundColor: theme.palette.grey[200],\n        padding: theme.spacing(1),\n        borderRadius: 10,\n    },\n    noteTextText: {\n        display: '-webkit-box',\n        '-webkit-line-clamp': 3,\n        '-webkit-box-orient': 'vertical',\n        overflow: 'hidden',\n    },\n}));\n\nexport const LatestNotes = () => {\n    const classes = useStyles();\n    const { identity } = useGetIdentity();\n    const {\n        data: contactNotesData,\n        ids: contactNotesIds,\n        loaded: contactNotesLoaded,\n    } = useGetList(\n        'contactNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: dealNotesData,\n        ids: dealNotesIds,\n        loaded: dealNotesLoaded,\n    } = useGetList(\n        'dealNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    const {\n        data: companyNotesData,\n        ids: companyNotesIds,\n        loaded: companyNotesLoaded,\n    } = useGetList(\n        'companyNotes',\n        { page: 1, perPage: 5 },\n        { field: 'date', order: 'DESC' },\n        { sales_id: identity?.id },\n        { enabled: Number.isInteger(identity?.id) }\n    );\n    if (!contactNotesLoaded || !dealNotesLoaded || !companyNotesLoaded) {\n        return null;\n    }\n    // TypeScript guards\n    if (\n        !contactNotesIds ||\n        !contactNotesData ||\n        !dealNotesIds ||\n        !dealNotesData ||\n        !companyNotesIds ||\n        !companyNotesData\n    ) {\n        return null;\n    }\n\n    const allNotes = ([] as any[])\n        .concat(\n            contactNotesIds.map(id => ({\n                ...contactNotesData[id],\n                type: 'contactNote',\n            })),\n            dealNotesIds.map(id => ({\n                ...dealNotesData[id], \n                type: 'dealNote' \n            })),\n            companyNotesIds.map(id => ({\n                ...companyNotesData[id], \n                type: 'companyNote' \n            })),\n        )\n        .sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf())\n        .slice(0, 5);\n\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" marginBottom=\"1em\">\n                <Box ml={2} mr={2} display=\"flex\">\n                    <NoteIcon color=\"disabled\" fontSize=\"large\" />\n                </Box>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                    My Latest Notes\n                </Typography>\n            </Box>\n            <Card>\n                <CardContent>\n                    {allNotes.map(note => (\n                        <div\n                            id={`${note.type}_${note.id}`}\n                            key={`${note.type}_${note.id}`}\n                            className={classes.note}\n                        >\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                on{' '}\n                                <NoteSource note={note} />\n                                , added{' '}\n                                {formatDistance(\n                                    new Date(note.date),\n                                    new Date(),\n                                    {\n                                        addSuffix: true,\n                                    }\n                                )}\n                            </Typography>\n                            <div className={classes.noteText}>\n                                <ReactMarkdown children={note.text} remarkPlugins={[remarkGfm]} />\n                            </div>\n                        </div>\n                    ))}\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nconst NoteSource = ({ note }: any) => {\n    if (note.type === 'dealNote'){\n        return <Deal note={note} />;\n    }\n    else if (note.type === 'contactNote') {\n        return <Contact note={note} />;\n    }\n    else if (note.type === 'companyNote') {\n        return <Company note={note} />;\n    }\n    return null;\n};\n\nconst Deal = ({ note }: any) => (\n    <>\n        Deal{' '}\n        <ReferenceField\n            record={note}\n            source=\"deal_id\"\n            reference=\"deals\"\n            basePath=\"/deals\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n\nconst Contact = ({ note }: any) => (\n    <>\n        Contact{' '}\n        <ReferenceField\n            record={note}\n            source=\"contact_id\"\n            reference=\"contacts\"\n            basePath=\"/contacts\"\n            link=\"show\"\n        >\n            <FunctionField<ContactType>\n                variant=\"body1\"\n                render={contact =>\n                    contact ? `${contact.first_name} ${contact.last_name}` : ''\n                }\n            />\n        </ReferenceField>\n    </>\n);\n\nconst Company = ({ note }: any) => (\n    <>\n        Company{' '}\n        <ReferenceField\n            record={note}\n            source=\"company_id\"\n            reference=\"companies\"\n            basePath=\"/companies\"\n            link=\"show\"\n        >\n            <TextField source=\"name\" variant=\"body1\" />\n        </ReferenceField>\n    </>\n);\n","import React, { useState, memo } from \"react\";\nimport { \n    ComposableMap, \n    Geographies, \n    Geography, \n    ZoomableGroup,\n    Marker,\n    Annotation,\n} from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { geoCentroid } from \"d3-geo\";\nimport {\n    FilterList,\n    FilterLiveSearch,\n    FilterListItem,\n    useGetIdentity,\n    useGetList,\n} from 'react-admin';\nimport ReactTooltip from \"react-tooltip\";\n\nimport { Country } from '../types';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst Map = memo(({setTooltipContent}: any) => {\n    const { data, ids, loaded } = useGetList<Country>(\n        'countries',\n        { perPage: 1000, page: 1 }\n    );\n    if (!loaded) return null;\n\n    const colorScale = scaleQuantile<string>()\n        .domain([0, max(ids.map(id => data[id].nb_companies))])\n        .range([\n            \"#e1f5fe\",\n            \"#b3e5fc\",\n            \"#81d4fa\",\n            \"#4fc3f7\",\n            \"#29b6f6\",\n            \"#03a9f4\",\n            \"#039be5\",\n            \"#0288d1\",\n            \"#0277bd\"\n        ]);\n\n    return (\n        <ComposableMap\n            data-tip=\"\"\n            projection=\"geoAzimuthalEqualArea\"\n            projectionConfig={{\n                rotate: [-25.0, -50.0, 0],\n                scale: 750\n            }}\n        >\n            <ZoomableGroup\n                center={[0, 0]}\n                zoom={1}\n            >\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) => (\n                        <>\n                            {geographies\n                            .map(geo => {\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <Geography \n                                            key={geo.rsmKey} \n                                            geography={geo} \n                                            fill={cur ? colorScale(data[cur].nb_companies) : \"#D6D6DA\"}\n                                            stroke=\"#EAEAEC\"\n                                            onMouseEnter={() => {\n                                                const { NAME, POP_EST } = geo.properties;\n                                                const nb_companies = cur ? data[cur].nb_companies : 0;\n                                                setTooltipContent(`${NAME} - ${nb_companies}`);\n                                            }}\n                                            onMouseLeave={() => {\n                                                setTooltipContent(\"\");\n                                            }}\n                                        />\n                                );\n                            })}\n                            {/* {geographies.map(geo => {\n                                const centroid = geoCentroid(geo);\n                                const { ISO_A3 } = geo.properties;\n                                const cur = ids.find(id => data[id].iso3 === ISO_A3);\n                                return (\n                                    <g key={geo.rsmKey + \"-name\"}>\n                                        {cur &&\n                                            <Marker coordinates={centroid}>\n                                                <text y=\"2\" fontSize={9} textAnchor=\"middle\">\n                                                {data[cur].nicename}\n                                                </text>\n                                            </Marker>\n                                        }\n                                    </g>\n                                );\n                            })} */}\n                        </>\n                    )}\n                </Geographies>\n            </ZoomableGroup>\n        </ComposableMap>\n    );\n});\n\nexport const CompaniesMap = () => {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <div>\n            <Map setTooltipContent={setContent} />\n            <ReactTooltip>{content}</ReactTooltip>\n        </div>\n    );\n}","import * as React from 'react';\nimport { Box, Grid } from '@material-ui/core';\n\nimport { Welcome } from './Welcome';\nimport { DealsChart } from './DealsChart';\nimport { HotContacts } from './HotContacts';\nimport { LatestNotes } from './LatestNotes';\nimport { DealsPipeline } from './DealsPipeline';\nimport { CompaniesMap } from './CompaniesMap';\n\nexport const Dashboard = () => {\n    return (\n        <>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={8}>\n                    <CompaniesMap />\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <HotContacts />\n                </Grid>\n                <Grid item xs={12}>\n                    <LatestNotes />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form } from 'react-final-form';\nimport { useLocation, Link as RouterLink  } from 'react-router-dom';\nimport {\n    Button,\n    CardActions,\n    CircularProgress,\n    TextField,\n    Grid,\n    CardContent,\n    Typography,\n    Link,\n    Container,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    useTranslate, \n    useNotify, \n    useLogin, \n    useSafeSetState, \n    useRedirect,\n    useAuthProvider,\n} from 'react-admin';\nimport axios from 'axios';\n\n\nconst baseURL = \"/auth\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    button: {\n        width: '100%',\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nconst Input = ({\n    meta: { touched, error }, // eslint-disable-line react/prop-types\n    input: inputProps, // eslint-disable-line react/prop-types\n    ...props\n}: {\n    meta: any;\n    input: any;\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\ninterface FormValues {\n    first_name: string;\n    last_name: string;\n    email: string;\n    username: string;\n    password: string;\n    confirm: string;\n}\n\nconst RegisterForm = ({ redirectTo }:\n    {redirectTo?: string | undefined;}) => {\n    const authProvider = useAuthProvider();\n    const [loading, setLoading] = useSafeSetState(false);\n    const translate = useTranslate();\n    const login = useLogin();\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const classes = useStyles();\n\n    const validate = ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password, \n        confirm \n    }: FormValues) => {\n        const errors = { \n            first_name: !first_name ? translate('ra.validation.required') : undefined, \n            last_name: !last_name ? translate('ra.validation.required') : undefined, \n            email: !email ? translate('ra.validation.required') : undefined, \n            username: !username ? translate('ra.validation.required') : undefined, \n            password: !password ? translate('ra.validation.required') : undefined, \n            confirm: password !== confirm ? 'Confirmation should match password': undefined\n        };\n        return errors;\n    };\n\n    interface ResponseType {\n        message: string;\n    }\n\n    const submit = async ({ \n        first_name,\n        last_name,\n        email,\n        username, \n        password,\n    }: FormValues) => {\n        setLoading(true);\n        try{\n            const response = await authProvider.register({ \n                    first_name,\n                    last_name,\n                    email,\n                    username, \n                    password\n                });\n        \n            setLoading(false)\n            login({ username, password }, redirectTo)\n        } catch (error: any) {\n            setLoading(false);\n            notify(error.message, 'warning');\n        }\n    };\n\n    return (\n        <Form\n            onSubmit={submit}\n            validate={validate}\n            render={({ handleSubmit }) => (\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <CardContent>\n                        <Container maxWidth=\"xs\">\n                        <Grid container spacing={2} >\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"first_name\"\n                                        name=\"first_name\"\n                                        component={Input}\n                                        label=\"First Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"last_name\"\n                                        name=\"last_name\"\n                                        component={Input}\n                                        label=\"Last Name\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"email\"\n                                        name=\"email\"\n                                        component={Input}\n                                        label=\"Email Address\"\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        autoFocus\n                                        id=\"username\"\n                                        name=\"username\"\n                                        component={Input}\n                                        label={translate('ra.auth.username')}\n                                        disabled={loading}\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"password\"\n                                        name=\"password\"\n                                        component={Input}\n                                        label={translate('ra.auth.password')}\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.input}>\n                                    <Field\n                                        id=\"confirm\"\n                                        name=\"confirm\"\n                                        component={Input}\n                                        label=\"Confirm Password\"\n                                        type=\"password\"\n                                        disabled={loading}\n                                        autoComplete=\"current-password\"\n                                        required\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                    </CardContent>\n                    <CardActions className={classes.actions}>\n                        <Button\n                            variant=\"contained\"\n                            type=\"submit\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.button}\n                            fullWidth\n                        >\n                            {loading && (\n                                <CircularProgress\n                                    size={25}\n                                    thickness={2}\n                                />\n                            )}\n                            Register\n                        </Button>\n                        <Typography variant=\"body2\">Or</Typography>\n                        <Link\n                            color=\"textSecondary\"\n                            component={RouterLink}\n                            to=\"/login\"\n                            variant=\"body1\"\n                        >\n                            Login\n                        </Link>\n                    </CardActions>\n                </form>\n            )}\n        />\n    );\n};\n\nRegisterForm.propTypes = {\n    redirectTo: PropTypes.string,\n};\n\nexport default RegisterForm;","import React, { ReactNode, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n    Card, \n    CardContent, \n    Theme, \n    Avatar,\n    Grid,\n    Link,\n} from '@material-ui/core';\nimport {\n    Notification,\n} from 'react-admin';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { lightTheme } from '../layout/themes';\n\nimport RegisterForm from './RegisterForm';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n        main: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '100vh',\n            // height: '1px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundImage:\n                'radial-gradient(circle at 50% 50%, #313264 0%, #00023b 50%, #00023b 100%)',\n        },\n        card: {\n            minWidth: 300,\n            // marginTop: '6em',\n        },\n        avatar: {\n            margin: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n        },\n        icon: {\n            backgroundColor: theme.palette.secondary.main,\n        },\n        hint: {\n            marginTop: '1em',\n            display: 'flex',\n            justifyContent: 'center',\n            color: theme.palette.grey[500],\n        },\n    }),\n    { name: 'Register' }\n);\n\nconst Register = () => {\n    const classes = useStyles();\n    return (\n            <div className={classes.main}>\n                <Card className={classes.card}>\n                    <div className={classes.avatar}>\n                        <Avatar className={classes.icon}>\n                            <ExitToAppIcon />\n                        </Avatar>\n                    </div>\n                    <div className={classes.hint}>\n                                Register to Assistor.\n                            </div>\n                    <RegisterForm />\n                </Card>\n                <Notification />\n            </div>\n    );\n}\n\nconst RegisterWithTheme = (props: any) => (\n    <ThemeProvider theme={createTheme(lightTheme)}>\n        <Register {...props} />\n    </ThemeProvider>\n);\n\nexport default RegisterWithTheme;","import { ThemeName } from '../types';\n\nexport const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = (theme: ThemeName) => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { useTranslate, useLocale, useSetLocale, Title } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { changeTheme } from './actions';\nimport { AppState } from '../types';\n\nconst useStyles = makeStyles({\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n});\n\nconst Configuration = () => {\n    const translate = useTranslate();\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const theme = useSelector((state: AppState) => state.theme);\n    const dispatch = useDispatch();\n    return (\n        <Card>\n            <Title title={translate('pos.configuration')} />\n            <CardContent>\n                <div className={classes.label}>\n                    {translate('pos.theme.name')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'light' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('light'))}\n                >\n                    {translate('pos.theme.light')}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={theme === 'dark' ? 'primary' : 'default'}\n                    onClick={() => dispatch(changeTheme('dark'))}\n                >\n                    {translate('pos.theme.dark')}\n                </Button>\n            </CardContent>\n            <CardContent>\n                <div className={classes.label}>{translate('pos.language')}</div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'en' ? 'primary' : 'default'}\n                    onClick={() => setLocale('en')}\n                >\n                    en\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'fr' ? 'primary' : 'default'}\n                    onClick={() => setLocale('fr')}\n                >\n                    fr\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    color={locale === 'ja' ? 'primary' : 'default'}\n                    onClick={() => setLocale('ja')}\n                >\n                    ja\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Configuration;","import * as React from \"react\";\nimport { RouteWithoutLayout } from 'react-admin';\nimport { Route } from 'react-router-dom';\nimport Register from './auth/RegisterPage';\nimport Configuration from './configuration/Configuration';\n\nexport const customRoutes = [\n    <RouteWithoutLayout exact path=\"/register\" component={Register} />,\n    <Route exact path=\"/configuration\" render={() => <Configuration />} />,\n];","import { TranslationMessages } from 'react-admin';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n\n};\n\nexport default customEnglishMessages;","import * as React from 'react';\nimport { Admin, Resource, ListGuesser, EditGuesser, ShowGuesser, defaultTheme } from 'react-admin';\nimport {\n    unstable_createMuiStrictModeTheme,\n    createTheme,\n} from '@material-ui/core/styles';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\nimport { dataProvider } from './dataProvider';\nimport { authProvider } from './authProvider';\nimport { Login, Layout } from './layout';\nimport contacts from './contacts';\nimport companies from './companies';\nimport products from './products';\nimport tasks from './tasks';\nimport productfamiliess from './productFamilies';\nimport deals from './deals';\nimport { Dashboard } from './dashboard/Dashboard';\nimport { customRoutes } from './customRoutes';\n// import Login from './Login'\nimport productFamilies from './productFamilies';\nimport englishMessages from './i18n/en';\n\n// FIXME MUI bug https://github.com/mui-org/material-ui/issues/13394\nconst theme =\n    process.env.NODE_ENV !== 'production'\n        ? unstable_createMuiStrictModeTheme(defaultTheme)\n        : createTheme(defaultTheme);\n\nconst i18nProvider = polyglotI18nProvider(locale => {\n    if (locale === 'fr') {\n        return import('./i18n/fr').then(messages => messages.default);\n    }\n    \n    if (locale === 'ja') {\n        return import('./i18n/ja').then(messages => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n}, 'en');\n\nconst App = () => (\n    <Admin\n        customRoutes={customRoutes}\n        dataProvider={dataProvider}\n        authProvider={authProvider}\n        loginPage={Login}\n        layout={Layout}\n        dashboard={Dashboard}\n        theme={theme}\n        i18nProvider={i18nProvider}\n        disableTelemetry\n    >\n        <Resource name=\"deals\" {...deals} />\n        <Resource name=\"contacts\" {...contacts} />\n        <Resource name=\"companies\" {...companies} />\n        <Resource name=\"products\" {...products} />\n        <Resource name=\"productProperties\" />\n        <Resource name=\"propertyTypes\" />\n        <Resource name=\"contactNotes\" />\n        <Resource name=\"companyNotes\" />\n        <Resource name=\"productNotes\" />\n        <Resource name=\"dealNotes\" />\n        <Resource name=\"productFamilies\" {...productFamilies} />\n        <Resource name=\"tasks\" {...tasks} />\n        <Resource name=\"sales\" list={ListGuesser} />\n        <Resource name=\"tags\" list={ListGuesser} />\n        <Resource name=\"countries\" list={ListGuesser} />\n    </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}